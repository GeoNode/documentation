# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-2020, Open Source Geospatial Foundation, CC-SA
# This file is distributed under the same license as the GeoNode package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GeoNode 3.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-27 15:38+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../advanced/components/index.rst:4 43bed57a4c144b06a8b0852410bc2a78
msgid "OAuth2 Security: Authentication and Authorization"
msgstr ""

#: ../../advanced/components/index.rst:5 82052d6461234fa6820a7a7527b7ee70
msgid ""
"GeoNode interacts with GeoServer through an advanced security mechanism "
"based on OAuth2 Protocol and GeoFence. This section is a walk through of "
"the configuration and setup of GeoNode and GeoServer Advanced Security."
msgstr ""

#: ../../advanced/components/index.rst:7 5402e22a30ce4b0d98ea4a1f6204809f
msgid "What we will see in this section is:"
msgstr ""

#: ../../advanced/components/index.rst:9 10a2fab16c504e14b3e5302480b86d94
msgid "**Introduction**"
msgstr ""

#: ../../advanced/components/index.rst:11 8c85225914d044578827f6294421bc32
msgid "**GeoNode** (Security Backend):"
msgstr ""

#: ../../advanced/components/index.rst:13
#: ../../advanced/components/index.rst:77 45da659f51ef45fe80a795afcd42d40c
#: ed580205a0454046a872c65b8df59dd2
msgid "DJango Authentication"
msgstr ""

#: ../../advanced/components/index.rst:15
#: ../../advanced/components/index.rst:253 320f644babcb46f59af9957729412fa9
#: cceabc48662d4f52900877ca08295934
msgid "DJango OAuth Toolkit Setup and Configuration"
msgstr ""

#: ../../advanced/components/index.rst:17 80cdbb41e2944e00a45f19c273ac7c6f
msgid "Details on ``settings.py`` Security Settings"
msgstr ""

#: ../../advanced/components/index.rst:19 a9fa1407f9594b45b64facc382f0c401
msgid "**GeoServer** (Security Backend):"
msgstr ""

#: ../../advanced/components/index.rst:21
#: ../../advanced/components/index.rst:444 1183b90c6ba9484eb60f1c3d1fa1ad1f
#: 799dd2af5d4146018cfc37bda2fdac44
msgid "GeoServer Security Subsystem"
msgstr ""

#: ../../advanced/components/index.rst:23 c870961bfcba4143a7496f2d6a2c14ed
msgid "Introduction to the GeoServer OAuth2 Security Plugin"
msgstr ""

#: ../../advanced/components/index.rst:25 07a950e978914bb7b7b46bd876defff6
msgid "Configuration of the ``GeoNode REST Role Service``"
msgstr ""

#: ../../advanced/components/index.rst:27 85e67070a0b64e0591cad0877c82f062
msgid "Configuration of the ``GeoNode OAuth2 Authentication Filter``"
msgstr ""

#: ../../advanced/components/index.rst:29 3cbf0f5727574b08a0045d470bf5797d
msgid "The GeoServer Authentication Filter Chains"
msgstr ""

#: ../../advanced/components/index.rst:31 08cf50e727df47c991c3a4c0ecec9706
msgid ""
"Introduction to GeoFence Plugin, the Advanced Security Framework for "
"GeoServer"
msgstr ""

#: ../../advanced/components/index.rst:33 602d1481068648d2bc8d4f9d6e25cb19
msgid "**Troubleshooting and Advanced Features**:"
msgstr ""

#: ../../advanced/components/index.rst:35
#: ../../advanced/components/index.rst:792 08864e44d74745d1b772271b96a4a373
#: c5157cbe6830468dbe1c010c9ed96f03
msgid "Common Issues and Fixes"
msgstr ""

#: ../../advanced/components/index.rst:37
#: ../../advanced/components/index.rst:852 28d25fd9879f4926bac778a07e80552f
#: 7d95149bf05445ea890e2473dd5ea48a
msgid "How to setup ``HTTPS`` secured endpoints"
msgstr ""

#: ../../advanced/components/index.rst:39
#: ../../advanced/components/index.rst:982 c15ccff6c87045ae850ca5109d5970d1
#: cd7ba8219c2f49ad926ebd7b4d7059be
msgid "GeoFence Advanced Features"
msgstr ""

#: ../../advanced/components/index.rst:42 71f7f29ea0854dbba7c86fb64299b193
msgid "Introduction"
msgstr ""

#: ../../advanced/components/index.rst:44 c8716991febc470f94c9c0e394cd81a2
msgid ""
"GeoServer, i.e. the geospatial backend server of GeoNode, is a spatial "
"server which needs authenticated users in order to access protected "
"resources or administration functions."
msgstr ""

#: ../../advanced/components/index.rst:46 4c03270bd0324797b79ba25cb4d8b685
msgid ""
"GeoServer supports several kind of Authentication and Authorization "
"mechanisms. Those systems are pluggable and GeoServer can use them at the"
" same time by the use of a ``Filter Chain``. Briefly this mechanism "
"allows GeoServer to check for different A&A protocols one by one. The "
"first one matching is used by GeoServer to authorize the users."
msgstr ""

#: ../../advanced/components/index.rst:49 95225df6faa849039f4ad85bb8707713
msgid ""
"GeoNode Authentication is based by default on Django Security Subsystem. "
"Django authentication allows GeoNode to manage its internal users, "
"groups, roles and sessions."
msgstr ""

#: ../../advanced/components/index.rst:51 4ab7860867424268bf4afe0aeb35e394
msgid ""
"GeoNode has some external components, like GeoServer or QGis Server, "
"which are pluggable and stand-alone services, devoted to the management "
"of geospatial data. Those external services have their own authentication"
" and authorization mechanisms which must be synchronized somehow with the"
" GeoNode one. Also, those external services maintain, in most of the "
"cases and unless specific configuration does not disable this, "
"alternative security access which for instance allow GeoNode to modify "
"the geospatial catalog under the hood, or a system administrator to have "
"independent and privileged access to the servers."
msgstr ""

#: ../../advanced/components/index.rst:56 7b55f37f340a43f7a2f71043a5e0960a
msgid ""
"Before going deeply on how GeoServer/GeoNode A&A works and how it can be "
"configured in order to work correctly with GeoNode, let's quickly clarify"
" the difference between the ``Authentication`` and ``Authorization`` "
"concepts."
msgstr ""

#: ../../advanced/components/index.rst:59 44c8f4bb24814d07a262cf19a8507296
msgid "Authentication"
msgstr ""

#: ../../advanced/components/index.rst:61 9aba5316a4fa439da7b6dc40544bfb76
msgid ""
"Authentication is the process of verifying the identity of someone "
"through the use of some sort of credentials and a handshake protocol. If "
"the credentials are valid, the authorization process starts. "
"Authentication process always proceeds to Authorization process (although"
" they may often seem to be combined). The two terms are often used "
"synonymously but they are two different processes."
msgstr ""

#: ../../advanced/components/index.rst:65 d99617183e5c46bdb14321cfb61739ec
msgid ""
"For more details and explanation about the authentication concepts, take "
"a look `here "
"<http://searchsecurity.techtarget.com/definition/authentication>`_."
msgstr ""

#: ../../advanced/components/index.rst:68 c370b325abf14add92307670b961682b
msgid "Authorization"
msgstr ""

#: ../../advanced/components/index.rst:70 359f2717e080405bb8b909bcf4a1dd32
msgid ""
"Authorization is the process of allowing authenticated users to access "
"protected resources by checking its roles and rights against some sort of"
" security rules mechanism or protocol. In other words it allows to "
"control access rights by granting or denying specific permissions to "
"specific authorized users."
msgstr ""

#: ../../advanced/components/index.rst:74 245389c57c8046bf83ebfb3033a2fc50
msgid "GeoNode Security Backend"
msgstr ""

#: ../../advanced/components/index.rst:79 cb4843fe1fdd481ea15a4fb9029ee56c
msgid ""
"The Django authentication system handles both authentication and "
"authorization."
msgstr ""

#: ../../advanced/components/index.rst:81 3c1ffde0b8a1405b9ea2a033446be4c5
msgid "The auth system consists of:"
msgstr ""

#: ../../advanced/components/index.rst:83 432db9b99fed45e88104a8f5ec03a7f8
msgid "Users"
msgstr ""

#: ../../advanced/components/index.rst:84 fd87511a79904a7f981dd15db9037641
msgid ""
"Permissions: Binary (yes/no) flags designating whether a user may perform"
" a certain task."
msgstr ""

#: ../../advanced/components/index.rst:85 314bc494a4ed404d95f65b22a68bcdbb
msgid ""
"Groups: A generic way of applying labels and permissions to more than one"
" user."
msgstr ""

#: ../../advanced/components/index.rst:86 d3a9668282a64354bec024256a923e49
msgid "A configurable password hashing system"
msgstr ""

#: ../../advanced/components/index.rst:87 736d7d1e0ea5440a91e5e7661f9fd873
msgid "Forms and view tools for logging in users, or restricting content"
msgstr ""

#: ../../advanced/components/index.rst:88 56fe2380d0964a6fa0cb55416bab30f7
msgid "A pluggable backend system"
msgstr ""

#: ../../advanced/components/index.rst:90 80c416a7c15c4454977a4ecfc0a8b154
msgid ""
"The authentication system in Django aims to be very generic and doesnâ€™t "
"provide some features commonly found in web authentication systems. "
"Solutions for some of these common problems have been implemented in "
"third-party packages:"
msgstr ""

#: ../../advanced/components/index.rst:92 095ec04018ac42ac9b8cf4cfa591c3c1
msgid "Password strength checking"
msgstr ""

#: ../../advanced/components/index.rst:93 f870f2adf3f5477388f00c811b835405
msgid "Throttling of login attempts"
msgstr ""

#: ../../advanced/components/index.rst:94 9277ecbb2de74d57b348a92e8e12d4f7
msgid "Authentication against third-parties (OAuth, for example)"
msgstr ""

#: ../../advanced/components/index.rst:96 36f8b256fc4d479b98fb8c89f0ccbb90
msgid ""
"For more details on installation and configuration of Django "
"authentication system, please refer to the official guide "
"https://docs.djangoproject.com/en/3.2/topics/auth/."
msgstr ""

#: ../../advanced/components/index.rst:98 7eba7a4136c145208d80d245fa74c3dd
msgid ""
"GeoNode communicates with GeoServer through Basic Authentication under "
"the hood, in order to configure the data and the GeoServer catalog."
msgstr ""

#: ../../advanced/components/index.rst:100 1a00b60f1c80441f94dc798cb98c1513
msgid ""
"In order to do this, you must be sure that GeoNode knows the **internal**"
" admin user and password of GeoServer."
msgstr ""

#: ../../advanced/components/index.rst:102 3ba2a9eb7b3947959afd3bb58f1611ab
msgid ""
"This must be an internal GeoServer user with admin rights, not a GeoNode "
"one."
msgstr ""

#: ../../advanced/components/index.rst:104 758f811d2477477da344838dfdc33fe6
msgid ""
"Make sure the credentials are correctly configured into the file "
"``settings.py``"
msgstr ""

#: ../../advanced/components/index.rst:107 b7259a308f1f45d3a02caecab1589b9d
msgid "OGC_SERVER"
msgstr ""

#: ../../advanced/components/index.rst:109 33d54747f87344a9ae1d5caa42f9ed64
msgid "Ensure that the ``OGC_SERVER`` settings are correctly configured."
msgstr ""

#: ../../advanced/components/index.rst:111 e54b92c1e77d4de8933fafd11d9f6eca
msgid ""
"Notice that the two properties ``LOGIN_ENDPOINT`` and ``LOGOUT_ENDPOINT``"
" must specify the GeoServer OAuth2 Endpoints (see details below). The "
"default values ``'j_spring_oauth2_geonode_login'`` and "
"``'j_spring_oauth2_geonode_logout'`` work in most of the cases, unless "
"you need some specific endpoints different from the later. In any case "
"those values **must** be coherent with the GeoServer OAuth2 Plugin "
"configuration."
msgstr ""

#: ../../advanced/components/index.rst:115 c0e8208ae65d44d5ac4e75278a7f6552
msgid "If in doubt, please use the default values here below."
msgstr ""

#: ../../advanced/components/index.rst:117
#: ../../advanced/components/index.rst:271
#: ../../advanced/components/index.rst:284
#: ../../advanced/components/index.rst:306
#: ../../advanced/components/index.rst:337 79286b59d6ae426c8d97e8ce8b2ad52b
#: 8f903f9f34ca4a2b88f880e8d3a33fe8 b3f0332c49f14dbca6c130d16e03c7c0
#: c3755751c73f4e2dad5d5100d39c383f fbad00a90be945bd8c3ce22228408fb1
msgid "Default values are:"
msgstr ""

#: ../../advanced/components/index.rst:151 f4b4fc3fd38c430786b462470b03e651
msgid "GeoNode and GeoServer A&A Interaction"
msgstr ""

#: ../../advanced/components/index.rst:153 a9732500ba814c98a4c788307bb909ef
msgid ""
"The GeoServer instance used by GeoNode, has a particular setup that "
"allows the two frameworks to correctly interact and exchange informations"
" on users credentials and permissions."
msgstr ""

#: ../../advanced/components/index.rst:155 1fa39d575e0a4f51ba36f0fa6ed2cc07
msgid ""
"In particular GeoServer is configured with a ``Filter Chain`` for "
"Authorization that makes use of the two following protocols:"
msgstr ""

#: ../../advanced/components/index.rst:161 bd6941162111448cb44d88d5e4d078d8
msgid ""
"**Basic Authentication**; this is the default GeoServer Authentication "
"mechanism. This makes use of `rfc2617 - Basic and Digest Access "
"Authentication <https://tools.ietf.org/html/rfc2617>`_ in order to check "
"for user's credentials."
msgstr ""

#: ../../advanced/components/index.rst:158 92246eb874884fc7baea25dc6d308866
msgid ""
"In other words, GeoServer takes a ``username`` and a ``password`` encoded"
" `Base64 <https://tools.ietf.org/html/rfc4648>`_ on the HTTP Request "
"Headers and compare them against its internal database (which by default "
"is an encrypted XML file on the GeoServer Data Dir). If the user's "
"credentials match, then GeoServer checks for Authorization through its "
"``Role Services`` (we will see those services in details on the "
"*GeoServer (Security Backend)* section below)."
msgstr ""

#: ../../advanced/components/index.rst:161 5c82da9347bf4b42afa3bc81b20ac39e
msgid ""
"GeoServer ships by default with ``admin`` and ``geoserver`` as the "
"default administrator user name and password. Before putting the "
"GeoServer on-line it is imperative to change at least the administrator "
"password."
msgstr ""

#: ../../advanced/components/index.rst:163 eab8f848f38b4d389c8f8ddd0177aff4
msgid ""
"**OAuth2 Authentication**; this module allows GeoServer to authenticate "
"against the `OAuth2 Protocol <https://tools.ietf.org/html/rfc6749>`_. If "
"the Basic Authentication fails, GeoServer falls back to this by using "
"GeoNode as OAuth2 Provider by default."
msgstr ""

#: ../../advanced/components/index.rst:165 9ad58960a10f446a9e53921325214056
msgid ""
"Further details can be found directly on the official GeoServer "
"documentation at section \"`Authentication Chain "
"<http://docs.geoserver.org/latest/en/user/security/auth/chain.html"
"#security-auth-chain>`_\""
msgstr ""

#: ../../advanced/components/index.rst:167 9afbca5e8e6e4741b725f51dd77952a1
msgid ""
"From the **GeoNode backend (server) side**, the server will make use of "
"**Basic Authentication** with administrator credentials to configure the "
"GeoServer catalog. GeoServer must be reachable by GeoNode of course, and "
"GeoNode must know the internal GeoServer admin credentials."
msgstr ""

#: ../../advanced/components/index.rst:169 f68c3a8adb4b4d0c8ee85d5c42aaec0d
msgid ""
"From the **GeoNode frontend (browser and GUI) side**, the "
"*Authentication* goal is to allow GeoServer to recognize as valid a user "
"which has been already logged into GeoNode, providing kind of an `SSO "
"<https://en.wikipedia.org/wiki/Single_sign-on>`_ mechanism between the "
"two applications."
msgstr ""

#: ../../advanced/components/index.rst:171 428a91179dae4f38b219e70fe160299d
msgid ""
"GeoServer must know and must be able to access GeoNode via HTTP/HTTPS. In"
" other words, an external user connected to GeoNode must be authenticated"
" to GeoServer with same permissions. This is possible through the "
"**OAuth2 Authentication** Protocol."
msgstr ""

#: ../../advanced/components/index.rst:173 5e24c467cd4041d190abbb2cd5ac7288
msgid "**GeoNode / GeoServer Authentication Mechanism**"
msgstr ""

#: ../../advanced/components/index.rst:175 fac4251b7fc4446a810cd04aedd5b7b7
msgid "*GeoNode as OAuth2 Provider (OP)*"
msgstr ""

#: ../../advanced/components/index.rst:177 7378e8a36dda4e5689d00e10cb5c6a67
msgid ""
"OpenID Connect is an identity framework built on OAuth 2.0 protocol which"
" extends the authorization of OAuth 2.0 processes to implement its "
"authentication mechanism. OpenID Connect adds a discovery mechanism "
"allowing users to use an external trusted authority as an identity "
"provider. From another point of view, this can be seen as a single sign "
"on (SSO) system."
msgstr ""

#: ../../advanced/components/index.rst:179 37093782cc3249f0bfd0c03e5fa883f4
msgid ""
"OAuth 2.0 is an authorization framework which is capable of providing a "
"way for clients to access a resource with restricted access on behalf of "
"the resource owner. OpenID Connect allows clients to verify the users "
"with an authorization server based authentication."
msgstr ""

#: ../../advanced/components/index.rst:181 c9971513243d43bfb7bede55beb8739c
msgid ""
"As an OP, GeoNode will be able to act as trusted identity provider, thus "
"allowing the system working on an isolated environment and/or allow "
"GeoNode to authenticate private users managed by the local DJango auth "
"subsystem."
msgstr ""

#: ../../advanced/components/index.rst:183 d4c256cc7f054d8ca9423e25f96cf4b9
msgid "*GeoServer as OAuth2 Relying Party (RP)*"
msgstr ""

#: ../../advanced/components/index.rst:185 04d88001ffe7426587f77a3a45226f40
msgid ""
"Thanks to the **OAuth2 Authentication** GeoServer is able to retrieve an "
"end user's identity directly from the OAuth2 Provider (OP)."
msgstr ""

#: ../../advanced/components/index.rst:187 338045cd271a419e9662c99a429d5220
msgid ""
"With GeoNode acting as an OP, the mechanism will avoid the use of cookies"
" relying, instead, on the OAuth2 secure protocol."
msgstr ""

#: ../../advanced/components/index.rst:189 d2d5a019d6b241a989672590e9aa17ab
msgid "How the OAuth2 Protocol works:"
msgstr ""

#: ../../advanced/components/index.rst:193 70786662328b4575bc16ad7c51386eec
msgid ""
"The relying party sends the request to the OAuth2 provider to "
"authenticate the end user"
msgstr ""

#: ../../advanced/components/index.rst:195 a409408c834a40c2b7bd1a4d1b3d0760
msgid "The OAuth2 provider authenticates the user"
msgstr ""

#: ../../advanced/components/index.rst:197 95b5c6bf637945a08c3696f174b3968d
msgid ""
"The OAuth2 provider sends the ID token and access token to the relying "
"party"
msgstr ""

#: ../../advanced/components/index.rst:199 0a985cb4fc084f33870a7cf645528985
msgid ""
"The relying party sends a request to the user info endpoint with the "
"access token received from OAuth2 provider"
msgstr ""

#: ../../advanced/components/index.rst:201 07dfb9fb100340ad87120c0333ddd45a
msgid "The user info endpoint returns the claims."
msgstr ""

#: ../../advanced/components/index.rst:203 872b5c09662044789ce4943574a4404b
msgid "**GeoNode / GeoServer Authorization Mechanism**"
msgstr ""

#: ../../advanced/components/index.rst:205 b30388c6b116482c87418dde46bad961
msgid ""
"Allowing GeoServer to make use of a OAuth2 in order to act as an OAuth2 "
"RP, is not sufficient to map a user identity to its roles though."
msgstr ""

#: ../../advanced/components/index.rst:207 b9819ece4b5c4092b589a5f2e3351c2b
msgid ""
"On GeoServer side we will still need to a ``RoleService`` which would be "
"able to talk to GeoNode and transform the tokens into a User Principal to"
" be used within the GeoServer Security subsystem itself."
msgstr ""

#: ../../advanced/components/index.rst:209 4831d3812a804795aaed84999e2cb5f8
msgid ""
"In other words after a successfull Authentication, GeoServer needs to "
"Authorize the user in order to understand which resources he is enable to"
" access or not. A ``REST based RoleService`` on GeoNode side, allows "
"GeoServer to talk to GeoNode via `REST "
"<https://en.wikipedia.org/wiki/Representational_state_transfer>`_ to get "
"the current user along with the list of its Roles."
msgstr ""

#: ../../advanced/components/index.rst:212 8780583a5623413aa91b14cedde165f9
msgid ""
"Nevertheless knowing the Roles associated to a user is not sufficient. "
"The complete GeoServer Authorization needs to catch a set of ``Access "
"Rules``, associated to the Roles, in order to establish which resources "
"and data are accessible by the user."
msgstr ""

#: ../../advanced/components/index.rst:214 04efca819eb44135a51714b3c8af252a
msgid ""
"The GeoServer Authorization is based on Roles only, therefore for each "
"authenticated user we need also to know:"
msgstr ""

#: ../../advanced/components/index.rst:216 2f9a02621c2d4d9eb600ba5a38c906ea
msgid "The Roles associated to a valid user session"
msgstr ""

#: ../../advanced/components/index.rst:218 90a7c2f360314ef996397f578e1d4c31
msgid "The access permissions associated to a GeoServer Resource"
msgstr ""

#: ../../advanced/components/index.rst:220 5da53768c1634b8fa1e6599bc1a997cc
msgid ""
"The Authentication mechanism above allows GeoServer to get information "
"about the user and his Roles, which addresses point 1."
msgstr ""

#: ../../advanced/components/index.rst:222 682c525f9da34bf68f97cbb6ae6b0981
msgid ""
"About point 2, GeoServer makes use of the `GeoFence Embedded Server "
"<http://docs.geoserver.org/latest/en/user/community/geofence-"
"server/index.html>`_ plugin. GeoFence is a java web application that "
"provides an advanced authentication / authorization engine for GeoServer "
"using the interface described in `here "
"<https://github.com/geoserver/geofence/wiki/First-steps>`_. GeoFence has "
"its own rules database for the management of Authorization rules, and "
"overrides the standard GeoServer security management system by "
"implementing a sophisticated Resource Access Manager. Least but not last,"
" GeoFence implements and exposes a `REST API "
"<https://github.com/geoserver/geofence/wiki/REST-API>`_ allowing remote "
"authorized clients to read / write / modify security rules."
msgstr ""

#: ../../advanced/components/index.rst:227 7b1e6643292948b8950accca1c7bf73b
msgid "The advantages using such plugin are multiple:"
msgstr ""

#: ../../advanced/components/index.rst:229 fe4d7d32179a4fc48bcb23c084f15ddf
msgid ""
"The Authorizations rules have a fine granularity. The security rules are "
"handled by GeoFence in a way similar to the iptables ones, and allow to "
"define security constraints even on sub-regions and attributes of layers."
msgstr ""

#: ../../advanced/components/index.rst:231 f5b6ceece6aa4bce9db4736d8de37020
msgid ""
"GeoFence exposes a REST interface to its internal rule database, allowing"
" external managers to update the security constraints programmatically"
msgstr ""

#: ../../advanced/components/index.rst:233 095531cd5b5741fba33c495d6e244f52
msgid ""
"GeoFence implements an internal caching mechanism which improves "
"considerably the performances under load."
msgstr ""

#: ../../advanced/components/index.rst:235 ab4a60ade9614df88d82dca31aad82bb
msgid "*GeoNode interaction with GeoFence*"
msgstr ""

#: ../../advanced/components/index.rst:237 90749ad000dc4a908a432b2d05fc025b
msgid ""
"GeoNode itself is able to push/manage Authorization rules to GeoServer "
"through the GeoFence `REST API "
"<https://github.com/geoserver/geofence/wiki/REST-API>`_, acting as an "
"administrator for GeoServer. GeoNode properly configures the GeoFence "
"rules anytime it is needed, i.e. the permissions of a Resource / Layer "
"are updated."
msgstr ""

#: ../../advanced/components/index.rst:240 4190dea3e02149df81c3b5b19e078f48
msgid ""
"GeoServer must know and must be able to access GeoNode via HTTP/HTTPS. In"
" other words, an external user connected to GeoNode must be authenticated"
" to GeoServer with same permissions. This is possible through the "
"**GeoNodeCoockieProcessingFiler**."
msgstr ""

#: ../../advanced/components/index.rst:242 8ee78cb5c78d4ebab3488dbc47af0c94
msgid "Summarizing we will have different ways to access GeoNode Layers:"
msgstr ""

#: ../../advanced/components/index.rst:244 d8bd9a06bd4b42589049f751b80a887a
msgid ""
"Through GeoNode via DJango Authentication and "
"**GeoNodeCoockieProcessingFiler**; basically the users available in "
"GeoNode are also valid for GeoServer or any other backend."
msgstr ""

#: ../../advanced/components/index.rst:246 7abf4a0a3ded4686be3a64488bd91ae7
msgid ""
"If a GeoNode user has \"administrator\" rights, he will be able to "
"administer GeoServer too."
msgstr ""

#: ../../advanced/components/index.rst:248 a858af2f057341eab896569ed0d2cbd9
msgid ""
"Through GeoServer Security Subsystem; it will be always possible to "
"access to GeoServer using its internal security system and users, unless "
"explictly disabled (**warning** this is dangerous, you must know what you"
" are doing)."
msgstr ""

#: ../../advanced/components/index.rst:250 ef2662defa5e4bd18bf26b8ed5e05e55
msgid ""
"Let's now see in details how the single pieces are configured and how "
"they can be configured."
msgstr ""

#: ../../advanced/components/index.rst:255 6d3a2f1b3b3c4cb79b73c9ddcc972791
msgid ""
"As stated above, GeoNode makes use of the OAuth2 protocol for all the "
"frontend interactions with GeoServer. GeoNode must be configured as an "
"OAuth2 Provider and provide a ``Client ID`` and a ``Client Sercret`` key "
"to GeoServer. This is possible by enabling and configuring the `Django "
"OAuth Toolkit Plugin <https://django-oauth-"
"toolkit.readthedocs.io/en/latest/>`_."
msgstr ""

#: ../../advanced/components/index.rst:258 a945057db2b24d898a5891a3c515167c
msgid ""
"GeoNode and GeoServer won't work at all if the following steps are not "
"executed at the first installation."
msgstr ""

#: ../../advanced/components/index.rst:261 e2843dd2d93d4218b20c5cf2d15f6ac6
msgid "Default ``settings.py`` Security Settings for OAuth2"
msgstr ""

#: ../../advanced/components/index.rst:263 c57a7113c5c54aaa8b0e49a3a6baa008
msgid ""
"Double check that the OAuth2 Provider and Security Plugin is enabled and "
"that the settings below are correctly configured."
msgstr ""

#: ../../advanced/components/index.rst:266 0743ddf1c5f34f1b9d70e172668caa21
msgid "AUTH_IP_WHITELIST"
msgstr ""

#: ../../advanced/components/index.rst:268 004350a4bdbc47bda42f3a388a28a17a
msgid ""
"``AUTH_IP_WHITELIST`` property limits access to users/groups REST Role "
"Service endpoints to the only whitelisted IP addresses. Empty list means "
"'allow all'. If you need to limit 'api' REST calls to only some specific "
"IPs fill the list like this: ``AUTH_IP_WHITELIST = ['192.168.1.158', "
"'192.168.1.159']``"
msgstr ""

#: ../../advanced/components/index.rst:280 99987b656b98421d8f78d801be3891cf
msgid "INSTALLED_APPS"
msgstr ""

#: ../../advanced/components/index.rst:282 48ef397d0a844c6193ac910e383c7e43
msgid ""
"In order to allow GeoNode to act as an OAuth2 Provider, we need to enable"
" the ``oauth2_provider`` DJango application provided by the \"Django "
"OAuth Toolkit\"."
msgstr ""

#: ../../advanced/components/index.rst:302 7ecf76b2e0054bc9a109de54c26b9825
msgid "MIDDLEWARE_CLASSES"
msgstr ""

#: ../../advanced/components/index.rst:304 273da111928b461eabf1e8587862b711
msgid ""
"Installing the `oauth2_provider`` DJango application is not sufficient to"
" enable the full functionality. We need also GeoNode to include "
"additional entities to its internal model."
msgstr ""

#: ../../advanced/components/index.rst:332 ba116d97e3db4440a1a0b4f6425208ee
msgid "AUTHENTICATION_BACKENDS"
msgstr ""

#: ../../advanced/components/index.rst:334 4a701beb3f044e57891552f819837e79
msgid ""
"In order to allow GeoNode to act as an OAuth2 Provider, we need to enable"
" the ``oauth2_provider.backends.OAuth2Backend`` DJango backend provided "
"by the \"Django OAuth Toolkit\". Also notice that we need to specify the "
"OAuth2 Provider scopes and declare which ``generator`` to use in order to"
" create ``OAuth2 Client IDs``."
msgstr ""

#: ../../advanced/components/index.rst:362 1ec4d5e672a143b99519bcab0453cf77
msgid "Django OAuth Toolkit Admin Setup"
msgstr ""

#: ../../advanced/components/index.rst:364 0ed3e8e789c842c8ba25dba4a5f69505
msgid ""
"Once the ``settings.py`` and ``local_settings.py`` have been correctly "
"configured for your system:"
msgstr ""

#: ../../advanced/components/index.rst:366 c7388bf60af543a2bf85b11a337c3bc9
msgid "Complete the GeoNode setup steps"
msgstr ""

#: ../../advanced/components/index.rst:368 e5795dc32d834f89b8d008e1628f5ce4
msgid "Prepare the model"
msgstr ""

#: ../../advanced/components/index.rst:376 86bea0b1702c4a968d49a1913d74b417
msgid "Prepare the static data"
msgstr ""

#: ../../advanced/components/index.rst:382 decbd6ae6193415c894eb933943c4c0d
msgid "Make sure the database has been populated with initial default data"
msgstr ""

#: ../../advanced/components/index.rst:384
#: ../../advanced/components/index.rst:392 aa059781672d482a815598604fc60978
#: aad50c971fed40cf9bfe013ee9801016
msgid ""
"*Deprecated* this command will be replaced by migrations in the future, "
"so be careful."
msgstr ""

#: ../../advanced/components/index.rst:390 8daef5380a3f4ba78dcd413e76d00045
msgid "Make sure there exists a superuser for your environment"
msgstr ""

#: ../../advanced/components/index.rst:398 282aafcf86ab4deb924cebd292007a18
msgid ""
"Read the base tutorials on GeoNode Developer documentation for details on"
" the specific commands and how to use them."
msgstr ""

#: ../../advanced/components/index.rst:400 99a62335a80d44258b92b9cf08309783
msgid "Start the application"
msgstr ""

#: ../../advanced/components/index.rst:402 713ad77bdb3a4a1aa1db9080b5a23b30
msgid ""
"Start GeoNode accordingly on how the setup has been done; run debug mode "
"through ``paver``, or proxied by an HTTP Server like Apache2 HTTPD, Nginx"
" or others."
msgstr ""

#: ../../advanced/components/index.rst:404 00deef33180c44f6921984be7c36d519
msgid "Finalize the setup of the OAuth2 Provider"
msgstr ""

#: ../../advanced/components/index.rst:406 81f9741a649c43ac9dbdede35c2b6077
msgid ""
"First of all you need to configure and create a new OAuth2 Application "
"called ``GeoServer`` through the GeoNode Admin Dashboard"
msgstr ""

#: ../../advanced/components/index.rst:408 c224476ee05b48a79e3725cbcbaae0a5
msgid "Access the GeoNode Admin Dashboard"
msgstr ""

#: ../../advanced/components/index.rst:412 78ef4d57b51f42ae864162e2da32cd18
msgid "Go to ``Django OAuth Toolkit`` > ``Applications``"
msgstr ""

#: ../../advanced/components/index.rst:416 3f33c974f492409aa15e484249319824
msgid "Update or create the Application named ``GeoServer``"
msgstr ""

#: ../../advanced/components/index.rst:418 dc4183b869194ca09198780ade2a09cd
msgid "The Application name **must** be ``GeoServer``"
msgstr ""

#: ../../advanced/components/index.rst:422 2b3e02c527874928b6e1bdb5d70421d7
msgid ""
"``Client id``; An alphanumeric code representing the OAuth2 Client Id. "
"GeoServer OAuth2 Plugin **will** use **this** value."
msgstr ""

#: ../../advanced/components/index.rst:424
#: ../../advanced/components/index.rst:436 28e6d23ac6cf48bab5fab1315584b3f3
#: d84015dc5d0f403b9bca590ac4be5883
msgid ""
"In a production environment it is **highly** recommended to modify the "
"default value provided with GeoNode installation."
msgstr ""

#: ../../advanced/components/index.rst:426 b8e93366bff94b5fbf231d660c3c352f
msgid ""
"``User``; Search for the ``admin`` user. Its ``ID`` will be automatically"
" updated into the form."
msgstr ""

#: ../../advanced/components/index.rst:428 b047a3fb5cd645c5bef322e27d4b8ef7
msgid ""
"``Redirect uris``; It is possible to specify many URIs here. Those must "
"coincide with the GeoServer instances URIs."
msgstr ""

#: ../../advanced/components/index.rst:430 206dfe7a50094537be3c3fd71de96122
msgid "``Client type``; Choose ``Confidential``"
msgstr ""

#: ../../advanced/components/index.rst:432 c9ad18e7eb5543a7a01f2466e107046f
msgid "``Authorization grant type``; Choose ``Authorization code``"
msgstr ""

#: ../../advanced/components/index.rst:434 25413b379d71491e9a30bae6ee775fb0
msgid ""
"``Client secret``; An alphanumeric code representing the OAuth2 Client "
"Secret. GeoServer OAuth2 Plugin **will** use **this** value."
msgstr ""

#: ../../advanced/components/index.rst:438 0bd64bffeddd43b1a34ecaf380e19011
msgid "``Name``; **Must** be ``GeoServer``"
msgstr ""

#: ../../advanced/components/index.rst:441 fe1a23646e614887a6cafcf9f8c351da
msgid "GeoServer Security Backend"
msgstr ""

#: ../../advanced/components/index.rst:446 ccd5ab7750724938a845c01347a2bcc9
msgid ""
"GeoServer has a robust security subsystem, modeled on Spring Security. "
"Most of the security features are available through the Web "
"administration interface."
msgstr ""

#: ../../advanced/components/index.rst:448 5a9fffb82ed14292b5125a9a9ebb9d83
msgid ""
"For more details on how this works and how to configure and modify it, "
"please refer to the official GeoServer guide "
"http://docs.geoserver.org/stable/en/user/security/webadmin/index.html"
msgstr ""

#: ../../advanced/components/index.rst:450 fccc96cdaf0f4ad995dca9c45052c47f
msgid ""
"By using the ``GeoServer Data Dir`` provided with GeoNode build, the "
"following configuration are already available. You will need just to "
"update them accordingly to your environment (like IP addresses and Host "
"names, OAuth2 Keys, and similar things). However it is recommended to "
"read carefully all the following passages in order to understand exactly "
"how the different component are configured and easily identify any "
"possible issue during the deployment."
msgstr ""

#: ../../advanced/components/index.rst:453 5abfe9d7bc92439f814508987ebbc769
msgid "The main topics of this section are:"
msgstr ""

#: ../../advanced/components/index.rst:455
#: ../../advanced/components/index.rst:464 054e39f138c842c0a3c7039f066630c8
#: aa1f7dd0ddc14738b0efccd0a7411f53
msgid "Connection to the GeoNode REST Role Service"
msgstr ""

#: ../../advanced/components/index.rst:457
#: ../../advanced/components/index.rst:552 5d1a915773f74c6182cbe06ca03812a8
#: 79899cdb86814a54b89f27cc7d8673d5
msgid "Setup of the GeoServer OAuth2 Authentication Filter"
msgstr ""

#: ../../advanced/components/index.rst:459
#: ../../advanced/components/index.rst:619 6f290696c5454c28bd82388558025b68
#: a02e47ba12d84ec6ad70ab18f635fb93
msgid "Configuration of the GeoServer Filter Chains"
msgstr ""

#: ../../advanced/components/index.rst:461
#: ../../advanced/components/index.rst:713 29262cf97a9e4ca1a0981e9bf1047d54
#: e4f175c6f4134b96afd347907c65fe35
msgid "Setup and test of the GeoFence Server and Default Rules"
msgstr ""

#: ../../advanced/components/index.rst:467
#: ../../advanced/components/index.rst:557
#: ../../advanced/components/index.rst:628
#: ../../advanced/components/index.rst:720 675eee98ff19490abc04a065d6609cec
#: 70bf4616608f46a09e77e5fbc32f4e05 8a4803eda9994d9196441f25d8999570
#: dced1a3c092c4206b6265fcbe1d6aa13
msgid "Preliminary checks"
msgstr ""

#: ../../advanced/components/index.rst:469
#: ../../advanced/components/index.rst:559
#: ../../advanced/components/index.rst:630
#: ../../advanced/components/index.rst:722 117d3f01c9fc4c949c31e8465ef65fef
#: 52dc4512c443416aaef1c4681ffed8c8 e19655c30c84434c9f1644c6d34a92b8
#: f5c19f468a254a16951f8d60988061ff
msgid "GeoServer is up and running and you have admin rights"
msgstr ""

#: ../../advanced/components/index.rst:471
#: ../../advanced/components/index.rst:561
#: ../../advanced/components/index.rst:632 017af3806d3041ca8ad3cad94b2eab09
#: a0357511f16745a7a0cf2d4724d47588 a56ee1693a47488a9a219a5c5e48121a
msgid "GeoServer must reach the GeoNode instance via HTTP"
msgstr ""

#: ../../advanced/components/index.rst:473 bc465a2b28164c4e99806b22a3249cf2
msgid ""
"The GeoServer Host IP Address must be allowed to access the GeoNode Role "
"Service APIs (see the section ``AUTH_IP_WHITELIST`` above)"
msgstr ""

#: ../../advanced/components/index.rst:476 16026c27a7024c4681ed1b8c8714c950
msgid "Setup of the GeoNode REST Role Service"
msgstr ""

#: ../../advanced/components/index.rst:478 d367d1da39574b018dd23cb942bf122b
msgid "Login as ``admin`` to the GeoServer GUI"
msgstr ""

#: ../../advanced/components/index.rst:480 79bfe88c5244432d8d86e7608c68374c
msgid ""
"In a production system remember to change the default admin credentials "
"``admin`` \\ ``geoserver``"
msgstr ""

#: ../../advanced/components/index.rst:484 dcd8aaac76604eeea7efb434ca513b17
msgid "Access the ``Security`` > ``Users, Groups, Roles`` section"
msgstr ""

#: ../../advanced/components/index.rst:488 86287433ec3c4e259de53be614dbe3ba
msgid ""
"**If not yet configured** the service ``geonode REST role service``, "
"click on ``Role Services`` > ``Add new``"
msgstr ""

#: ../../advanced/components/index.rst:490 df04272c2e1446b4891e08009baaf9c0
msgid ""
"This passage is **not** needed if the ``geonode REST role service`` has "
"been already created. If so it will be displayed among the Role Services "
"list"
msgstr ""

#: ../../advanced/components/index.rst:496 d306deb398a346dcb04f872f32fc9a62
msgid ""
"**If not yet configured** the service ``geonode REST role service``, "
"choose ``AuthKEY REST - Role service from REST endpoint``"
msgstr ""

#: ../../advanced/components/index.rst:500 299310175adf4224a0640cd7bdcee773
msgid "Create / update the ``geonode REST role service`` accordingly"
msgstr ""

#: ../../advanced/components/index.rst:504 45f3f1cd1faa4cf38edb839720536769
msgid "``Name``; **Must** be ``geonode REST role service``"
msgstr ""

#: ../../advanced/components/index.rst:506 13dc74db4fdf4e84ab7038f15f84f60e
msgid ""
"``Base Server URL``; Must point to the GeoNode instance base URL (e.g. "
"``http://<geonode_host_url>``)"
msgstr ""

#: ../../advanced/components/index.rst:508 1e5f2610936b47d48d241565f60db28e
msgid "``Roles REST Endpoint``; Enter ``/api/roles``"
msgstr ""

#: ../../advanced/components/index.rst:510 475bae5187d5415f87f0568a15c98179
msgid "``Admin Role REST Endpoint``; Enter ``/api/adminRole``"
msgstr ""

#: ../../advanced/components/index.rst:512 c2ac8966e53d4dd68b8a59e8b1d551df
msgid "``Users REST Endpoint``; Enter ``/api/users``"
msgstr ""

#: ../../advanced/components/index.rst:514 1e75cfd98a23464a9a2a340aa25905a6
msgid "``Roles JSON Path``; Enter ``$.groups``"
msgstr ""

#: ../../advanced/components/index.rst:516 047514e21d64436c8561ff6d8559311f
msgid "``Admin Role JSON Path``; Enter ``$.adminRole``"
msgstr ""

#: ../../advanced/components/index.rst:518 afcd711967af4be987b93a7e3d2f27c5
msgid "``Users JSON Path``; Enter ``$.users[0].groups``"
msgstr ""

#: ../../advanced/components/index.rst:520 d111f5825a834d5ab46f8f0bedeb6bc8
msgid ""
"Once everything has been setup and it is working, choose the "
"``Administrator role`` and ``Group administrator role`` as ``ROLE_ADMIN``"
msgstr ""

#: ../../advanced/components/index.rst:523 06936bf4d709461fabf079308d4acbf0
msgid "Allow GeoFence to validate rules with ``ROLES``"
msgstr ""

#: ../../advanced/components/index.rst:525 d2666165b939451b9678414c1e946a03
msgid ""
"The following instruction are different accordingly to the GeoServer "
"version you are currently using."
msgstr ""

#: ../../advanced/components/index.rst:528 400ba95fd5ad4d98a381265afcb1376a
msgid "GeoServer 2.9.x and 2.10.x"
msgstr ""

#: ../../advanced/components/index.rst:530 a32ee4b0fb1646a6bc7ef2e355313c91
msgid "Access the ``Security`` > ``Settings`` section"
msgstr ""

#: ../../advanced/components/index.rst:534 4beab628fc054ee7adccd3e84d257ee0
msgid "Choose the ``geonode REST role service`` as ``Active role service``"
msgstr ""

#: ../../advanced/components/index.rst:539 d0ab77ac3a1d4a3ca74344a77679b435
msgid "GeoServer 2.12.x and above"
msgstr ""

#: ../../advanced/components/index.rst:541 d9b80bc8c0f94ffe81907e1fb72a43fe
msgid ""
"With the latest updates to GeoFence Plugin, the latter no more recognizes"
" the Role Service from the default settings but from the ``geofence-"
"server.properties`` file."
msgstr ""

#: ../../advanced/components/index.rst:543 05708ab328674949a74455a68e59e3bb
msgid ""
"That said, it is important that the ``Security`` > ``Settings`` role "
"service will be set to **default**, in order to allow GeoServer following"
" the standard authorization chain."
msgstr ""

#: ../../advanced/components/index.rst:545 790e139d3a3c491eaa4fde04c7ea6b2b
msgid ""
"On the other side, you will need to be sure that the ``geofence-"
"server.properties`` file under the ``$GEOSERVER_DATA_DIR/geofence`` "
"folder, contains the two following additional properties: ::"
msgstr ""

#: ../../advanced/components/index.rst:554 64dda590d4fd432b8cd75c68988b028a
msgid ""
"It is necessary now check that GeoServer can connect to OAuth2 Providers "
"(specifically to GeoNode OP), and being able to Authenticate users "
"through it."
msgstr ""

#: ../../advanced/components/index.rst:563 7116f4c00aa84ff8925c14e6e4ee98b4
msgid ""
"OAuth2 ``Client ID`` and ``Client Secret`` have been generated on GeoNode"
" and known"
msgstr ""

#: ../../advanced/components/index.rst:566 87ce64c6bf814c0bbee5d561bef272a0
msgid "Setup of the GeoNode OAuth2 Security Filter"
msgstr ""

#: ../../advanced/components/index.rst:568
#: ../../advanced/components/index.rst:639
#: ../../advanced/components/index.rst:729 14453d7367884b8b972e8efac52d1b44
#: 36b42535d73846cb997c5edbd61bf100 cbe9051ff9354ccc94ad1350c1dd0c51
msgid "Access the ``Security`` > ``Authentication`` section"
msgstr ""

#: ../../advanced/components/index.rst:572 dbcb79c7a3c9428581a1fe073a9d901c
msgid ""
"**If not yet configured** the Authentication Filter ``geonode-oauth2 - "
"Authentication using a GeoNode OAuth2``, click on ``Authentication "
"Filters`` > ``Add new``"
msgstr ""

#: ../../advanced/components/index.rst:574 77c718b6d30f49429976950dc622acc6
msgid ""
"This passage is **not** needed if the ``geonode-oauth2 - Authentication "
"using a GeoNode OAuth2`` has been already created. If so it will be "
"displayed among the Authentication Filters list"
msgstr ""

#: ../../advanced/components/index.rst:580 762ff9f3acf144f8931116541cf7f844
msgid ""
"**If not yet configured** the Authentication Filter ``geonode-oauth2 - "
"Authentication using a GeoNode OAuth2``, choose ``GeoNode OAuth2 - "
"Authenticates by looking up for a valid GeoNode OAuth2 access_token key "
"sent as URL parameter``"
msgstr ""

#: ../../advanced/components/index.rst:584 29129c95d25841659fe1be2bf8ab4549
msgid ""
"Create / update the ``geonode-oauth2 - Authentication using a GeoNode "
"OAuth2`` accordingly"
msgstr ""

#: ../../advanced/components/index.rst:588 a13e80599e894f719f291681be02108b
msgid "``Name``; **Must** be ``geonode-oauth2``"
msgstr ""

#: ../../advanced/components/index.rst:590 4f1790e6b5ba49eab3a0a21e4ddc58e6
msgid ""
"``Enable Redirect Authentication EntryPoint``; It is recommended to put "
"this to ``False``, otherwise GeoServer won't allow you to connect to its "
"Admin GUI through the ``Form`` but only through GeoNode"
msgstr ""

#: ../../advanced/components/index.rst:592 6c22de6a83fb489083750df36f351a3d
msgid ""
"``Login Authentication EndPoint``; Unless you have specific needs, keep "
"the default value ``/j_spring_oauth2_geonode_login``"
msgstr ""

#: ../../advanced/components/index.rst:594 5460efa034ef4fc1ade6ca2d430e3d4c
msgid ""
"``Logout Authentication EndPoint``; Unless you have specific needs, keep "
"the default value ``/j_spring_oauth2_geonode_logout``"
msgstr ""

#: ../../advanced/components/index.rst:596 9726495c957b4114bcafb5209faedebb
msgid ""
"``Force Access Token URI HTTPS Secured Protocol``; This must be ``False``"
" unless you enabled a ``Secured Connection`` on GeoNode. In that case you"
" will need to trust the GeoNode ``Certificate`` on the GeoServer JVM "
"Keystore. Please see details below"
msgstr ""

#: ../../advanced/components/index.rst:598 5aa03abfebd748549e3cc1feb2b41bca
msgid ""
"``Access Token URI``; Set this to "
"``http://<geonode_host_base_url>/o/token/``"
msgstr ""

#: ../../advanced/components/index.rst:600 3f4268901061430386baecf6667c1ea6
msgid ""
"``Force User Authorization URI HTTPS Secured Protocol``; This must be "
"``False`` unless you enabled a ``Secured Connection`` on GeoNode. In that"
" case you will need to trust the GeoNode ``Certificate`` on the GeoServer"
" JVM Keystore. Please see details below"
msgstr ""

#: ../../advanced/components/index.rst:602 85d76cb9f19049fa9f16da4e72e67a97
msgid ""
"``User Authorization URI``; Set this to "
"``http://<geonode_host_base_url>/o/authorize/``"
msgstr ""

#: ../../advanced/components/index.rst:604 096958cf3fb340409e5ab2a3bf676e21
msgid ""
"``Redirect URI``; Set this to ``http://<geoserver_host>/geoserver``. This"
" address **must** be present on the ``Redirect uris`` of GeoNode "
"``OAuth2`` > ``Applications`` > ``GeoServer`` (see above)"
msgstr ""

#: ../../advanced/components/index.rst:606 87913ed8c8d4488188dbc59ecd1097a9
msgid ""
"``Check Token Endpoint URL``; Set this to "
"``http://<geonode_host_base_url>/api/o/v4/tokeninfo/``"
msgstr ""

#: ../../advanced/components/index.rst:608 1acf077e1c584eb1b5f2a22347487e21
msgid ""
"``Logout URI``; Set this to "
"``http://<geonode_host_base_url>/account/logout/``"
msgstr ""

#: ../../advanced/components/index.rst:610 b90e89d4c4194254a2ae90bc22e727cb
msgid ""
"``Scopes``; Unless you have specific needs, keep the default value "
"``read,write,groups``"
msgstr ""

#: ../../advanced/components/index.rst:612 688b85c469c74cb4a1af0db5c9a1168a
msgid ""
"``Client ID``; The ``Client id`` alphanumeric key generated by the "
"GeoNode ``OAuth2`` > ``Applications`` > ``GeoServer`` (see above)"
msgstr ""

#: ../../advanced/components/index.rst:614 0bfe469181cb4fae96eee6081643a1ca
msgid ""
"``Client Secret``; The ``Client secret`` alphanumeric key generated by "
"the GeoNode ``OAuth2`` > ``Applications`` > ``GeoServer`` (see above)"
msgstr ""

#: ../../advanced/components/index.rst:616 398d9a82a2344606bb0a441ca9670e71
msgid ""
"``Role source``; In order to authorize the user against GeoNode, choose "
"``Role service`` > ``geonode REST role service``"
msgstr ""

#: ../../advanced/components/index.rst:621 10f2820c850f48d980d225c1612f7bc0
msgid ""
"The following steps ensure GeoServer can adopt more Authentication "
"methods. As stated above, it is possible to Authenticate to GeoServer "
"using different protocols."
msgstr ""

#: ../../advanced/components/index.rst:623 822e10ddaea64e9ba223ccda890ed2ee
msgid ""
"GeoServer scans the authentication filters chain associated to the "
"specified path and tries them one by one sequentially. The first one "
"matching the protocol and able to grant access to the user, breaks the "
"cycle by creating a ``User Principal`` and injecting it into the "
"GeoServer ``SecurityContext``. The Authentication process, then, ends "
"here and the control goes to the Authorization one, which will try to "
"retrieve the authenticated user's Roles through the available GeoServer "
"Role Services associated to the Authentication Filter that granted the "
"access."
msgstr ""

#: ../../advanced/components/index.rst:634 75224a24382b4cbcb72b9f80776947eb
msgid ""
"The ``geonode-oauth2 - Authentication using a GeoNode OAuth2`` "
"Authentication Filter and the  ``geonode REST role service`` have been "
"correctly configured"
msgstr ""

#: ../../advanced/components/index.rst:637
#: ../../advanced/components/index.rst:727 d6ec36ff36ff48888ba863f1c3ad0e4f
#: f2f096c914da4e358326627ef540d1f2
msgid "Setup of the GeoServer Filter Chains"
msgstr ""

#: ../../advanced/components/index.rst:643 da50bc4774d24325af313a9a18896ac1
msgid "Identify the section ``Filter Chains``"
msgstr ""

#: ../../advanced/components/index.rst:647 3c1380790f044c28b1542c81765a6ca7
msgid "Make sure the ``web`` Filter Chain is configured as shown below"
msgstr ""

#: ../../advanced/components/index.rst:651
#: ../../advanced/components/index.rst:659
#: ../../advanced/components/index.rst:667
#: ../../advanced/components/index.rst:675
#: ../../advanced/components/index.rst:683
#: ../../advanced/components/index.rst:691 22e691c72c1b4996b8676f29283263ae
#: 62b511af576d42058a94e2fc828bf587 64422fa138a6456faf21fd36640734ab
#: 777cffcdf0c04fb78e1d823e68ff3af4 931ddda8f0b54917a54b7a70fe02117f
#: e6cee186a7834a42b47caf85e0377235
msgid ""
"Every time you modify a Filter Chain, **don't forget to save** the "
"``Authentication`` settings. This **must** be done for **each** change."
msgstr ""

#: ../../advanced/components/index.rst:655 36db88d4bee44b8fb0628bf3be11d39f
msgid "Make sure the ``rest`` Filter Chain is configured as shown below"
msgstr ""

#: ../../advanced/components/index.rst:663 25eda5da582e442f93967ccd4f5561de
msgid "Make sure the ``gwc`` Filter Chain is configured as shown below"
msgstr ""

#: ../../advanced/components/index.rst:671 a31d3ebf6d1b4d458956596cd24ceade
msgid "Make sure the ``default`` Filter Chain is configured as shown below"
msgstr ""

#: ../../advanced/components/index.rst:679 632a0fb2fa6441eba556cb21dff9c524
msgid ""
"Add the ``GeoNode Login Endpoints`` to the comma-delimited list of the "
"``webLogin`` Filter Chain"
msgstr ""

#: ../../advanced/components/index.rst:687 bb2993613fdd49fdb0bdb003b6328188
msgid ""
"Add the ``GeoNode Logout Endpoints`` to the comma-delimited list of the "
"``webLogout`` Filter Chain"
msgstr ""

#: ../../advanced/components/index.rst:696 0e835d054d474c77bc317343c262aafa
msgid ""
"Add the ``GeoNode Logout Endpoints`` to the comma-delimited list of the "
"``formLogoutChain`` XML node in "
"``<GEOSERVER_DATA_DIR>/security/filter/formLogout/config.xml``"
msgstr ""

#: ../../advanced/components/index.rst:698 f29236607d0f43acae5611dc9c69c27c
msgid "You will need a text editor to modify the file."
msgstr ""

#: ../../advanced/components/index.rst:700 777f5677973f4fc4b0e443b8628b0fe1
msgid ""
"If the ``<formLogoutChain>`` XML node does not exist at all, create a "
"**new one** as specified below"
msgstr ""

#: ../../advanced/components/index.rst:710 dbab51b6a31b45569947d4b8b46f804f
msgid ""
"The value ``j_spring_oauth2_geonode_logout`` **must** be the same "
"specified as ``Logout Authentication EndPoint`` in the ``geonode-oauth2 -"
" Authentication using a GeoNode OAuth2`` above."
msgstr ""

#: ../../advanced/components/index.rst:715 579f09d428fe4cd1a6ea2009c40e4ba1
msgid ""
"In order to work correctly, GeoServer needs the `GeoFence Embedded Server"
" <http://docs.geoserver.org/latest/en/user/community/geofence-"
"server/index.html>`_ plugin to be installed and configured on the system."
msgstr ""

#: ../../advanced/components/index.rst:717 f1484a3261d044f0ad63513f60f46f65
msgid ""
"The GeoServer configuration provided for GeoNode, has the plugin already "
"installed with a default configuration. In that case double check that "
"the plugin works correctly and the default rules have been setup by "
"following the next steps."
msgstr ""

#: ../../advanced/components/index.rst:724 bfb7ab99607d441fb2704bb84f9f1f52
msgid ""
"The `GeoFence Embedded Server "
"<http://docs.geoserver.org/latest/en/user/community/geofence-"
"server/index.html>`_ plugin has been installed on GeoServer"
msgstr ""

#: ../../advanced/components/index.rst:733 3059a112ef4c4d8297766e30ac3bd888
msgid ""
"Identify the section ``Authentication Providers`` and make sure the "
"``geofence`` Authentication Provider is present"
msgstr ""

#: ../../advanced/components/index.rst:737 371dd5515a1b4f0c92fb00c8f87a62dd
msgid "Make sure the ``Provider Chain`` is configured as shown below"
msgstr ""

#: ../../advanced/components/index.rst:741 e05b8376daa1491bb1450a1659ef2205
msgid ""
"Every time you modify an Authentication Providers, **don't forget to "
"save** the ``Authentication`` settings. This **must** be done for "
"**each** change."
msgstr ""

#: ../../advanced/components/index.rst:746 6437835801bc43b7bb0df89a53221026
msgid "Setup of the GeoFence Server and Rules"
msgstr ""

#: ../../advanced/components/index.rst:748 4f8a4b3399f54dbca83713f67bcfb05e
msgid ""
"Make sure GeoFence server works and the default settings are correctly "
"configured"
msgstr ""

#: ../../advanced/components/index.rst:750 a13a524096ea4d7b90b034fa08d4d294
msgid "Access the ``Security`` > ``GeoFence`` section"
msgstr ""

#: ../../advanced/components/index.rst:754 be7ade79970b40ddab26ae6398e39ecd
msgid ""
"Make sure the ``Options`` are configured as follows and the server works "
"well when performing a ``Test Connection``"
msgstr ""

#: ../../advanced/components/index.rst:758 1944382a0f2e4f8ca92c772612e2fa5b
msgid "``Allow remote and inline layers in SLD``; Set it to ``True``"
msgstr ""

#: ../../advanced/components/index.rst:760 453666de26754ab2817629fb226f9bf3
msgid "``Allow SLD and SLD_BODY parameters in requests``; Set it to ``True``"
msgstr ""

#: ../../advanced/components/index.rst:762 a037db17cb6d4e44964c2b2aad828503
msgid "``Authenticated users can write``; Set it to ``True``"
msgstr ""

#: ../../advanced/components/index.rst:764 1b27ddd7864e431389c43554299f0b38
msgid "``Use GeoServer roles to get authorizations``; Set it to ``False``"
msgstr ""

#: ../../advanced/components/index.rst:766 ffab0d79d51e4f098c5a7f687174a88e
msgid "Check the GeoFence default Rules"
msgstr ""

#: ../../advanced/components/index.rst:768 7aeefa72366a4166b3fd469e869a4b20
msgid "Access the ``Security`` > ``GeoFence Data Rules`` section"
msgstr ""

#: ../../advanced/components/index.rst:772 7acb9ab2cdcc4725867b2cdcb4b3af3a
msgid ""
"Make sure the ``DENY ALL`` Rule is present by default, otherwise your "
"data will be accessible to everyone"
msgstr ""

#: ../../advanced/components/index.rst:774 6854607647cd40df8f3ff6ab4c2e1e18
msgid "This rule is **always** the last one"
msgstr ""

#: ../../advanced/components/index.rst:778 44156f8996154ef19102e9c549fbbb49
msgid ""
"If that rule does not exists **at the very bottom** (this rule is "
"**always** the last one), add it manually."
msgstr ""

#: ../../advanced/components/index.rst:780 86cb7dbb9462467794fce9fd2949628e
msgid "Access the ``Security`` > ``GeoFence Admin Rules`` section"
msgstr ""

#: ../../advanced/components/index.rst:784 661311abd6de43f98243a6ad6f82c677
msgid "No Rules needed here"
msgstr ""

#: ../../advanced/components/index.rst:789 e08aa836b6cb4c81a7573c3f65431175
msgid "Troubleshooting and Advanced Features"
msgstr ""

#: ../../advanced/components/index.rst:794 a029dd3853564c1497614dd2adf416da
msgid ""
"GeoServer/GeoNode OAuth2 does not authenticate as Administrator even "
"using GeoNode ``admin`` users"
msgstr ""

#: ../../advanced/components/index.rst:796 9d450689f8dd4f958d63396570f5884d
msgid "**Symptoms**"
msgstr ""

#: ../../advanced/components/index.rst:798 d5592b8986594a3a94bbedeb1b5771ff
msgid ""
"When trying to authenticate with an ``admin`` user using OAuth2, the "
"process correctly redirects to GeoServer page but I'm not a GeoServer "
"Administrator."
msgstr ""

#: ../../advanced/components/index.rst:800 54c714b01655452cb65610c39abdbdbe
msgid "**Cause**"
msgstr ""

#: ../../advanced/components/index.rst:802 cf4b56262b4c4515bbdc657113668d93
msgid ""
"That means that somehow GeoServer could not successfully complete the "
"Authorization and Authentication process."
msgstr ""

#: ../../advanced/components/index.rst:804 f474e742dfea4224b98fe66d0f70da1c
msgid "The possible causes of the problem may be the following ones:"
msgstr ""

#: ../../advanced/components/index.rst:806 37082493a65642fbac51ea0a54759b72
msgid "The OAuth2 Authentication fails on GeoServer side"
msgstr ""

#: ../../advanced/components/index.rst:808 c0f9d9ec2d244a098e3a8cea316153e2
msgid ""
"This is usually due to an exception while trying to complete the "
"Authentication process."
msgstr ""

#: ../../advanced/components/index.rst:810 44bf348dd57e439bbf7de5525d9b1fb7
msgid ""
"A typical cause is that GeoServer tries to use HTTPS connections but the "
"GeoNode certificate is not trusted;"
msgstr ""

#: ../../advanced/components/index.rst:812 f288618f46474c55ace65a0c06f17746
msgid ""
"In that case please refer to the section below. Also take a look at the "
"logs (in particular the GeoServer one) as explained in "
":ref:`debug_geonode`. The GeoServer logs should contain a detailed "
"Exception explaining the cause of the problem. If no exception is listed "
"here (even after raised the log level to *DEBUG*), try to check for the "
"GeoNode Role Service as explained below."
msgstr ""

#: ../../advanced/components/index.rst:816 af1382b14c7442e8938a7bbe2e7b2b21
msgid ""
"Another possible issue is that somehow the OAuth2 handshake cannot "
"complete successfully;"
msgstr ""

#: ../../advanced/components/index.rst:818 dd68ba65de8c477aad2df19f1210b634
msgid "Login into GeoServer as administrator through its WEB login form."
msgstr ""

#: ../../advanced/components/index.rst:820 ffbbaa8a9447484aaaddd3e82b893995
msgid ""
"Double check that all the ``geonode-oauth2 - Authentication using a "
"GeoNode OAuth2`` parameters are correct. If everything is ok, take a look"
" at the logs (in particular the GeoServer one) as explained in "
":ref:`debug_geonode`. The GeoServer logs should contain a detailed "
"Exception explaining the cause of the problem. If no exception is listed "
"here (even after raised the log level to *DEBUG*), try to check for the "
"GeoNode Role Service as explained below."
msgstr ""

#: ../../advanced/components/index.rst:823 5e488ef663824f1e92b3507fdfb99742
msgid "GeoServer is not able to retrieve the user Role from a Role Service"
msgstr ""

#: ../../advanced/components/index.rst:825 d12dfe8af06344a0b18cc243a7208af6
msgid ""
"Always double check both HTTP Server and GeoServer log as specified in "
"section :ref:`debug_geonode`. This might directly guide you to the cause "
"of the problem."
msgstr ""

#: ../../advanced/components/index.rst:827 e31e1683e49b4215a26bbb417a9d3ab7
msgid ""
"Check that the GeoServer host is granted to access GeoNode Role Service "
"REST APIs in the ``AUTH_IP_WHITELIST`` of the ``settings.py``"
msgstr ""

#: ../../advanced/components/index.rst:829 50f979c0fefa42e681f6b165c6dec366
msgid ""
"Check that the ``geonode REST role service`` is the default Role service "
"and that the GeoServer OAuth2 Plugin has been configured to use it by "
"default"
msgstr ""

#: ../../advanced/components/index.rst:831 bcb60211a2894cb89866a27e48793409
msgid ""
"Check that the GeoNode REST Role Service APIs are functional and produce "
"correct JSON."
msgstr ""

#: ../../advanced/components/index.rst:833 0c0d25847ccd4de1b93454a2b9fd6b91
msgid "This is possible by using simple ``cUrl`` GET calls like"
msgstr ""

#: ../../advanced/components/index.rst:854 c45082bcaa94409780e4b97744a9e5a4
msgid ""
"In a production system it is a good practice to encrypt the connection "
"between GeoServer and GeoNode. That would be possible by enabling HTTPS "
"Protocol on the GeoNode REST Role Service APIs and OAuth2 Endpoints."
msgstr ""

#: ../../advanced/components/index.rst:856 24d1ea1d25544ea19641588f078ba7a9
msgid ""
"Most of the times you will rely on a self-signed HTTPS connection using a"
" generated certificate. That makes the connection *untrusted* and you "
"will need to tell to the GeoServer Java Virtual Machine to trust it."
msgstr ""

#: ../../advanced/components/index.rst:858 b7c17f421fd548a8b032096defbe1675
msgid "This can be done by following the steps below."
msgstr ""

#: ../../advanced/components/index.rst:860 9604cb1348d94ae2bff3fdd3b653edaf
msgid ""
"For any issue take a look at the logs (in particular the GeoServer one) "
"as explained in :ref:`debug_geonode`. The GeoServer logs should contain a"
" detailed Exception explaining the cause of the problem."
msgstr ""

#: ../../advanced/components/index.rst:863 50e65f3e57f24a55ac59de8fa05a7f5d
msgid "SSL Trusted Certificates"
msgstr ""

#: ../../advanced/components/index.rst:865 e9a5c4aa0dca45ec8db6a41659e179aa
msgid ""
"When using a custom ``Keystore`` or trying to access a non-trusted or "
"self-signed SSL-protected OAuth2 Provider from a non-SSH connection, you "
"will need to add the certificates to the JVM ``Keystore``."
msgstr ""

#: ../../advanced/components/index.rst:867 5b7e4ce09fa949efad4b5e2a1665e0a3
msgid "In order to do this you can follow the next steps:"
msgstr ""

#: ../../advanced/components/index.rst:869 13874053c84b4c499b25959d55b4e06b
msgid "In this example we are going to"
msgstr ""

#: ../../advanced/components/index.rst:871 6a8467a5972c40ccae725fc831df7daa
msgid "Retrieve SSL Certificate from GeoNode domain:"
msgstr ""

#: ../../advanced/components/index.rst:873 da167fda3a774553b7d3556efa22996b
msgid ""
"\"Access Token URI\" = https://<geonode_host_base_url>/o/token/ therefore"
" we need to trust ``https://<geonode_host_base_url>`` or "
"(``<geonode_host_base_url>:443``)"
msgstr ""

#: ../../advanced/components/index.rst:875 9e613a31c14f43aea59cc84a2bb81a95
msgid ""
"You will need to get and trust certificates from every different HTTPS "
"URL used on OAuth2 Endpoints."
msgstr ""

#: ../../advanced/components/index.rst:877 33b158d6c2dd42ca926f6cc0e1dc27bb
msgid "Store SSL Certificates on local hard-disk"
msgstr ""

#: ../../advanced/components/index.rst:879
#: ../../advanced/components/index.rst:907 69ae33ac560541159c197505c5cfb67e
#: de56ac0c638b4161a2f055125fff2c24
msgid "Add SSL Certificates to the Java Keystore"
msgstr ""

#: ../../advanced/components/index.rst:881
#: ../../advanced/components/index.rst:950 75901a483e1142e4914dc0e5e6de6773
#: 8c88696734ba42d190ac5107f6293564
msgid "Enable the JVM to check for SSL Certificates from the Keystore"
msgstr ""

#: ../../advanced/components/index.rst:883 fc07f26fed904c0ba86d23353ec33ef4
msgid "Retrieve the SSL Certificate from GeoNode domain"
msgstr ""

#: ../../advanced/components/index.rst:885 fd31552cd4d74e89a7b5a1f4aea65c38
msgid "Use the ``openssl`` command in order to dump the certificate"
msgstr ""

#: ../../advanced/components/index.rst:887 bb0966b3e78e415d9149917b0834d809
msgid "For ``https://<geonode_host_base_url>``"
msgstr ""

#: ../../advanced/components/index.rst:896 04faaefb97384c3da616c0cc577affc0
msgid "Store SSL Certificate on local hard-disk"
msgstr ""

#: ../../advanced/components/index.rst:898 513546e5183e4075b571f515b552cf55
msgid ""
"Copy-and-paste the section ``-BEGIN CERTIFICATE-``, ``-END CERTIFICATE-``"
" and save it into a ``.cert`` file"
msgstr ""

#: ../../advanced/components/index.rst:900 b19d9ccba15146838d284646ad30fa05
msgid ""
"``.cert`` file are plain text files containing the ASCII characters "
"included on the ``-BEGIN CERTIFICATE-``, ``-END CERTIFICATE-`` sections"
msgstr ""

#: ../../advanced/components/index.rst:902
#: ../../advanced/components/index.rst:911 5a39b96bbe9049f2b984db03df1862a7
#: f2d30b52307f4e67b54719f19d94fcf7
msgid "``geonode.cert`` (or whatever name you want with ``.cert`` extension)"
msgstr ""

#: ../../advanced/components/index.rst:909 2abe55bfe35848c2a5413c5674803afa
msgid "You can use the Java command ``keytool`` like this"
msgstr ""

#: ../../advanced/components/index.rst:917 609661397c0d40bfbf5479262c3df718
msgid ""
"or, alternatively, you can use some graphic tool which helps you managing"
" the SSL Certificates and Keystores, like `Portecle "
"<http://portecle.sourceforge.net/>`_"
msgstr ""

#: ../../advanced/components/index.rst:952 330d9dc51c694ce8a638a86018f1d3ca
msgid "In order to do this, you need to pass a ``JAVA_OPTION`` to your JVM:"
msgstr ""

#: ../../advanced/components/index.rst:958 727259273ba5442186011457370c3a2a
msgid "Restart your server"
msgstr ""

#: ../../advanced/components/index.rst:960 9663452b05f44883887b56c57c7f145b
msgid ""
"Here below you can find a bash script which simplifies the Keystore SSL "
"Certificates importing. Use it at your convenience."
msgstr ""

#: ../../advanced/components/index.rst:985 3bb80f480d0d450ebc31f991c0b28ede
msgid "GeoFence Rules Management and Tutorials"
msgstr ""

#: ../../advanced/components/index.rst:987 9c7a07e99b29409ab8256d4f561350e6
msgid ""
"`This tutorial <http://docs.geoserver.org/latest/en/user/community"
"/geofence-server/tutorial.html>`_ shows how to install and configure the "
"Geofence Internal Server plug-in. It shows how to create rules in two "
"ways: using the GUI and REST methods."
msgstr ""

#: ../../advanced/components/index.rst:989 0563f829c45a43f482459549c19fae4b
msgid ""
"GeoFence Rules can be created / updated / deleted through a REST API, "
"accessible only by a GeoServer Admin user. You can find more details on "
"how the GeoFence REST API works `here "
"<https://github.com/geoserver/geofence/wiki/REST-API>`_."
msgstr ""

#: ../../advanced/components/index.rst:992 b7125e757ff84a1e8bd93d04a4c8c95d
msgid "GeoFence Rules Storage Configuration"
msgstr ""

#: ../../advanced/components/index.rst:994 08185eab77a74aabb6c775c74a27a656
msgid ""
"By default GeoFence is configured to use a filesystem based DB stored on "
"the GeoServer Data Dir ``<GEOSERVER_DATA_DIR/geofence``."
msgstr ""

#: ../../advanced/components/index.rst:996 0a1f762f6b974128a29138b5aa9f995d
msgid ""
"It is possible also to configure GeoFence in order to use an external "
"PostgreSQL / PostGIS Database. For more details please refer to the "
"official GeoFence documentation `here "
"<https://github.com/geoserver/geofence/wiki/GeoFence-configuration>`_."
msgstr ""

#: ../../advanced/components/index.rst:998 8e57c9f575f240af9932bf8e7588d97e
msgid "Add ``Java Libraries`` to ``GeoServer``"
msgstr ""

#: ../../advanced/components/index.rst:1010 81743e0184aa40cbaecbeef94865a34a
msgid ""
"Either create a DB with the updated schema here "
"https://github.com/geoserver/geofence/blob/master/doc/setup/sql/002_create_schema_postgres.sql"
" or enable the hbm2ddl auto creation through the configuration file (see "
"step ``3``)"
msgstr ""

#: ../../advanced/components/index.rst:1012 2fd19e2b7fbd438298bfada66fc48ed9
msgid ""
"Notice that \"update\" also creates the tables if they do not exist. In "
"production, however, I would suggest to change it to \"validate\""
msgstr ""

#: ../../advanced/components/index.rst:1023 c69002f503594db09371195530de749c
msgid ""
"Add configuration similar to ``geofence-datasource-ovr.properties`` "
"sample below (if loaded as GeoServer extension)"
msgstr ""

#: ../../advanced/components/index.rst:1025 ad4f23145c32421e8e535ab8b58d6e45
msgid "**<GEOSERVER_DATA_DIR>/geofence/geofence-datasource-ovr.properties**"
msgstr ""

#~ msgid "Overview"
#~ msgstr ""

#~ msgid "**TODO***"
#~ msgstr ""

#~ msgid "Django"
#~ msgstr ""

#~ msgid "**TODO**"
#~ msgstr ""

#~ msgid "WebServers"
#~ msgstr ""

#~ msgid "Apache"
#~ msgstr ""

#~ msgid "NGINX"
#~ msgstr ""

#~ msgid "GeoServer"
#~ msgstr ""

#~ msgid "Databases"
#~ msgstr ""

