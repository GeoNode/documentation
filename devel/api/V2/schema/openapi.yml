openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/v2/:
    get:
      operationId: root_retrieve
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v2/categories/:
    get:
      operationId: categories_list
      description: API endpoint that lists categories.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - categories
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTopicCategoryList'
          description: ''
  /api/v2/categories/{id}/:
    get:
      operationId: categories_retrieve
      description: API endpoint that lists categories.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this topic category.
        required: true
      tags:
      - categories
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicCategory'
          description: ''
  /api/v2/datasets/:
    get:
      operationId: datasets_list
      description: API endpoint that allows layers to be viewed or edited.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - datasets
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDatasetListList'
          description: ''
    patch:
      operationId: datasets_partial_update
      description: API endpoint that allows layers to be viewed or edited.
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
  /api/v2/datasets/{id}/:
    get:
      operationId: datasets_retrieve
      description: API endpoint that allows layers to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dataset.
        required: true
      tags:
      - datasets
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    put:
      operationId: datasets_update
      description: |-
        Update one or more model instances.

        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records
        may be updated in a single call, provided their IDs.

        If ENABLE_PATCH_ALL is set, multiple records
        may be updated in a single PATCH call, even without knowing their IDs.

        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature
        and used with caution. This feature must be enabled at the viewset level
        and must also be requested explicitly by the client
        via the "patch-all" query parameter.

        This parameter can have one of the following values:

            true (or 1): records will be fetched and then updated in a transaction loop
              - The `Model.save` method will be called and model signals will run
              - This can be slow if there are too many signals or many records in the query
              - This is considered the more safe and default behavior
            query: records will be updated in a single query
              - The `QuerySet.update` method will be called and model signals will not run
              - This will be fast, but may break data constraints that are controlled by signals
              - This is considered unsafe but useful in certain situations

        The server's successful response to a patch-all request
        will NOT include any individual records. Instead, the response content will contain
        a "meta" object with an "updated" count of updated records.

        Examples:

        Update one dog:

            PATCH /dogs/1/
            {
                'fur': 'white'
            }

        Update many dogs by ID:

            PATCH /dogs/
            [
                {'id': 1, 'fur': 'white'},
                {'id': 2, 'fur': 'black'},
                {'id': 3, 'fur': 'yellow'}
            ]

        Update all dogs in a query:

            PATCH /dogs/?filter{fur.contains}=brown&patch-all=true
            {
                'fur': 'gold'
            }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dataset.
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dataset'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    patch:
      operationId: datasets_partial_update_2
      description: API endpoint that allows layers to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dataset.
        required: true
      tags:
      - datasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
  /api/v2/datasets/{id}/{field_name}/:
    get:
      operationId: datasets_retrieve_2
      description: |-
        Fetch related object(s), as if sideloaded (used to support
        link objects).

        This method gets mapped to `/<resource>/<pk>/<field_name>/` by
        DynamicRouter for all DynamicRelationField fields. Generally,
        this method probably shouldn't be overridden.

        An alternative implementation would be to generate reverse queries.
        For an exploration of that approach, see:
            https://gist.github.com/ryochiji/54687d675978c7d96503
      parameters:
      - in: path
        name: field_name
        schema:
          type: string
          pattern: ^styles$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dataset.
        required: true
      tags:
      - datasets
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
  /api/v2/datasets/{id}/maplayers/:
    get:
      operationId: datasets_maplayers_list
      description: API endpoint allowing to retrieve the MapLayers list.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dataset.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - datasets
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSimpleMapLayerList'
          description: ''
  /api/v2/datasets/{id}/maps/:
    get:
      operationId: datasets_maps_list
      description: API endpoint allowing to retrieve maps using the dataset.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dataset.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - datasets
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSimpleMapList'
          description: ''
  /api/v2/documents/:
    get:
      operationId: documents_list
      description: API endpoint that allows documents to be viewed or edited.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - documents
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentList'
          description: ''
    patch:
      operationId: documents_partial_update
      description: API endpoint that allows documents to be viewed or edited.
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v2/documents/{id}/:
    get:
      operationId: documents_retrieve
      description: API endpoint that allows documents to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    put:
      operationId: documents_update
      description: |-
        Update one or more model instances.

        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records
        may be updated in a single call, provided their IDs.

        If ENABLE_PATCH_ALL is set, multiple records
        may be updated in a single PATCH call, even without knowing their IDs.

        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature
        and used with caution. This feature must be enabled at the viewset level
        and must also be requested explicitly by the client
        via the "patch-all" query parameter.

        This parameter can have one of the following values:

            true (or 1): records will be fetched and then updated in a transaction loop
              - The `Model.save` method will be called and model signals will run
              - This can be slow if there are too many signals or many records in the query
              - This is considered the more safe and default behavior
            query: records will be updated in a single query
              - The `QuerySet.update` method will be called and model signals will not run
              - This will be fast, but may break data constraints that are controlled by signals
              - This is considered unsafe but useful in certain situations

        The server's successful response to a patch-all request
        will NOT include any individual records. Instead, the response content will contain
        a "meta" object with an "updated" count of updated records.

        Examples:

        Update one dog:

            PATCH /dogs/1/
            {
                'fur': 'white'
            }

        Update many dogs by ID:

            PATCH /dogs/
            [
                {'id': 1, 'fur': 'white'},
                {'id': 2, 'fur': 'black'},
                {'id': 3, 'fur': 'yellow'}
            ]

        Update all dogs in a query:

            PATCH /dogs/?filter{fur.contains}=brown&patch-all=true
            {
                'fur': 'gold'
            }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    patch:
      operationId: documents_partial_update_2
      description: API endpoint that allows documents to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v2/documents/{id}/linked_resources/:
    get:
      operationId: documents_linked_resources_list
      description: API endpoint allowing to retrieve the DocumentResourceLink(s).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - documents
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResourceBaseList'
          description: ''
  /api/v2/geoapps/:
    get:
      operationId: geoapps_list
      description: API endpoint that allows geoapps to be viewed or edited.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - geoapps
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGeoAppList'
          description: ''
    post:
      operationId: geoapps_create
      description: |-
        Either create a single or many model instances in bulk
        using the Serializer's many=True ability from Django REST >= 2.2.5.

        The data can be represented by the serializer name (single or plural
        forms), dict or list.

        Examples:

        POST /dogs/
        {
          "name": "Fido",
          "age": 2
        }

        POST /dogs/
        {
          "dog": {
            "name": "Lucky",
            "age": 3
          }
        }

        POST /dogs/
        {
          "dogs": [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
          ]
        }

        POST /dogs/
        [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
        ]
      tags:
      - geoapps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoApp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GeoApp'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GeoApp'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoApp'
          description: ''
    patch:
      operationId: geoapps_partial_update
      description: API endpoint that allows geoapps to be viewed or edited.
      tags:
      - geoapps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGeoApp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGeoApp'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGeoApp'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoApp'
          description: ''
  /api/v2/geoapps/{id}/:
    get:
      operationId: geoapps_retrieve
      description: API endpoint that allows geoapps to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this geo app.
        required: true
      tags:
      - geoapps
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoApp'
          description: ''
    put:
      operationId: geoapps_update
      description: |-
        Update one or more model instances.

        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records
        may be updated in a single call, provided their IDs.

        If ENABLE_PATCH_ALL is set, multiple records
        may be updated in a single PATCH call, even without knowing their IDs.

        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature
        and used with caution. This feature must be enabled at the viewset level
        and must also be requested explicitly by the client
        via the "patch-all" query parameter.

        This parameter can have one of the following values:

            true (or 1): records will be fetched and then updated in a transaction loop
              - The `Model.save` method will be called and model signals will run
              - This can be slow if there are too many signals or many records in the query
              - This is considered the more safe and default behavior
            query: records will be updated in a single query
              - The `QuerySet.update` method will be called and model signals will not run
              - This will be fast, but may break data constraints that are controlled by signals
              - This is considered unsafe but useful in certain situations

        The server's successful response to a patch-all request
        will NOT include any individual records. Instead, the response content will contain
        a "meta" object with an "updated" count of updated records.

        Examples:

        Update one dog:

            PATCH /dogs/1/
            {
                'fur': 'white'
            }

        Update many dogs by ID:

            PATCH /dogs/
            [
                {'id': 1, 'fur': 'white'},
                {'id': 2, 'fur': 'black'},
                {'id': 3, 'fur': 'yellow'}
            ]

        Update all dogs in a query:

            PATCH /dogs/?filter{fur.contains}=brown&patch-all=true
            {
                'fur': 'gold'
            }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this geo app.
        required: true
      tags:
      - geoapps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoApp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GeoApp'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GeoApp'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoApp'
          description: ''
    patch:
      operationId: geoapps_partial_update_2
      description: API endpoint that allows geoapps to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this geo app.
        required: true
      tags:
      - geoapps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGeoApp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGeoApp'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGeoApp'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoApp'
          description: ''
  /api/v2/geoapps/{id}/{field_name}/:
    get:
      operationId: geoapps_retrieve_2
      description: |-
        Fetch related object(s), as if sideloaded (used to support
        link objects).

        This method gets mapped to `/<resource>/<pk>/<field_name>/` by
        DynamicRouter for all DynamicRelationField fields. Generally,
        this method probably shouldn't be overridden.

        An alternative implementation would be to generate reverse queries.
        For an exploration of that approach, see:
            https://gist.github.com/ryochiji/54687d675978c7d96503
      parameters:
      - in: path
        name: field_name
        schema:
          type: string
          pattern: ^data$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this geo app.
        required: true
      tags:
      - geoapps
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoApp'
          description: ''
  /api/v2/groups/:
    get:
      operationId: groups_list
      description: API endpoint that allows gropus to be viewed or edited.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - groups
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupProfileList'
          description: ''
    post:
      operationId: groups_create
      description: |-
        Either create a single or many model instances in bulk
        using the Serializer's many=True ability from Django REST >= 2.2.5.

        The data can be represented by the serializer name (single or plural
        forms), dict or list.

        Examples:

        POST /dogs/
        {
          "name": "Fido",
          "age": 2
        }

        POST /dogs/
        {
          "dog": {
            "name": "Lucky",
            "age": 3
          }
        }

        POST /dogs/
        {
          "dogs": [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
          ]
        }

        POST /dogs/
        [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
        ]
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupProfile'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProfile'
          description: ''
    patch:
      operationId: groups_partial_update
      description: API endpoint that allows gropus to be viewed or edited.
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroupProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroupProfile'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProfile'
          description: ''
    delete:
      operationId: groups_destroy
      description: |-
        Either delete a single or many model instances in bulk

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      tags:
      - groups
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/groups/{id}/:
    get:
      operationId: groups_retrieve
      description: API endpoint that allows gropus to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group profile.
        required: true
      tags:
      - groups
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProfile'
          description: ''
    put:
      operationId: groups_update
      description: |-
        Update one or more model instances.

        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records
        may be updated in a single call, provided their IDs.

        If ENABLE_PATCH_ALL is set, multiple records
        may be updated in a single PATCH call, even without knowing their IDs.

        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature
        and used with caution. This feature must be enabled at the viewset level
        and must also be requested explicitly by the client
        via the "patch-all" query parameter.

        This parameter can have one of the following values:

            true (or 1): records will be fetched and then updated in a transaction loop
              - The `Model.save` method will be called and model signals will run
              - This can be slow if there are too many signals or many records in the query
              - This is considered the more safe and default behavior
            query: records will be updated in a single query
              - The `QuerySet.update` method will be called and model signals will not run
              - This will be fast, but may break data constraints that are controlled by signals
              - This is considered unsafe but useful in certain situations

        The server's successful response to a patch-all request
        will NOT include any individual records. Instead, the response content will contain
        a "meta" object with an "updated" count of updated records.

        Examples:

        Update one dog:

            PATCH /dogs/1/
            {
                'fur': 'white'
            }

        Update many dogs by ID:

            PATCH /dogs/
            [
                {'id': 1, 'fur': 'white'},
                {'id': 2, 'fur': 'black'},
                {'id': 3, 'fur': 'yellow'}
            ]

        Update all dogs in a query:

            PATCH /dogs/?filter{fur.contains}=brown&patch-all=true
            {
                'fur': 'gold'
            }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group profile.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupProfile'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProfile'
          description: ''
    patch:
      operationId: groups_partial_update_2
      description: API endpoint that allows gropus to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group profile.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroupProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroupProfile'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProfile'
          description: ''
    delete:
      operationId: groups_destroy_2
      description: |-
        Either delete a single or many model instances in bulk

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group profile.
        required: true
      tags:
      - groups
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/groups/{id}/managers/:
    get:
      operationId: groups_managers_list
      description: API endpoint allowing to retrieve the Group managers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group profile.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - groups
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserProfileList'
          description: ''
  /api/v2/groups/{id}/members/:
    get:
      operationId: groups_members_list
      description: API endpoint allowing to retrieve the Group members.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group profile.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - groups
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserProfileList'
          description: ''
  /api/v2/groups/{id}/resources/:
    get:
      operationId: groups_resources_list
      description: API endpoint allowing to retrieve the Group specific resources.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group profile.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - groups
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResourceBaseList'
          description: ''
  /api/v2/harvesters/:
    get:
      operationId: harvesters_list
      description: |-
        A viewset that can support dynamic API features.

        Attributes:
          features: A list of features supported by the viewset.
          meta: Extra data that is added to the response by the DynamicRenderer.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - harvesters
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBriefHarvesterList'
          description: ''
    post:
      operationId: harvesters_create
      description: |-
        Either create a single or many model instances in bulk
        using the Serializer's many=True ability from Django REST >= 2.2.5.

        The data can be represented by the serializer name (single or plural
        forms), dict or list.

        Examples:

        POST /dogs/
        {
          "name": "Fido",
          "age": 2
        }

        POST /dogs/
        {
          "dog": {
            "name": "Lucky",
            "age": 3
          }
        }

        POST /dogs/
        {
          "dogs": [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
          ]
        }

        POST /dogs/
        [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
        ]
      tags:
      - harvesters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Harvester'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Harvester'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Harvester'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Harvester'
          description: ''
  /api/v2/harvesters/{harvester_id}/harvestable-resources/:
    get:
      operationId: harvesters_harvestable_resources_retrieve
      description: |-
        Adds the `update_list` method to a viewset

        `update_list` is used by `api.routers.ListPatchRouter` in order to allow
        performing PATCH requests against a viewset's `list` endpoint
      parameters:
      - in: path
        name: harvester_id
        schema:
          type: integer
        required: true
      tags:
      - harvesters
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
    patch:
      operationId: harvesters_harvestable_resources_partial_update
      description: |-
        Adds the `update_list` method to a viewset

        `update_list` is used by `api.routers.ListPatchRouter` in order to allow
        performing PATCH requests against a viewset's `list` endpoint
      parameters:
      - in: path
        name: harvester_id
        schema:
          type: integer
        required: true
      tags:
      - harvesters
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v2/harvesters/{id}/:
    get:
      operationId: harvesters_retrieve
      description: |-
        A viewset that can support dynamic API features.

        Attributes:
          features: A list of features supported by the viewset.
          meta: Extra data that is added to the response by the DynamicRenderer.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this harvester.
        required: true
      tags:
      - harvesters
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Harvester'
          description: ''
    put:
      operationId: harvesters_update
      description: |-
        Update one or more model instances.

        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records
        may be updated in a single call, provided their IDs.

        If ENABLE_PATCH_ALL is set, multiple records
        may be updated in a single PATCH call, even without knowing their IDs.

        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature
        and used with caution. This feature must be enabled at the viewset level
        and must also be requested explicitly by the client
        via the "patch-all" query parameter.

        This parameter can have one of the following values:

            true (or 1): records will be fetched and then updated in a transaction loop
              - The `Model.save` method will be called and model signals will run
              - This can be slow if there are too many signals or many records in the query
              - This is considered the more safe and default behavior
            query: records will be updated in a single query
              - The `QuerySet.update` method will be called and model signals will not run
              - This will be fast, but may break data constraints that are controlled by signals
              - This is considered unsafe but useful in certain situations

        The server's successful response to a patch-all request
        will NOT include any individual records. Instead, the response content will contain
        a "meta" object with an "updated" count of updated records.

        Examples:

        Update one dog:

            PATCH /dogs/1/
            {
                'fur': 'white'
            }

        Update many dogs by ID:

            PATCH /dogs/
            [
                {'id': 1, 'fur': 'white'},
                {'id': 2, 'fur': 'black'},
                {'id': 3, 'fur': 'yellow'}
            ]

        Update all dogs in a query:

            PATCH /dogs/?filter{fur.contains}=brown&patch-all=true
            {
                'fur': 'gold'
            }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this harvester.
        required: true
      tags:
      - harvesters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Harvester'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Harvester'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Harvester'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Harvester'
          description: ''
    patch:
      operationId: harvesters_partial_update
      description: |-
        A viewset that can support dynamic API features.

        Attributes:
          features: A list of features supported by the viewset.
          meta: Extra data that is added to the response by the DynamicRenderer.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this harvester.
        required: true
      tags:
      - harvesters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHarvester'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHarvester'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHarvester'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Harvester'
          description: ''
    delete:
      operationId: harvesters_destroy
      description: |-
        Either delete a single or many model instances in bulk

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this harvester.
        required: true
      tags:
      - harvesters
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/harvesting-sessions/:
    get:
      operationId: harvesting_sessions_list
      description: |-
        A viewset that can support dynamic API features.

        Attributes:
          features: A list of features supported by the viewset.
          meta: Extra data that is added to the response by the DynamicRenderer.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - harvesting-sessions
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBriefAsynchronousHarvestingSessionList'
          description: ''
  /api/v2/harvesting-sessions/{id}/:
    get:
      operationId: harvesting_sessions_retrieve
      description: |-
        A viewset that can support dynamic API features.

        Attributes:
          features: A list of features supported by the viewset.
          meta: Extra data that is added to the response by the DynamicRenderer.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this asynchronous harvesting
          session.
        required: true
      tags:
      - harvesting-sessions
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefAsynchronousHarvestingSession'
          description: ''
  /api/v2/keywords/:
    get:
      operationId: keywords_list
      description: API endpoint that lists hierarchical keywords.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - keywords
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHierarchicalKeywordList'
          description: ''
  /api/v2/keywords/{id}/:
    get:
      operationId: keywords_retrieve
      description: API endpoint that lists hierarchical keywords.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this hierarchical keyword.
        required: true
      tags:
      - keywords
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchicalKeyword'
          description: ''
  /api/v2/management/commands/:
    get:
      operationId: management_commands_retrieve
      description: |-
        Handle the exposed management commands usage:
          - GET: List of exposed commands
          - GET detail: Help for a specific command
          - POST: Create a job (and automatic runs) for a specific command.
      tags:
      - management
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementCommandJobCreate'
          description: ''
    post:
      operationId: management_commands_create
      description: |-
        Creates and runs a management command job.
        Expects application/json content type in a following shape:
        {
            "args": [<arg1>, <arg2>],
            "kwargs: {<key1>: <val1>, <key2>: <val2>},
            "autostart": bool
        }
        By default, autostart is set to true.
      tags:
      - management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagementCommandJobCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ManagementCommandJobCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ManagementCommandJobCreate'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementCommandJobCreate'
          description: ''
  /api/v2/management/commands/{cmd_name}/:
    get:
      operationId: management_commands_retrieve_2
      description: |-
        Handle the exposed management commands usage:
          - GET: List of exposed commands
          - GET detail: Help for a specific command
          - POST: Create a job (and automatic runs) for a specific command.
      parameters:
      - in: path
        name: cmd_name
        schema:
          type: string
          pattern: ^\w+$
        required: true
      tags:
      - management
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementCommandJobCreate'
          description: ''
    post:
      operationId: management_commands_create_2
      description: |-
        Creates and runs a management command job.
        Expects application/json content type in a following shape:
        {
            "args": [<arg1>, <arg2>],
            "kwargs: {<key1>: <val1>, <key2>: <val2>},
            "autostart": bool
        }
        By default, autostart is set to true.
      parameters:
      - in: path
        name: cmd_name
        schema:
          type: string
          pattern: ^\w+$
        required: true
      tags:
      - management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagementCommandJobCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ManagementCommandJobCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ManagementCommandJobCreate'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementCommandJobCreate'
          description: ''
  /api/v2/management/commands/{cmd_name}/jobs/:
    get:
      operationId: management_commands_jobs_list
      description: Create, List, Retrieve, Start, Stop and Get Status of a Management
        Command Job.
      parameters:
      - in: query
        name: app_name
        schema:
          type: string
      - in: query
        name: celery_result_id
        schema:
          type: string
          format: uuid
      - in: path
        name: cmd_name
        schema:
          type: string
          pattern: ^\w+$
        required: true
      - in: query
        name: command
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - CREATED
          - FINISHED
          - QUEUED
          - STARTED
      - in: query
        name: user
        schema:
          type: integer
      - in: query
        name: user__username
        schema:
          type: string
      tags:
      - management
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedManagementCommandJobListList'
          description: ''
    post:
      operationId: management_commands_jobs_create
      description: Create, List, Retrieve, Start, Stop and Get Status of a Management
        Command Job.
      parameters:
      - in: path
        name: cmd_name
        schema:
          type: string
          pattern: ^\w+$
        required: true
      tags:
      - management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagementCommandJobCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ManagementCommandJobCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ManagementCommandJobCreate'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementCommandJobCreate'
          description: ''
  /api/v2/management/commands/{cmd_name}/jobs/{id}/:
    get:
      operationId: management_commands_jobs_retrieve
      description: Create, List, Retrieve, Start, Stop and Get Status of a Management
        Command Job.
      parameters:
      - in: path
        name: cmd_name
        schema:
          type: string
          pattern: ^\w+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this management command job.
        required: true
      tags:
      - management
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementCommandJob'
          description: ''
  /api/v2/management/commands/{cmd_name}/jobs/{id}/start/:
    patch:
      operationId: management_commands_jobs_start_partial_update
      description: Create, List, Retrieve, Start, Stop and Get Status of a Management
        Command Job.
      parameters:
      - in: path
        name: cmd_name
        schema:
          type: string
          pattern: ^\w+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this management command job.
        required: true
      tags:
      - management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedManagementCommandJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedManagementCommandJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedManagementCommandJob'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementCommandJob'
          description: ''
  /api/v2/management/commands/{cmd_name}/jobs/{id}/status/:
    get:
      operationId: management_commands_jobs_status_retrieve
      description: Create, List, Retrieve, Start, Stop and Get Status of a Management
        Command Job.
      parameters:
      - in: path
        name: cmd_name
        schema:
          type: string
          pattern: ^\w+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this management command job.
        required: true
      tags:
      - management
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementCommandJob'
          description: ''
  /api/v2/management/commands/{cmd_name}/jobs/{id}/stop/:
    patch:
      operationId: management_commands_jobs_stop_partial_update
      description: Create, List, Retrieve, Start, Stop and Get Status of a Management
        Command Job.
      parameters:
      - in: path
        name: cmd_name
        schema:
          type: string
          pattern: ^\w+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this management command job.
        required: true
      tags:
      - management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedManagementCommandJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedManagementCommandJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedManagementCommandJob'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementCommandJob'
          description: ''
  /api/v2/management/jobs/:
    get:
      operationId: management_jobs_list
      description: Create, List, Retrieve, Start, Stop and Get Status of a Management
        Command Job.
      parameters:
      - in: query
        name: app_name
        schema:
          type: string
      - in: query
        name: celery_result_id
        schema:
          type: string
          format: uuid
      - in: query
        name: command
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - CREATED
          - FINISHED
          - QUEUED
          - STARTED
      - in: query
        name: user
        schema:
          type: integer
      - in: query
        name: user__username
        schema:
          type: string
      tags:
      - management
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedManagementCommandJobListList'
          description: ''
    post:
      operationId: management_jobs_create
      description: Create, List, Retrieve, Start, Stop and Get Status of a Management
        Command Job.
      tags:
      - management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagementCommandJobCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ManagementCommandJobCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ManagementCommandJobCreate'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementCommandJobCreate'
          description: ''
  /api/v2/management/jobs/{id}/:
    get:
      operationId: management_jobs_retrieve
      description: Create, List, Retrieve, Start, Stop and Get Status of a Management
        Command Job.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this management command job.
        required: true
      tags:
      - management
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementCommandJob'
          description: ''
  /api/v2/management/jobs/{id}/start/:
    patch:
      operationId: management_jobs_start_partial_update
      description: Create, List, Retrieve, Start, Stop and Get Status of a Management
        Command Job.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this management command job.
        required: true
      tags:
      - management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedManagementCommandJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedManagementCommandJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedManagementCommandJob'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementCommandJob'
          description: ''
  /api/v2/management/jobs/{id}/status/:
    get:
      operationId: management_jobs_status_retrieve
      description: Create, List, Retrieve, Start, Stop and Get Status of a Management
        Command Job.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this management command job.
        required: true
      tags:
      - management
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementCommandJob'
          description: ''
  /api/v2/management/jobs/{id}/stop/:
    patch:
      operationId: management_jobs_stop_partial_update
      description: Create, List, Retrieve, Start, Stop and Get Status of a Management
        Command Job.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this management command job.
        required: true
      tags:
      - management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedManagementCommandJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedManagementCommandJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedManagementCommandJob'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementCommandJob'
          description: ''
  /api/v2/maps/:
    get:
      operationId: maps_list
      description: API endpoint that allows maps to be viewed or edited.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - maps
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMapList'
          description: ''
    post:
      operationId: maps_create
      description: |-
        Changes in the m2m `maplayers` are committed before object changes.
        To protect the db, this action is done within an atomic tansation.
      tags:
      - maps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Map'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Map'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Map'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: ''
    patch:
      operationId: maps_partial_update
      description: API endpoint that allows maps to be viewed or edited.
      tags:
      - maps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMap'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMap'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMap'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: ''
  /api/v2/maps/{id}/:
    get:
      operationId: maps_retrieve
      description: API endpoint that allows maps to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map.
        required: true
      tags:
      - maps
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: ''
    put:
      operationId: maps_update
      description: |-
        Changes in the m2m `maplayers` are committed before object changes.
        To protect the db, this action is done within an atomic tansation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map.
        required: true
      tags:
      - maps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Map'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Map'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Map'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: ''
    patch:
      operationId: maps_partial_update_2
      description: API endpoint that allows maps to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map.
        required: true
      tags:
      - maps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMap'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMap'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMap'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: ''
  /api/v2/maps/{id}/{field_name}/:
    get:
      operationId: maps_retrieve_2
      description: |-
        Fetch related object(s), as if sideloaded (used to support
        link objects).

        This method gets mapped to `/<resource>/<pk>/<field_name>/` by
        DynamicRouter for all DynamicRelationField fields. Generally,
        this method probably shouldn't be overridden.

        An alternative implementation would be to generate reverse queries.
        For an exploration of that approach, see:
            https://gist.github.com/ryochiji/54687d675978c7d96503
      parameters:
      - in: path
        name: field_name
        schema:
          type: string
          pattern: ^data$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map.
        required: true
      tags:
      - maps
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: ''
  /api/v2/maps/{id}/datasets/:
    get:
      operationId: maps_datasets_list
      description: API endpoint allowing to retrieve the local MapLayers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - maps
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDatasetList'
          description: ''
  /api/v2/maps/{id}/maplayers/:
    get:
      operationId: maps_maplayers_list
      description: API endpoint allowing to retrieve the MapLayers list.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - maps
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMapLayerList'
          description: ''
  /api/v2/owners/:
    get:
      operationId: owners_list
      description: API endpoint that lists all possible owners.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - owners
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOwnerList'
          description: ''
  /api/v2/owners/{id}/:
    get:
      operationId: owners_retrieve
      description: API endpoint that lists all possible owners.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - owners
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Owner'
          description: ''
  /api/v2/regions/:
    get:
      operationId: regions_list
      description: API endpoint that lists regions.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - regions
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRegionList'
          description: ''
  /api/v2/regions/{id}/:
    get:
      operationId: regions_retrieve
      description: API endpoint that lists regions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this region.
        required: true
      tags:
      - regions
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
  /api/v2/resource-service/execution-status/{execution_id}:
    get:
      operationId: resource_service_execution_status_retrieve
      description: |-
        Main dispatcher endpoint to follow an API request status progress

        - GET input: <str: execution id>
        - output: <ExecutionRequest>
      parameters:
      - in: path
        name: execution_id
        schema:
          type: string
        required: true
      tags:
      - resource-service
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v2/resources/:
    get:
      operationId: resources_list
      description: API endpoint that allows base resources to be viewed or edited.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - resources
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResourceBaseList'
          description: ''
    post:
      operationId: resources_create
      description: |-
        Either create a single or many model instances in bulk
        using the Serializer's many=True ability from Django REST >= 2.2.5.

        The data can be represented by the serializer name (single or plural
        forms), dict or list.

        Examples:

        POST /dogs/
        {
          "name": "Fido",
          "age": 2
        }

        POST /dogs/
        {
          "dog": {
            "name": "Lucky",
            "age": 3
          }
        }

        POST /dogs/
        {
          "dogs": [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
          ]
        }

        POST /dogs/
        [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
        ]
      tags:
      - resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceBase'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
    patch:
      operationId: resources_partial_update
      description: API endpoint that allows base resources to be viewed or edited.
      tags:
      - resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResourceBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedResourceBase'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
    delete:
      operationId: resources_destroy
      description: |-
        Either delete a single or many model instances in bulk

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      tags:
      - resources
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/resources/{id}/:
    get:
      operationId: resources_retrieve
      description: API endpoint that allows base resources to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
    put:
      operationId: resources_update
      description: |-
        Update one or more model instances.

        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records
        may be updated in a single call, provided their IDs.

        If ENABLE_PATCH_ALL is set, multiple records
        may be updated in a single PATCH call, even without knowing their IDs.

        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature
        and used with caution. This feature must be enabled at the viewset level
        and must also be requested explicitly by the client
        via the "patch-all" query parameter.

        This parameter can have one of the following values:

            true (or 1): records will be fetched and then updated in a transaction loop
              - The `Model.save` method will be called and model signals will run
              - This can be slow if there are too many signals or many records in the query
              - This is considered the more safe and default behavior
            query: records will be updated in a single query
              - The `QuerySet.update` method will be called and model signals will not run
              - This will be fast, but may break data constraints that are controlled by signals
              - This is considered unsafe but useful in certain situations

        The server's successful response to a patch-all request
        will NOT include any individual records. Instead, the response content will contain
        a "meta" object with an "updated" count of updated records.

        Examples:

        Update one dog:

            PATCH /dogs/1/
            {
                'fur': 'white'
            }

        Update many dogs by ID:

            PATCH /dogs/
            [
                {'id': 1, 'fur': 'white'},
                {'id': 2, 'fur': 'black'},
                {'id': 3, 'fur': 'yellow'}
            ]

        Update all dogs in a query:

            PATCH /dogs/?filter{fur.contains}=brown&patch-all=true
            {
                'fur': 'gold'
            }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceBase'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
    patch:
      operationId: resources_partial_update_2
      description: API endpoint that allows base resources to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResourceBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedResourceBase'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
    delete:
      operationId: resources_destroy_2
      description: |-
        Either delete a single or many model instances in bulk

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/resources/{id}/{field_name}/:
    get:
      operationId: resources_retrieve_2
      description: |-
        Fetch related object(s), as if sideloaded (used to support
        link objects).

        This method gets mapped to `/<resource>/<pk>/<field_name>/` by
        DynamicRouter for all DynamicRelationField fields. Generally,
        this method probably shouldn't be overridden.

        An alternative implementation would be to generate reverse queries.
        For an exploration of that approach, see:
            https://gist.github.com/ryochiji/54687d675978c7d96503
      parameters:
      - in: path
        name: field_name
        schema:
          type: string
          pattern: ^data$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
  /api/v2/resources/{id}/copy/:
    put:
      operationId: resources_copy_update
      description: Instructs the Async dispatcher to execute a 'COPY' operation over
        a valid 'uuid'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceBase'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v2/resources/{id}/delete/:
    delete:
      operationId: resources_delete_destroy
      description: Instructs the Async dispatcher to execute a 'DELETE' operation
        over a valid 'uuid'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v2/resources/{id}/extra_metadata/:
    get:
      operationId: resources_extra_metadata_retrieve
      description: Get/Update/Delete/Add extra metadata for resource
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
    post:
      operationId: resources_extra_metadata_create
      description: Get/Update/Delete/Add extra metadata for resource
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceBase'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
    put:
      operationId: resources_extra_metadata_update
      description: Get/Update/Delete/Add extra metadata for resource
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceBase'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
    delete:
      operationId: resources_extra_metadata_destroy
      description: Get/Update/Delete/Add extra metadata for resource
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/resources/{id}/favorite/:
    post:
      operationId: resources_favorite_create
      description: API endpoint allowing to retrieve the favorite Resources.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceBase'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFavoriteList'
          description: ''
    delete:
      operationId: resources_favorite_destroy
      description: API endpoint allowing to retrieve the favorite Resources.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - resources
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFavoriteList'
          description: ''
  /api/v2/resources/{id}/permissions/:
    get:
      operationId: resources_permissions_retrieve
      description: "\n        Sets an object's the permission levels based on the\
        \ perm_spec JSON.\n\n        the mapping looks like:\n        ```\n      \
        \  {\n            'users': {\n                'AnonymousUser': ['view'],\n\
        \                <username>: ['perm1','perm2','perm3'],\n                <username2>:\
        \ ['perm1','perm2','perm3']\n                ...\n            },\n       \
        \     'groups': {\n                <groupname>: ['perm1','perm2','perm3'],\n\
        \                <groupname2>: ['perm1','perm2','perm3'],\n              \
        \  ...\n            }\n        }\n        ```\n        "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: resources_permissions_update
      description: "\n        Sets an object's the permission levels based on the\
        \ perm_spec JSON.\n\n        the mapping looks like:\n        ```\n      \
        \  {\n            'users': {\n                'AnonymousUser': ['view'],\n\
        \                <username>: ['perm1','perm2','perm3'],\n                <username2>:\
        \ ['perm1','perm2','perm3']\n                ...\n            },\n       \
        \     'groups': {\n                <groupname>: ['perm1','perm2','perm3'],\n\
        \                <groupname2>: ['perm1','perm2','perm3'],\n              \
        \  ...\n            }\n        }\n        ```\n        "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermSpecSerialiazer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PermSpecSerialiazer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PermSpecSerialiazer'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: resources_permissions_partial_update
      description: "\n        Sets an object's the permission levels based on the\
        \ perm_spec JSON.\n\n        the mapping looks like:\n        ```\n      \
        \  {\n            'users': {\n                'AnonymousUser': ['view'],\n\
        \                <username>: ['perm1','perm2','perm3'],\n                <username2>:\
        \ ['perm1','perm2','perm3']\n                ...\n            },\n       \
        \     'groups': {\n                <groupname>: ['perm1','perm2','perm3'],\n\
        \                <groupname2>: ['perm1','perm2','perm3'],\n              \
        \  ...\n            }\n        }\n        ```\n        "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPermSpecSerialiazer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPermSpecSerialiazer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPermSpecSerialiazer'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: resources_permissions_destroy
      description: "\n        Sets an object's the permission levels based on the\
        \ perm_spec JSON.\n\n        the mapping looks like:\n        ```\n      \
        \  {\n            'users': {\n                'AnonymousUser': ['view'],\n\
        \                <username>: ['perm1','perm2','perm3'],\n                <username2>:\
        \ ['perm1','perm2','perm3']\n                ...\n            },\n       \
        \     'groups': {\n                <groupname>: ['perm1','perm2','perm3'],\n\
        \                <groupname2>: ['perm1','perm2','perm3'],\n              \
        \  ...\n            }\n        }\n        ```\n        "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/v2/resources/{id}/ratings/:
    get:
      operationId: resources_ratings_retrieve
      description: API endpoint allowing to rate and get overall rating of the Resource.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
    post:
      operationId: resources_ratings_create
      description: API endpoint allowing to rate and get overall rating of the Resource.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceBase'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v2/resources/{id}/set_thumbnail/:
    put:
      operationId: resources_set_thumbnail_update
      description: API endpoint allowing to set thumbnail of the Resource.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceBase'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v2/resources/{id}/update/:
    put:
      operationId: resources_update_update
      description: Instructs the Async dispatcher to execute a 'UPDATE' operation
        over a valid 'uuid'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceBase'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v2/resources/{resource_id}/set_thumbnail_from_bbox/:
    post:
      operationId: resources_set_thumbnail_from_bbox_create
      description: API endpoint allowing to set the thumbnail url for an existing
        dataset.
      parameters:
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceBase'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v2/resources/approved/:
    get:
      operationId: resources_approved_list
      description: API endpoint allowing to retrieve the approved Resources.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - resources
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResourceBaseList'
          description: ''
  /api/v2/resources/create/{resource_type}/:
    post:
      operationId: resources_create_create
      description: Instructs the Async dispatcher to execute a 'CREATE' operation.
      parameters:
      - in: path
        name: resource_type
        schema:
          type: string
          pattern: ^\w+$
        required: true
      tags:
      - resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceBase'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v2/resources/favorites/:
    get:
      operationId: resources_favorites_list
      description: API endpoint allowing to retrieve the favorite Resources.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - resources
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFavoriteList'
          description: ''
  /api/v2/resources/featured/:
    get:
      operationId: resources_featured_list
      description: API endpoint allowing to retrieve the featured Resources.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - resources
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResourceBaseList'
          description: ''
  /api/v2/resources/ingest/{resource_type}/:
    post:
      operationId: resources_ingest_create
      description: Instructs the Async dispatcher to execute a 'INGEST' operation.
      parameters:
      - in: path
        name: resource_type
        schema:
          type: string
          pattern: ^\w+$
        required: true
      tags:
      - resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceBase'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v2/resources/published/:
    get:
      operationId: resources_published_list
      description: API endpoint allowing to retrieve the published Resources.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - resources
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResourceBaseList'
          description: ''
  /api/v2/resources/resource_types/:
    get:
      operationId: resources_resource_types_retrieve
      description: "\n        Returns the list of available ResourceBase polymorphic_ctypes.\n\
        \n        the mapping looks like:\n        ```\n        {\n            \"\
        resource_types\":[\n                {\n                    \"name\": \"layer\"\
        ,\n                    \"count\": <number of layers>\n                },\n\
        \                {\n                    \"name\": \"map\",\n             \
        \       \"count\": <number of maps>\n                },\n                {\n\
        \                    \"name\": \"document\",\n                    \"count\"\
        : <number of documents>\n                },\n                {\n         \
        \           \"name\": \"geostory\",\n                    \"count\": <number\
        \ of geostories>\n                }\n            ]\n        }\n        ```\n\
        \        "
      tags:
      - resources
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBaseTypes'
          description: ''
  /api/v2/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - de-de
          - en-us
          - es-es
          - fr-fr
          - it-it
      tags:
      - schema
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v2/tkeywords/:
    get:
      operationId: tkeywords_list
      description: API endpoint that lists Thesaurus keywords.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - tkeywords
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedThesaurusKeywordList'
          description: ''
  /api/v2/tkeywords/{id}/:
    get:
      operationId: tkeywords_retrieve
      description: API endpoint that lists Thesaurus keywords.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this thesaurus keyword.
        required: true
      tags:
      - tkeywords
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThesaurusKeyword'
          description: ''
  /api/v2/upload-parallelism-limits/:
    get:
      operationId: upload_parallelism_limits_list
      description: |-
        A viewset that can support dynamic API features.

        Attributes:
          features: A list of features supported by the viewset.
          meta: Extra data that is added to the response by the DynamicRenderer.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - upload-parallelism-limits
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUploadParallelismLimitList'
          description: ''
    post:
      operationId: upload_parallelism_limits_create
      description: |-
        Either create a single or many model instances in bulk
        using the Serializer's many=True ability from Django REST >= 2.2.5.

        The data can be represented by the serializer name (single or plural
        forms), dict or list.

        Examples:

        POST /dogs/
        {
          "name": "Fido",
          "age": 2
        }

        POST /dogs/
        {
          "dog": {
            "name": "Lucky",
            "age": 3
          }
        }

        POST /dogs/
        {
          "dogs": [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
          ]
        }

        POST /dogs/
        [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
        ]
      tags:
      - upload-parallelism-limits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadParallelismLimit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadParallelismLimit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadParallelismLimit'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadParallelismLimit'
          description: ''
  /api/v2/upload-parallelism-limits/{slug}/:
    get:
      operationId: upload_parallelism_limits_retrieve
      description: |-
        A viewset that can support dynamic API features.

        Attributes:
          features: A list of features supported by the viewset.
          meta: Extra data that is added to the response by the DynamicRenderer.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: A unique value identifying this upload parallelism limit.
        required: true
      tags:
      - upload-parallelism-limits
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadParallelismLimit'
          description: ''
  /api/v2/upload-size-limits/:
    get:
      operationId: upload_size_limits_list
      description: |-
        A viewset that can support dynamic API features.

        Attributes:
          features: A list of features supported by the viewset.
          meta: Extra data that is added to the response by the DynamicRenderer.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - upload-size-limits
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUploadSizeLimitList'
          description: ''
    post:
      operationId: upload_size_limits_create
      description: |-
        Either create a single or many model instances in bulk
        using the Serializer's many=True ability from Django REST >= 2.2.5.

        The data can be represented by the serializer name (single or plural
        forms), dict or list.

        Examples:

        POST /dogs/
        {
          "name": "Fido",
          "age": 2
        }

        POST /dogs/
        {
          "dog": {
            "name": "Lucky",
            "age": 3
          }
        }

        POST /dogs/
        {
          "dogs": [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
          ]
        }

        POST /dogs/
        [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
        ]
      tags:
      - upload-size-limits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadSizeLimit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadSizeLimit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadSizeLimit'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSizeLimit'
          description: ''
  /api/v2/upload-size-limits/{slug}/:
    get:
      operationId: upload_size_limits_retrieve
      description: |-
        A viewset that can support dynamic API features.

        Attributes:
          features: A list of features supported by the viewset.
          meta: Extra data that is added to the response by the DynamicRenderer.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: A unique value identifying this upload size limit.
        required: true
      tags:
      - upload-size-limits
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSizeLimit'
          description: ''
  /api/v2/uploads/:
    get:
      operationId: uploads_list
      description: API endpoint that allows uploads to be viewed or edited.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - uploads
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUploadList'
          description: ''
    post:
      operationId: uploads_create
      description: |-
        Either create a single or many model instances in bulk
        using the Serializer's many=True ability from Django REST >= 2.2.5.

        The data can be represented by the serializer name (single or plural
        forms), dict or list.

        Examples:

        POST /dogs/
        {
          "name": "Fido",
          "age": 2
        }

        POST /dogs/
        {
          "dog": {
            "name": "Lucky",
            "age": 3
          }
        }

        POST /dogs/
        {
          "dogs": [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
          ]
        }

        POST /dogs/
        [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
        ]
      tags:
      - uploads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Upload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Upload'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Upload'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upload'
          description: ''
  /api/v2/uploads/{id}/:
    get:
      operationId: uploads_retrieve
      description: API endpoint that allows uploads to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this upload.
        required: true
      tags:
      - uploads
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upload'
          description: ''
  /api/v2/uploads/upload/:
    post:
      operationId: uploads_upload_create
      description: "\n        Starts an upload session based on the Dataset Upload\
        \ Form.\n\n        the form params look like:\n        ```\n            'csrfmiddlewaretoken':\
        \ self.csrf_token,\n            'permissions': '{ \"users\": {\"AnonymousUser\"\
        : [\"view_resourcebase\"]} , \"groups\":{}}',\n            'time': 'false',\n\
        \            'charset': 'UTF-8',\n            'base_file': base_file,\n  \
        \          'dbf_file': dbf_file,\n            'shx_file': shx_file,\n    \
        \        'prj_file': prj_file,\n            'tif_file': tif_file\n       \
        \ ```\n        "
      tags:
      - uploads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Upload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Upload'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Upload'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          description: No response body
  /api/v2/users/:
    get:
      operationId: users_list
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserProfileList'
          description: ''
    post:
      operationId: users_create
      description: |-
        Either create a single or many model instances in bulk
        using the Serializer's many=True ability from Django REST >= 2.2.5.

        The data can be represented by the serializer name (single or plural
        forms), dict or list.

        Examples:

        POST /dogs/
        {
          "name": "Fido",
          "age": 2
        }

        POST /dogs/
        {
          "dog": {
            "name": "Lucky",
            "age": 3
          }
        }

        POST /dogs/
        {
          "dogs": [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
          ]
        }

        POST /dogs/
        [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
        ]
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: users_partial_update
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    delete:
      operationId: users_destroy
      description: |-
        Either delete a single or many model instances in bulk

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/users/{id}/:
    get:
      operationId: users_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: users_update
      description: |-
        Update one or more model instances.

        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records
        may be updated in a single call, provided their IDs.

        If ENABLE_PATCH_ALL is set, multiple records
        may be updated in a single PATCH call, even without knowing their IDs.

        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature
        and used with caution. This feature must be enabled at the viewset level
        and must also be requested explicitly by the client
        via the "patch-all" query parameter.

        This parameter can have one of the following values:

            true (or 1): records will be fetched and then updated in a transaction loop
              - The `Model.save` method will be called and model signals will run
              - This can be slow if there are too many signals or many records in the query
              - This is considered the more safe and default behavior
            query: records will be updated in a single query
              - The `QuerySet.update` method will be called and model signals will not run
              - This will be fast, but may break data constraints that are controlled by signals
              - This is considered unsafe but useful in certain situations

        The server's successful response to a patch-all request
        will NOT include any individual records. Instead, the response content will contain
        a "meta" object with an "updated" count of updated records.

        Examples:

        Update one dog:

            PATCH /dogs/1/
            {
                'fur': 'white'
            }

        Update many dogs by ID:

            PATCH /dogs/
            [
                {'id': 1, 'fur': 'white'},
                {'id': 2, 'fur': 'black'},
                {'id': 3, 'fur': 'yellow'}
            ]

        Update all dogs in a query:

            PATCH /dogs/?filter{fur.contains}=brown&patch-all=true
            {
                'fur': 'gold'
            }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: users_partial_update_2
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    delete:
      operationId: users_destroy_2
      description: |-
        Either delete a single or many model instances in bulk

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/users/{id}/groups/:
    get:
      operationId: users_groups_list
      description: API endpoint allowing to retrieve the Groups the user is member
        of.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupProfileList'
          description: ''
  /api/v2/users/{id}/resources/:
    get:
      operationId: users_resources_list
      description: API endpoint allowing to retrieve the Resources visible to the
        user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResourceBaseList'
          description: ''
components:
  schemas:
    AccessEnum:
      enum:
      - public
      - public-invite
      - private
      type: string
    BlankEnum:
      enum:
      - ''
    BriefAsynchronousHarvestingSession:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        id:
          type: integer
          readOnly: true
        started:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        ended:
          type: string
          format: date-time
          nullable: true
        total_records_to_process:
          type: integer
          readOnly: true
          description: Number of records being processed in this session
        records_done:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of records that have already been processed
      required:
      - id
      - started
      - total_records_to_process
      - updated
    BriefHarvester:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Harvester name
          maxLength: 255
        status:
          $ref: '#/components/schemas/Status175Enum'
        remote_url:
          type: string
          format: uri
          description: Base URL of the remote service that is to be harvested
          maxLength: 200
        remote_available:
          type: boolean
          readOnly: true
          description: Whether the remote service is known to be available or not
        scheduling_enabled:
          type: boolean
          description: Whether to periodically schedule this harvester to look for
            resources on the remote service
        harvesting_session_update_frequency:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: How often (in minutes) should new harvesting sessions be automatically
            scheduled?
        refresh_harvestable_resources_update_frequency:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: How often (in minutes) should new refresh sessions be automatically
            scheduled?
        check_availability_frequency:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: How often (in minutes) should the remote service be checked
            for availability?
        default_owner:
          type: integer
        links:
          type: string
          readOnly: true
      required:
      - id
      - links
      - name
      - remote_available
      - remote_url
    Dataset:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        workspace:
          type: string
          readOnly: true
        store:
          type: string
          readOnly: true
        subtype:
          type: string
          nullable: true
          maxLength: 128
        charset:
          type: string
          readOnly: true
        is_mosaic:
          type: boolean
          title: Is mosaic?
        has_time:
          type: boolean
          title: Has time?
        has_elevation:
          type: boolean
          title: Has elevation?
        time_regex:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TimeRegexEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        elevation_regex:
          type: string
          nullable: true
          maxLength: 128
        featureinfo_custom_template:
          type: string
        ows_url:
          type: string
          format: uri
          nullable: true
          description: The URL of the OWS service providing this layer, if any exists.
          maxLength: 200
        ptype:
          type: string
          title: P-Type
          maxLength: 255
        default_style:
          type: string
          readOnly: true
          nullable: true
        styles:
          type: string
          readOnly: true
        attribute_set:
          type: string
          readOnly: true
          nullable: true
        resource_type:
          type: string
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        state:
          type: string
          readOnly: true
        sourcetype:
          type: string
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
          readOnly: true
        keywords:
          type: string
          nullable: true
        tkeywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
        blob:
          type: object
          additionalProperties: {}
          writeOnly: true
        is_copyable:
          type: boolean
          readOnly: true
        download_url:
          type: string
          readOnly: true
      required:
      - alternate
      - attribute_set
      - charset
      - created
      - default_style
      - detail_url
      - download_url
      - featureinfo_custom_template
      - is_copyable
      - last_updated
      - metadata_author
      - name
      - owner
      - pk
      - poc
      - polymorphic_ctype_id
      - processed
      - raw_abstract
      - raw_constraints_other
      - raw_data_quality_statement
      - raw_purpose
      - raw_supplemental_information
      - regions
      - sourcetype
      - state
      - store
      - styles
      - thumbnail_url
      - title
      - uuid
      - workspace
    DatasetList:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        workspace:
          type: string
          readOnly: true
        store:
          type: string
          readOnly: true
        subtype:
          type: string
          nullable: true
          maxLength: 128
        charset:
          type: string
          readOnly: true
        is_mosaic:
          type: boolean
          title: Is mosaic?
        has_time:
          type: boolean
          title: Has time?
        has_elevation:
          type: boolean
          title: Has elevation?
        time_regex:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TimeRegexEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        elevation_regex:
          type: string
          nullable: true
          maxLength: 128
        featureinfo_custom_template:
          type: string
        ptype:
          type: string
          title: P-Type
          maxLength: 255
        default_style:
          type: string
          readOnly: true
          nullable: true
        styles:
          type: string
          readOnly: true
        resource_type:
          type: string
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        state:
          type: string
          readOnly: true
        sourcetype:
          type: string
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
          readOnly: true
        keywords:
          type: string
          nullable: true
        tkeywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
        blob:
          type: object
          additionalProperties: {}
          writeOnly: true
        is_copyable:
          type: boolean
          readOnly: true
        download_url:
          type: string
          readOnly: true
      required:
      - alternate
      - charset
      - created
      - default_style
      - detail_url
      - download_url
      - featureinfo_custom_template
      - is_copyable
      - last_updated
      - metadata_author
      - name
      - owner
      - pk
      - poc
      - polymorphic_ctype_id
      - processed
      - raw_abstract
      - raw_constraints_other
      - raw_data_quality_statement
      - raw_purpose
      - raw_supplemental_information
      - regions
      - sourcetype
      - state
      - store
      - styles
      - thumbnail_url
      - title
      - uuid
      - workspace
    Document:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        href:
          type: string
          readOnly: true
        subtype:
          type: string
          nullable: true
          maxLength: 128
        extension:
          type: string
          nullable: true
          maxLength: 128
        mime_type:
          type: string
          readOnly: true
        resource_type:
          type: string
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        state:
          type: string
          readOnly: true
        sourcetype:
          type: string
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
          readOnly: true
        keywords:
          type: string
          nullable: true
        tkeywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
        blob:
          type: object
          additionalProperties: {}
          writeOnly: true
        is_copyable:
          type: boolean
          readOnly: true
        download_url:
          type: string
          readOnly: true
      required:
      - alternate
      - created
      - detail_url
      - download_url
      - href
      - is_copyable
      - last_updated
      - metadata_author
      - mime_type
      - name
      - owner
      - pk
      - poc
      - polymorphic_ctype_id
      - processed
      - raw_abstract
      - raw_constraints_other
      - raw_data_quality_statement
      - raw_purpose
      - raw_supplemental_information
      - regions
      - sourcetype
      - state
      - thumbnail_url
      - title
      - uuid
    Favorite:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        resource:
          type: string
          readOnly: true
      required:
      - resource
    GeoApp:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        name:
          type: string
        resource_type:
          type: string
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        state:
          type: string
          readOnly: true
        sourcetype:
          type: string
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
          readOnly: true
        keywords:
          type: string
          nullable: true
        tkeywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
        blob:
          type: object
          additionalProperties: {}
          writeOnly: true
        is_copyable:
          type: boolean
          readOnly: true
        download_url:
          type: string
          readOnly: true
      required:
      - alternate
      - created
      - detail_url
      - download_url
      - is_copyable
      - last_updated
      - metadata_author
      - name
      - owner
      - pk
      - poc
      - polymorphic_ctype_id
      - processed
      - raw_abstract
      - raw_constraints_other
      - raw_data_quality_statement
      - raw_purpose
      - raw_supplemental_information
      - regions
      - sourcetype
      - state
      - thumbnail_url
      - title
      - uuid
    GroupProfile:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        title:
          type: string
          maxLength: 1000
        group:
          type: string
        slug:
          type: string
          maxLength: 1000
          pattern: ^[-a-zA-Z0-9_]+$
        logo:
          type: string
          format: uri
        description:
          type: string
        email:
          type: string
          format: email
          nullable: true
          description: Email used to contact one or all group members, such as a mailing
            list, shared email, or exchange group.
          maxLength: 254
        keywords:
          type: array
          items:
            type: string
          readOnly: true
        access:
          allOf:
          - $ref: '#/components/schemas/AccessEnum'
          description: 'Public: Any registered user can view and join a public group.<br>Public
            (invite-only):Any registered user can view the group.  Only invited users
            can join.<br>Private: Registered users cannot see any details about the
            group, including membership.  Only invited users can join.'
        categories:
          type: array
          items:
            type: string
      required:
      - categories
      - description
      - group
      - keywords
      - pk
      - slug
      - title
    Harvester:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Harvester name
          maxLength: 255
        status:
          $ref: '#/components/schemas/Status175Enum'
        remote_url:
          type: string
          format: uri
          description: Base URL of the remote service that is to be harvested
          maxLength: 200
        remote_available:
          type: boolean
          readOnly: true
          description: Whether the remote service is known to be available or not
        scheduling_enabled:
          type: boolean
          description: Whether to periodically schedule this harvester to look for
            resources on the remote service
        check_availability_frequency:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: How often (in minutes) should the remote service be checked
            for availability?
        harvesting_session_update_frequency:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: How often (in minutes) should new harvesting sessions be automatically
            scheduled?
        refresh_harvestable_resources_update_frequency:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: How often (in minutes) should new refresh sessions be automatically
            scheduled?
        default_owner:
          type: integer
        harvester_type:
          allOf:
          - $ref: '#/components/schemas/HarvesterTypeEnum'
          description: Harvester class used to perform harvesting sessions. New harvester
            types can be added by an admin by changing the main GeoNode `settings.py`
            file
        harvester_type_specific_configuration:
          type: object
          additionalProperties: {}
          description: Configuration specific to each harvester type. Please consult
            GeoNode documentation on harvesting for more info. This field is mandatory,
            so at the very least an empty object (i.e. {}) must be supplied.
        last_checked_availability:
          type: string
          format: date-time
          nullable: true
          description: Last time the remote server was checked for availability
        last_checked_harvestable_resources:
          type: string
          format: date-time
          nullable: true
          description: Last time the remote server was checked for harvestable resources
        last_check_harvestable_resources_message:
          type: string
        harvest_new_resources_by_default:
          type: boolean
          description: Should new resources be harvested automatically without explicit
            selection?
        delete_orphan_resources_automatically:
          type: boolean
          description: Orphan resources are those that have previously been created
            by means of a harvesting operation but that GeoNode can no longer find
            on the remote service being harvested. Should these resources be deleted
            from GeoNode automatically? This also applies to when a harvester configuration
            is deleted, in which case all of the resources that originated from that
            harvester are now considered to be orphan.
        last_updated:
          type: string
          format: date-time
          readOnly: true
          description: Date of last update to the harvester configuration.
        links:
          type: string
          readOnly: true
      required:
      - id
      - last_updated
      - links
      - name
      - remote_available
      - remote_url
    HarvesterTypeEnum:
      enum:
      - geonode.harvesting.harvesters.geonodeharvester.GeonodeUnifiedHarvesterWorker
      - geonode.harvesting.harvesters.wms.OgcWmsHarvester
      - geonode.harvesting.harvesters.arcgis.ArcgisHarvesterWorker
      type: string
    HierarchicalKeyword:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        path:
          type: string
          maxLength: 255
        depth:
          type: integer
          maximum: 2147483647
          minimum: 0
        numchild:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - depth
      - id
      - name
      - path
      - slug
    ManagementCommandJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        command:
          type: string
          maxLength: 250
        app_name:
          type: string
          maxLength: 250
        user:
          type: integer
        status:
          $ref: '#/components/schemas/StatusC7bEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        start_time:
          type: string
          format: date-time
          nullable: true
        end_time:
          type: string
          format: date-time
          nullable: true
        args:
          type: object
          additionalProperties: {}
          title: Positional Arguments
          description: 'JSON encoded positional arguments (Example: ["arg1", "arg2"])'
        kwargs:
          type: object
          additionalProperties: {}
          title: Keyword Arguments
          description: 'JSON encoded keyword arguments (Example: {"argument": "value"})'
        celery_result_id:
          type: string
          format: uuid
          nullable: true
        output_message:
          type: string
          nullable: true
      required:
      - app_name
      - command
      - created_at
      - id
      - user
    ManagementCommandJobCreate:
      type: object
      properties:
        command:
          type: string
          maxLength: 250
        args:
          type: object
          additionalProperties: {}
          default: []
        kwargs:
          type: object
          additionalProperties: {}
          default: {}
        autostart:
          type: boolean
          default: true
      required:
      - command
    ManagementCommandJobList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        command:
          type: string
          maxLength: 250
        app_name:
          type: string
          maxLength: 250
        user:
          type: integer
        status:
          $ref: '#/components/schemas/StatusC7bEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - app_name
      - command
      - created_at
      - id
      - user
    Map:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        urlsuffix:
          type: string
          title: Site URL
          maxLength: 255
        featuredurl:
          type: string
          title: Featured Map URL
          maxLength: 255
        maplayers:
          type: string
          nullable: true
        resource_type:
          type: string
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        state:
          type: string
          readOnly: true
        sourcetype:
          type: string
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
          readOnly: true
        keywords:
          type: string
          nullable: true
        tkeywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
        blob:
          type: object
          additionalProperties: {}
          writeOnly: true
        is_copyable:
          type: boolean
          readOnly: true
        download_url:
          type: string
          readOnly: true
      required:
      - alternate
      - created
      - detail_url
      - download_url
      - is_copyable
      - last_updated
      - metadata_author
      - owner
      - pk
      - poc
      - polymorphic_ctype_id
      - processed
      - raw_abstract
      - raw_constraints_other
      - raw_data_quality_statement
      - raw_purpose
      - raw_supplemental_information
      - regions
      - sourcetype
      - state
      - thumbnail_url
      - title
      - uuid
    MapLayer:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        extra_params:
          type: object
          additionalProperties: {}
          nullable: true
        current_style:
          type: string
          nullable: true
        dataset:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      required:
      - pk
    NullEnum:
      enum:
      - null
    Owner:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        avatar:
          type: string
          readOnly: true
        perms:
          type: string
          readOnly: true
      required:
      - avatar
      - perms
      - pk
      - username
    PaginatedBriefAsynchronousHarvestingSessionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/BriefAsynchronousHarvestingSession'
    PaginatedBriefHarvesterList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/BriefHarvester'
    PaginatedDatasetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Dataset'
    PaginatedDatasetListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/DatasetList'
    PaginatedDocumentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Document'
    PaginatedFavoriteList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Favorite'
    PaginatedGeoAppList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/GeoApp'
    PaginatedGroupProfileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/GroupProfile'
    PaginatedHierarchicalKeywordList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/HierarchicalKeyword'
    PaginatedManagementCommandJobListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/ManagementCommandJobList'
    PaginatedMapLayerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/MapLayer'
    PaginatedMapList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Map'
    PaginatedOwnerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Owner'
    PaginatedRegionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Region'
    PaginatedResourceBaseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResourceBase'
    PaginatedSimpleMapLayerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/SimpleMapLayer'
    PaginatedSimpleMapList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/SimpleMap'
    PaginatedThesaurusKeywordList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/ThesaurusKeyword'
    PaginatedTopicCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/TopicCategory'
    PaginatedUploadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Upload'
    PaginatedUploadParallelismLimitList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/UploadParallelismLimit'
    PaginatedUploadSizeLimitList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/UploadSizeLimit'
    PaginatedUserProfileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserProfile'
    PatchedDataset:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        workspace:
          type: string
          readOnly: true
        store:
          type: string
          readOnly: true
        subtype:
          type: string
          nullable: true
          maxLength: 128
        charset:
          type: string
          readOnly: true
        is_mosaic:
          type: boolean
          title: Is mosaic?
        has_time:
          type: boolean
          title: Has time?
        has_elevation:
          type: boolean
          title: Has elevation?
        time_regex:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TimeRegexEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        elevation_regex:
          type: string
          nullable: true
          maxLength: 128
        featureinfo_custom_template:
          type: string
        ows_url:
          type: string
          format: uri
          nullable: true
          description: The URL of the OWS service providing this layer, if any exists.
          maxLength: 200
        ptype:
          type: string
          title: P-Type
          maxLength: 255
        default_style:
          type: string
          readOnly: true
          nullable: true
        styles:
          type: string
          readOnly: true
        attribute_set:
          type: string
          readOnly: true
          nullable: true
        resource_type:
          type: string
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        state:
          type: string
          readOnly: true
        sourcetype:
          type: string
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
          readOnly: true
        keywords:
          type: string
          nullable: true
        tkeywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
        blob:
          type: object
          additionalProperties: {}
          writeOnly: true
        is_copyable:
          type: boolean
          readOnly: true
        download_url:
          type: string
          readOnly: true
    PatchedDocument:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        href:
          type: string
          readOnly: true
        subtype:
          type: string
          nullable: true
          maxLength: 128
        extension:
          type: string
          nullable: true
          maxLength: 128
        mime_type:
          type: string
          readOnly: true
        resource_type:
          type: string
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        state:
          type: string
          readOnly: true
        sourcetype:
          type: string
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
          readOnly: true
        keywords:
          type: string
          nullable: true
        tkeywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
        blob:
          type: object
          additionalProperties: {}
          writeOnly: true
        is_copyable:
          type: boolean
          readOnly: true
        download_url:
          type: string
          readOnly: true
    PatchedGeoApp:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        data:
          type: string
        name:
          type: string
        resource_type:
          type: string
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        state:
          type: string
          readOnly: true
        sourcetype:
          type: string
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
          readOnly: true
        keywords:
          type: string
          nullable: true
        tkeywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
        blob:
          type: object
          additionalProperties: {}
          writeOnly: true
        is_copyable:
          type: boolean
          readOnly: true
        download_url:
          type: string
          readOnly: true
    PatchedGroupProfile:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        title:
          type: string
          maxLength: 1000
        group:
          type: string
        slug:
          type: string
          maxLength: 1000
          pattern: ^[-a-zA-Z0-9_]+$
        logo:
          type: string
          format: uri
        description:
          type: string
        email:
          type: string
          format: email
          nullable: true
          description: Email used to contact one or all group members, such as a mailing
            list, shared email, or exchange group.
          maxLength: 254
        keywords:
          type: array
          items:
            type: string
          readOnly: true
        access:
          allOf:
          - $ref: '#/components/schemas/AccessEnum'
          description: 'Public: Any registered user can view and join a public group.<br>Public
            (invite-only):Any registered user can view the group.  Only invited users
            can join.<br>Private: Registered users cannot see any details about the
            group, including membership.  Only invited users can join.'
        categories:
          type: array
          items:
            type: string
    PatchedHarvester:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Harvester name
          maxLength: 255
        status:
          $ref: '#/components/schemas/Status175Enum'
        remote_url:
          type: string
          format: uri
          description: Base URL of the remote service that is to be harvested
          maxLength: 200
        remote_available:
          type: boolean
          readOnly: true
          description: Whether the remote service is known to be available or not
        scheduling_enabled:
          type: boolean
          description: Whether to periodically schedule this harvester to look for
            resources on the remote service
        check_availability_frequency:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: How often (in minutes) should the remote service be checked
            for availability?
        harvesting_session_update_frequency:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: How often (in minutes) should new harvesting sessions be automatically
            scheduled?
        refresh_harvestable_resources_update_frequency:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: How often (in minutes) should new refresh sessions be automatically
            scheduled?
        default_owner:
          type: integer
        harvester_type:
          allOf:
          - $ref: '#/components/schemas/HarvesterTypeEnum'
          description: Harvester class used to perform harvesting sessions. New harvester
            types can be added by an admin by changing the main GeoNode `settings.py`
            file
        harvester_type_specific_configuration:
          type: object
          additionalProperties: {}
          description: Configuration specific to each harvester type. Please consult
            GeoNode documentation on harvesting for more info. This field is mandatory,
            so at the very least an empty object (i.e. {}) must be supplied.
        last_checked_availability:
          type: string
          format: date-time
          nullable: true
          description: Last time the remote server was checked for availability
        last_checked_harvestable_resources:
          type: string
          format: date-time
          nullable: true
          description: Last time the remote server was checked for harvestable resources
        last_check_harvestable_resources_message:
          type: string
        harvest_new_resources_by_default:
          type: boolean
          description: Should new resources be harvested automatically without explicit
            selection?
        delete_orphan_resources_automatically:
          type: boolean
          description: Orphan resources are those that have previously been created
            by means of a harvesting operation but that GeoNode can no longer find
            on the remote service being harvested. Should these resources be deleted
            from GeoNode automatically? This also applies to when a harvester configuration
            is deleted, in which case all of the resources that originated from that
            harvester are now considered to be orphan.
        last_updated:
          type: string
          format: date-time
          readOnly: true
          description: Date of last update to the harvester configuration.
        links:
          type: string
          readOnly: true
    PatchedManagementCommandJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        command:
          type: string
          maxLength: 250
        app_name:
          type: string
          maxLength: 250
        user:
          type: integer
        status:
          $ref: '#/components/schemas/StatusC7bEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        start_time:
          type: string
          format: date-time
          nullable: true
        end_time:
          type: string
          format: date-time
          nullable: true
        args:
          type: object
          additionalProperties: {}
          title: Positional Arguments
          description: 'JSON encoded positional arguments (Example: ["arg1", "arg2"])'
        kwargs:
          type: object
          additionalProperties: {}
          title: Keyword Arguments
          description: 'JSON encoded keyword arguments (Example: {"argument": "value"})'
        celery_result_id:
          type: string
          format: uuid
          nullable: true
        output_message:
          type: string
          nullable: true
    PatchedMap:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        urlsuffix:
          type: string
          title: Site URL
          maxLength: 255
        featuredurl:
          type: string
          title: Featured Map URL
          maxLength: 255
        data:
          type: string
        maplayers:
          type: string
          nullable: true
        resource_type:
          type: string
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        state:
          type: string
          readOnly: true
        sourcetype:
          type: string
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
          readOnly: true
        keywords:
          type: string
          nullable: true
        tkeywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
        blob:
          type: object
          additionalProperties: {}
          writeOnly: true
        is_copyable:
          type: boolean
          readOnly: true
        download_url:
          type: string
          readOnly: true
    PatchedPermSpecSerialiazer:
      type: object
      description: DREST-compatible baseclass for non-model serializers.
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/PermSpecFieldSerialiazer'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/PermSpecFieldSerialiazer'
    PatchedResourceBase:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        resource_type:
          type: string
        polymorphic_ctype_id:
          type: string
          readOnly: true
        perms:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        keywords:
          type: string
          nullable: true
        tkeywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        alternate:
          type: string
          readOnly: true
        doi:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        date:
          type: string
          format: date-time
        date_type:
          type: string
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        restriction_code_type:
          type: string
          nullable: true
        constraints_other:
          type: string
        license:
          type: string
          nullable: true
        language:
          type: string
        spatial_representation_type:
          type: string
          nullable: true
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        embed_url:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        state:
          type: string
          readOnly: true
        data:
          type: string
        subtype:
          type: string
          nullable: true
          maxLength: 128
        sourcetype:
          type: string
          readOnly: true
        is_copyable:
          type: boolean
          readOnly: true
        blob:
          type: object
          additionalProperties: {}
          writeOnly: true
        metadata:
          type: string
          nullable: true
        executions:
          type: string
          readOnly: true
        thumbnail_url:
          type: string
          readOnly: true
        download_url:
          type: string
          readOnly: true
    PatchedUserProfile:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        avatar:
          type: string
          readOnly: true
        perms:
          type: string
          readOnly: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
    PermSpecFieldSerialiazer:
      type: object
      description: DREST-compatible baseclass for non-model serializers.
      properties:
        perm_spec:
          type: array
          items: {}
      required:
      - perm_spec
    PermSpecSerialiazer:
      type: object
      description: DREST-compatible baseclass for non-model serializers.
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/PermSpecFieldSerialiazer'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/PermSpecFieldSerialiazer'
      required:
      - groups
      - users
    Region:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          maxLength: 50
        name:
          type: string
          maxLength: 255
        name_en:
          type: string
          nullable: true
          title: Name [en]
          maxLength: 255
        bbox_x0:
          type: string
          format: decimal
          pattern: ^\d{0,15}(?:\.\d{0,15})?$
          nullable: true
        bbox_x1:
          type: string
          format: decimal
          pattern: ^\d{0,15}(?:\.\d{0,15})?$
          nullable: true
        bbox_y0:
          type: string
          format: decimal
          pattern: ^\d{0,15}(?:\.\d{0,15})?$
          nullable: true
        bbox_y1:
          type: string
          format: decimal
          pattern: ^\d{0,15}(?:\.\d{0,15})?$
          nullable: true
        srid:
          type: string
          maxLength: 30
        lft:
          type: integer
          readOnly: true
        rght:
          type: integer
          readOnly: true
        tree_id:
          type: integer
          readOnly: true
        level:
          type: integer
          readOnly: true
        parent:
          type: integer
          nullable: true
      required:
      - code
      - id
      - level
      - lft
      - name
      - rght
      - tree_id
    ResourceBase:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        resource_type:
          type: string
        polymorphic_ctype_id:
          type: string
          readOnly: true
        perms:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        keywords:
          type: string
          nullable: true
        tkeywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        alternate:
          type: string
          readOnly: true
        doi:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        date:
          type: string
          format: date-time
        date_type:
          type: string
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        restriction_code_type:
          type: string
          nullable: true
        constraints_other:
          type: string
        license:
          type: string
          nullable: true
        language:
          type: string
        spatial_representation_type:
          type: string
          nullable: true
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        embed_url:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        state:
          type: string
          readOnly: true
        subtype:
          type: string
          nullable: true
          maxLength: 128
        sourcetype:
          type: string
          readOnly: true
        is_copyable:
          type: boolean
          readOnly: true
        blob:
          type: object
          additionalProperties: {}
          writeOnly: true
        thumbnail_url:
          type: string
          readOnly: true
        download_url:
          type: string
          readOnly: true
      required:
      - alternate
      - created
      - detail_url
      - download_url
      - is_copyable
      - last_updated
      - metadata_author
      - owner
      - perms
      - pk
      - poc
      - polymorphic_ctype_id
      - processed
      - raw_abstract
      - raw_constraints_other
      - raw_data_quality_statement
      - raw_purpose
      - raw_supplemental_information
      - regions
      - sourcetype
      - state
      - thumbnail_url
      - title
      - uuid
    ResourceBaseTypes:
      type: object
      description: DREST-compatible baseclass for non-model serializers.
      properties:
        name:
          type: string
        count:
          type: integer
      required:
      - count
      - name
    SimpleMap:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        title:
          type: string
          description: name by which the cited resource is known
          maxLength: 255
        detail_url:
          type: string
          readOnly: true
      required:
      - detail_url
      - pk
      - title
    SimpleMapLayer:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          nullable: true
        extra_params:
          type: object
          additionalProperties: {}
          nullable: true
        current_style:
          type: string
          nullable: true
      required:
      - pk
    Status175Enum:
      enum:
      - ready
      - updating-harvestable-resources
      - aborting-update-harvestable-resources
      - harvesting-resources
      - aborting-harvesting-resources
      - checking-availability
      type: string
    StatusC7bEnum:
      enum:
      - CREATED
      - QUEUED
      - STARTED
      - FINISHED
      type: string
    ThesaurusKeyword:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        id:
          type: integer
          readOnly: true
        about:
          type: string
          nullable: true
          maxLength: 255
        alt_label:
          type: string
          nullable: true
          default: ''
          maxLength: 255
        thesaurus:
          type: integer
      required:
      - id
      - thesaurus
    TimeRegexEnum:
      enum:
      - '[0-9]{8}'
      - '[0-9]{8}T[0-9]{6}'
      - '[0-9]{8}T[0-9]{6}Z'
      type: string
    TopicCategory:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        id:
          type: integer
          readOnly: true
        identifier:
          type: string
          maxLength: 255
        description:
          type: string
        description_en:
          type: string
          nullable: true
          title: Description [en]
        gn_description:
          type: string
          nullable: true
          title: GeoNode description
        gn_description_en:
          type: string
          nullable: true
          title: GeoNode description [en]
        is_choice:
          type: boolean
        fa_class:
          type: string
          maxLength: 64
      required:
      - id
    Upload:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 64
        date:
          type: string
          format: date-time
        create_date:
          type: string
          format: date-time
        user:
          type: integer
          nullable: true
        state:
          type: string
          maxLength: 16
        progress:
          type: string
          readOnly: true
        complete:
          type: boolean
        import_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        resume_url:
          type: string
          readOnly: true
        delete_url:
          type: string
          readOnly: true
        import_url:
          type: string
          readOnly: true
        detail_url:
          type: string
          readOnly: true
        uploadfile_set:
          type: string
          readOnly: true
      required:
      - delete_url
      - detail_url
      - id
      - import_url
      - progress
      - resume_url
      - state
      - uploadfile_set
    UploadParallelismLimit:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
          maxLength: 255
        max_number:
          type: integer
          maximum: 32767
          minimum: 0
          description: The maximum number of parallel uploads (0 to 32767).
      required:
      - slug
    UploadSizeLimit:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        slug:
          type: string
          maxLength: 255
          minLength: 3
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
          maxLength: 255
        max_size:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: The maximum file size allowed for upload (bytes).
        max_size_label:
          type: string
          readOnly: true
      required:
      - max_size_label
      - slug
    UserProfile:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        avatar:
          type: string
          readOnly: true
        perms:
          type: string
          readOnly: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
      required:
      - avatar
      - perms
      - pk
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    oauth2:
      type: oauth2
      flows: {}
