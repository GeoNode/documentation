# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-2020, Open Source Geospatial Foundation, CC-SA
# This file is distributed under the same license as the GeoNode package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GeoNode 3.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-10 11:11+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../devel/workshops/index.rst:2 7c5bc2a5f67844bfa6c0f150e6b6dbfb
msgid "Workshops"
msgstr ""

#: ../../devel/workshops/index.rst:4 95d581509f9846feae857e4adaa64c00
msgid ""
"The workshops documentation demonstrates few examples on how to utilize "
"GeoNode-Project in order to extend/customize GeoNode's functionalities "
"according to your business. The covered topics include the following:"
msgstr ""

#: ../../devel/workshops/index.rst:6 ../../devel/workshops/index.rst:22
#: a0d40b8dc99a46d48d7dd6794a8ecf41 e5baec6f48db4bfb91dc67a760dc87d5
msgid "1- Customize your GeoNode with the geonode-project"
msgstr ""

#: ../../devel/workshops/index.rst:8 ../../devel/workshops/index.rst:88
#: 634931c85e2049a199715bc838adef51 c1581be2e59d40f0a63317b0d8af4f48
msgid "2- Customize the look and feel"
msgstr ""

#: ../../devel/workshops/index.rst:10 f2a2a706b14b4643876293c27d1bb17e
msgid "3- Create your ResourceBase Metadata"
msgstr ""

#: ../../devel/workshops/index.rst:12 546f081a44c743e58bd75f782e711d29
msgid "4- Create your own django app"
msgstr ""

#: ../../devel/workshops/index.rst:14 1cbc78f4cc5d4b28aac9e3b6790fb2cc
msgid "5- Add a custom model"
msgstr ""

#: ../../devel/workshops/index.rst:16 efcc693fcbc34d77a90dac321c421d45
msgid "6- Permissions and APIs"
msgstr ""

#: ../../devel/workshops/index.rst:18 734773169c514187abe6e43ac36879a2
msgid "7- Deploy your GeoNode"
msgstr ""

#: ../../devel/workshops/index.rst:24 adb2be9ba7c04d2b98a4aca6e7aab6c5
msgid ""
"In this example, GeoNode-Project is cloned to create a template instance "
"in which the rest of the examples will be building on top of it."
msgstr ""

#: ../../devel/workshops/index.rst:26 b77c18ec05e74724824dabb69fa85fbd
msgid ""
"1- Assuming you already installed GeoNode-Core, firstly we need to create"
" a GeoNode-Project template and this can be achieved from the following "
"command:"
msgstr ""

#: ../../devel/workshops/index.rst:32 245c76ee6147481483fa104d9f213b2f
msgid ""
"Here, django-admin is used with startproject option to create my_geonode "
"project copying the template which is passed as GeoNode-project Github "
"repo. It also includes \"py,rst,json,yml,ini,env,sample\" extensions"
msgstr ""

#: ../../devel/workshops/index.rst:34 928f661c78ff4a5c9fe7bf2aac43f914
msgid ""
"2- Once the cloning finished, the next step is to install the GeoNode-"
"Project we just downloaded as follows:"
msgstr ""

#: ../../devel/workshops/index.rst:41 981280a5ef4446a5a63559802c1121d4
msgid "3- Install geoserver using paver as follows"
msgstr ""

#: ../../devel/workshops/index.rst:48 7f4ae78d7dfa4a4aabe6b85e9856bd6e
msgid ""
"4- Note the GeoNode database connection parameters mentioned in the "
".env.sample.py file. Rename it to .env then use psql to create the "
"required user and grant the required privileges as follows:"
msgstr ""

#: ../../devel/workshops/index.rst:61 76bd103f906244ada84d81e4f7b12d38
msgid ""
"Don't forget to exit from postgres user before executing the following "
"commands"
msgstr ""

#: ../../devel/workshops/index.rst:63 ba342316b59842fb9483624af788a44a
msgid "5- Run GeoNode using paver"
msgstr ""

#: ../../devel/workshops/index.rst:70 6005f6d46fe5472393cc235969717528
msgid ""
"You may find this warning message: You have 132 unapplied migration(s). "
"Your project may not work properly until you apply the migrations for "
"app(s): account, actstream, admin, agon_ratings, announcements, auth, "
"avatar, base, contenttypes, dialogos, documents, favorite, "
"geonode_client, geonode_themes, groups, guardian, invitations, layers, "
"maps, mapstore2_adapter, monitoring, oauth2_provider, people, "
"pinax_notifications, services, sessions, sites, socialaccount, taggit, "
"tastypie, upload, user_messages. Which means you have some sql statements"
" not executed yet and you need to run the \"migrate\" to sync your "
"database first then \"paver start\" again as follows:"
msgstr ""

#: ../../devel/workshops/index.rst:77 9cddf80a1f3948888e1085778c6818a7
msgid ""
"If encountered this message: ``(Invalid HTTP_HOST header: '0.0.0.0:8000'."
" You may need to add u'0.0.0.0' to ALLOWED_HOSTS)`` It can be fixed in "
"the settings.py file. You will need to add: ``ALLOWED_HOSTS = "
"['0.0.0.0']`` in settings.py"
msgstr ""

#: ../../devel/workshops/index.rst:79 b1a83df28efe49428dad659ea61f3cdf
msgid ""
"6- Once the previous step is done, you can visit 0.0.0.0:8000 to view the"
" GUI of GeoNode. However, we still don't have an account in order to "
"login from the GUI. This can be done using \"paver sync\". The command "
"will create sync with latest fixtures and also creates a superuser "
"\"admin\" with default password \"admin\""
msgstr ""

#: ../../devel/workshops/index.rst:82 e99d103cafb24abdb67e283a1c55b752
msgid ""
"7- Use the created account to login from the GUI through localhost:8000 "
"or 0.0.0.0:8000"
msgstr ""

#: ../../devel/workshops/index.rst:90 42c5d9fb55424ec48b05b8a3667f7adb
msgid ""
"In this section we will change the look and feel of GeoNode, in "
"particular we will do some customization to help understanding how the "
"template inheritance works and how to add new stuff to your GeoNode. The "
"changes will include the home page, the top menu, the footer and a "
"generic GeoNode page."
msgstr ""

#: ../../devel/workshops/index.rst:92 2dc5aae4a9fa4b828a0b358672d7f5da
msgid "**Homepage:**"
msgstr ""

#: ../../devel/workshops/index.rst:94 08cdfd3d462b4326a6e061075b63dff9
msgid ""
"The geonode-project provides some predefined templates to change the home"
" page and the general site content."
msgstr ""

#: ../../devel/workshops/index.rst:96 88b449183fe94021be7302dd0d64b9b0
msgid ""
"In the \"my_geonode/src/my_geonode/templates/geonode-mapstore-"
"client/snippets\" directory we can files with similar names as the "
"geonode-mapstore-client. This way we can override the different parts of "
"the site eg the header, menu, body content and the footer."
msgstr ""

#: ../../devel/workshops/index.rst:98 f81d92401c824a45a66443fa53e5b217
msgid "Create a file name hero.html and add the following."
msgstr ""

#: ../../devel/workshops/index.rst:114 11b29e1d97824ebfb65c2b5cea16dd23
msgid "**The theme:**"
msgstr ""

#: ../../devel/workshops/index.rst:116 7f28d743c1fa4914be2beb0b951c025b
msgid ""
"To change the theme of our geonode-project we can act on the "
"site_base.css file available in the \"my_geonode/my_geonode/static/css\" "
"folder."
msgstr ""

#: ../../devel/workshops/index.rst:118 88d959e414c349fe8f0a9932304f3999
msgid ""
"The file is empty so we can inspect elements of the home page with the "
"browser's developer tools and define css rules in there."
msgstr ""

#: ../../devel/workshops/index.rst:120 bb98a68126ef4a41a27ae517509e393a
msgid ""
"For example, if we want to change the background of the jumbotron, in "
"this file we can add"
msgstr ""

#: ../../devel/workshops/index.rst:126 a4529f52697e4334bc2bca7b5ecd051d
msgid "Then once we refreshed the browser, we should see the change as follows:"
msgstr ""

#: ../../devel/workshops/index.rst:130 abf2fb8bace54ac8975f1d4cb6f22fe7
msgid "**The top menu:**"
msgstr ""

#: ../../devel/workshops/index.rst:132 c89f37f47ff44503ae28f20362865d1c
msgid ""
"Now we can make some changes that will apply to the whole site. We can "
"add an item to both the left and right side of the top menu bar."
msgstr ""

#: ../../devel/workshops/index.rst:134 523a7e3ba08f4309b6b057f49d6a91ca
msgid ""
"This can be done by creating a get_menu_json.py under templatetags folder"
" to override GeoNodes default menu."
msgstr ""

#: ../../devel/workshops/index.rst:177 ab71dcc8788545f1a1fcf00d5e6efdae
msgid ""
"On browser refresh you will see a new entry in the nav bar which is "
"persistent to the whole site."
msgstr ""

#: ../../devel/workshops/index.rst:181 0a94c700e484408d900d6b90ae0385eb
msgid "**Modify functionality**"
msgstr ""

#: ../../devel/workshops/index.rst:184 ccc0c51c4067449292a9dc043fab219c
msgid ""
"In this section, we will patch the ResourceBase of GeoNode and update the"
" Templates in order to add one more field to the Metadata Schema."
msgstr ""

#: ../../devel/workshops/index.rst:186 69bf52f9762e4ef48457a602ae83fcc2
msgid ""
"We will add a DOI field to the ResourceBase model and modify the "
"Templates in order to show the new field both into the Metadata Wizard "
"page."
msgstr ""

#: ../../devel/workshops/index.rst:188 ../../devel/workshops/index.rst:321
#: ../../devel/workshops/index.rst:376 d869a75d0ba040c8bd48806f6efd9264
#: f00e9b3db25c43808e9479b0c282809d f17aed6f2fa44e7dbc9001c40abff885
msgid ""
"Make sure to be inside \"my_geonode\" directory to execute the following "
"commands"
msgstr ""

#: ../../devel/workshops/index.rst:191 6b8bf61017e6471689572ce627231fe9
msgid ""
"Customizing metadata can be achieved from the model which is defined in "
"the core at \"geonode/geonode/base/models.py\" as follows:"
msgstr ""

#: ../../devel/workshops/index.rst:246 d3496156307348a78bfd147889b9bb09
msgid ""
"To add fields directly to the ResourceBase Class without actually "
"modifying it, this can be done from \"my_geonode/src/my_geonode/apps.py\""
" file"
msgstr ""

#: ../../devel/workshops/index.rst:248 9630bb522c6e4621847c7ebbc95cc854
msgid ""
"The \"ready\" method is invoked at initialization time and can be "
"currently used to tweak your app in several ways"
msgstr ""

#: ../../devel/workshops/index.rst:263 bb0438ac19ef4a3f9b23b7c68fa15a78
msgid ""
"Now we will add the \"patch_resource_base\" method to the AppConfig and "
"execute it from the ready method as follows:"
msgstr ""

#: ../../devel/workshops/index.rst:297 18bd308cd90c4e2fa1e92f7f70e56d94
msgid ""
"you will need to perform migrations as follows: - Add field doi to "
"resourcebase"
msgstr ""

#: ../../devel/workshops/index.rst:300 a0ba4de84dbb4a9ebb50a48b8d3f44bc
msgid "Once you run ``python manage.py migrate``:"
msgstr ""

#: ../../devel/workshops/index.rst:310 0dfc91bd3117413593e4e817052952a4
msgid ""
"Till now, we have patched the DB. however, it is not yet sufficient as we"
" still need to display the added field."
msgstr ""

#: ../../devel/workshops/index.rst:312 c930b9b5ffc44769a75d858d7561c41c
msgid ""
"Let's extend the default templates so that we can show the newly added "
"field"
msgstr ""

#: ../../devel/workshops/index.rst:315 ab9bca4f27a54bbf82a568952fc9c465
msgid "3- Create your own django app"
msgstr ""

#: ../../devel/workshops/index.rst:317 48d47264b8cd4306b95f0550f1d1616b
msgid ""
"In this section, we will demonstrate how to create and setup the skeleton"
" of a custom app using the django facilities. The app will add a "
"geocollections functionality to our GeoNode."
msgstr ""

#: ../../devel/workshops/index.rst:319 5f5ac565b4eb4e1a91afb731dc446285
msgid ""
"The Geocollections app allows to present in a single page, resources and "
"users grouped by a GeoNode Group. We can assign arbitrary resources to a "
"Geocollection, a Group and a name that will be also used to build a "
"dedicated URL."
msgstr ""

#: ../../devel/workshops/index.rst:323 95907b76d2a54f4a987b09a83e31ecf4
msgid "Create the django app"
msgstr ""

#: ../../devel/workshops/index.rst:325 e08def95f1fe4906bf62358ebefaacb7
msgid ""
"Django gives us an handy command to create apps. We already used "
"startproject to create our geonode-project, now we can use startapp to "
"create the app."
msgstr ""

#: ../../devel/workshops/index.rst:331 6e12f8c2c7e44933a1e11a4f92433095
msgid ""
"This will create a folder named geocollections that contains empty models"
" and views."
msgstr ""

#: ../../devel/workshops/index.rst:333 a8ac44777b0f42ed9b244ebf10d4165e
msgid ""
"We need to add the new app to the INSTALLED_APPS of our project. inside "
"\"my_geonode/src/my_geonode/settings.py\":"
msgstr ""

#: ../../devel/workshops/index.rst:340 c839614a01e44eb083dff1eac9d2bfa0
msgid "**Add a custom model**"
msgstr ""

#: ../../devel/workshops/index.rst:342 348bd1659bdb42168a70b0dd74e5cba9
msgid ""
"In this section, we will add a custom model and the related logic as "
"follows:"
msgstr ""

#: ../../devel/workshops/index.rst:344 f014e1eb8586487d83e13016aa97c7fb
msgid "Add a new model"
msgstr ""

#: ../../devel/workshops/index.rst:345 c628609f9b7c4102bda2665466b972aa
msgid "Add urls and views"
msgstr ""

#: ../../devel/workshops/index.rst:346 545fffbb94b74c5ca700607f364722ef
msgid "Add admin panel"
msgstr ""

#: ../../devel/workshops/index.rst:347 9b923070b8cb49b1a6366f0401b6849d
msgid "Add the template"
msgstr ""

#: ../../devel/workshops/index.rst:374 c84ef7f0fadd477cbc0d4b7389d29ae8
msgid ""
"At this point we need to ask django to create the database table. Django "
"since version 1.8 has embedded migrations mechanism and we need to use "
"them in order to change the state of the db."
msgstr ""

#: ../../devel/workshops/index.rst:386 8b8ae73f6e9a420ab49c1dee2c12f60f
msgid ""
"Next we will use django generic view to show the collections detail. Add "
"the following code in the views.py file:"
msgstr ""

#: ../../devel/workshops/index.rst:403 dd9bb8a9b9d447cab12590e0b7363f93
msgid "Add url configuration"
msgstr ""

#: ../../devel/workshops/index.rst:405 e9b5cdcf1ea34cc2809b3f7467fe7cd4
msgid ""
"In order to access the created view we also need url mapping. We can "
"create a urls.py file containing a url mapping to our generic view:"
msgstr ""

#: ../../devel/workshops/index.rst:424 fe6e35e696be42979e943a94b2ce8e25
msgid ""
"We also need to register the app urls in the project urls. So let's "
"modify the \"my_geonode\" urls.py file adding the following:"
msgstr ""

#: ../../devel/workshops/index.rst:440 24bed9ddddd64e2e88cf6d8f8bfd08b4
msgid "**Enable the admin panel**"
msgstr ""

#: ../../devel/workshops/index.rst:442 2ea60fee3c794e7ab9876d3fbf3454d6
msgid ""
"We need a user interface where we can create geocollections. Django makes"
" this very easy, we just need the admin.py file as follows:"
msgstr ""

#: ../../devel/workshops/index.rst:461 14046a08c91345e38e5d18bf82243459
msgid ""
"Now we can visit the admin page and create a geocollection from there as "
"follows:"
msgstr ""

#: ../../devel/workshops/index.rst:465 beffbc3f43da4c9a91eb1ca942f7c7e5
msgid "**Adding the template**"
msgstr ""

#: ../../devel/workshops/index.rst:467 389115b20cc747138a6625a2b02e3810
msgid ""
"Now we need the template where the geocollection detail will be rendered."
" Let's create a geocollections directory inside the "
"\"my_geonode/templates\" directory with a file named "
"geocollection_detail.html:"
msgstr ""

#: ../../devel/workshops/index.rst:490 f1982c474ea14f689d870689efa4e76c
msgid ""
"To check the results, create a group in the geonode ui interface and load"
" one or more layers/documents"
msgstr ""

#: ../../devel/workshops/index.rst:492 f91dc95a397d493c9c1ef06f5aa86ddf
msgid "login into the admin panel -> geocollections and create a geocollections"
msgstr ""

#: ../../devel/workshops/index.rst:494 9e4664163eac422895cbc94f9a35139b
msgid ""
"Visit http://localhost:8000/geocollections/<the-name-of-the-created-"
"geocollection> and view the results."
msgstr ""

#: ../../devel/workshops/index.rst:496 88849f7dd6d347a58da3b89c59b040d0
msgid ""
"Now that you know how to customize an html template, you can tune the "
"page as you prefer."
msgstr ""

#: ../../devel/workshops/index.rst:500 7c6e95d3177e47c19602b0f07787b802
msgid "**Permissions and APIs**"
msgstr ""

#: ../../devel/workshops/index.rst:502 78ff2169e48a4706843e7791dbcaeb3f
msgid ""
"In this section we will add some more advanced logic like permissions and"
" APIs. The permissions in GeoNode are managed with django-guardian, a "
"library which allow to set object level permissions (django has table "
"level authorization)."
msgstr ""

#: ../../devel/workshops/index.rst:504 f5d2fcf9f9bc470a898dc859d120a558
msgid "The APIs are implemented through django-tastypie."
msgstr ""

#: ../../devel/workshops/index.rst:506 c6e8d6191f0e4686b5a03baffcf4a1f6
msgid "The topics to be covered include:"
msgstr ""

#: ../../devel/workshops/index.rst:508 431e5bcbe1de4553b350525fed5b78a8
msgid "Permissions on who can view the geocollection"
msgstr ""

#: ../../devel/workshops/index.rst:509 1a8d378c6db9415f941442738c03eb73
msgid ""
"How to add templated and js to embed a permission ui in our geocollection"
" detail page"
msgstr ""

#: ../../devel/workshops/index.rst:510 17fae003006f45c1ba78bc7ef4f5c208
msgid "API to serve json serialized searchable endpoint"
msgstr ""

#: ../../devel/workshops/index.rst:513 43afe6573b074e169c5ec928444d1710
msgid "Permissions logic (permissions objects)"
msgstr ""

#: ../../devel/workshops/index.rst:515 59c9404a8ace49038d63fef089154b13
msgid ""
"We need to add the permissions object to the database. We can do this by "
"adding the following meta class to our Geocollection model, guardian will"
" take care of creating the objects for us."
msgstr ""

#: ../../devel/workshops/index.rst:528 0129840cc50f41529ca14dd32efefcf9
msgid ""
"Then run \"python manage.py makemigrations\" and \"python manage.py "
"migrate\" to install them"
msgstr ""

#: ../../devel/workshops/index.rst:530 ec3fec75d7bb4516ae71eac156b83f3e
msgid "**Permissions logic (set_default)**"
msgstr ""

#: ../../devel/workshops/index.rst:532 99b6e61309d8419e93feb8eccdaea872
msgid ""
"Let's add a method that will be used to set the default permissions on "
"the Geocollections. We can add this logic to the Geocollection model but "
"could also be a generic Mix-in similar to how it is implemented in "
"GeoNode."
msgstr ""

#: ../../devel/workshops/index.rst:564 93f7cdc8d58341b4b94e7a7c95e76b83
msgid "**Permissions logic (methods)**"
msgstr ""

#: ../../devel/workshops/index.rst:566 822f24d42641451c9b0c1eb7510a87c9
msgid ""
"Now we need a method to add generic permissions, we want to be able to "
"assign view permissions to groups and single users. We can add this to "
"our Geocollection model"
msgstr ""

#: ../../devel/workshops/index.rst:595 1781eb0b39a94480a9f00eb38adbee73
msgid "Permissions logic (views.py)"
msgstr ""

#: ../../devel/workshops/index.rst:597 17f3c0c3b8cb437bbee89bd5f61128f8
msgid "We can add now a view to receive and set our permissions, in views.py:"
msgstr ""

#: ../../devel/workshops/index.rst:644 471bc4cb34f54bbabfa107cdd3a4291b
msgid "**Permissions logic (url)**"
msgstr ""

#: ../../devel/workshops/index.rst:646 ae36d20e4649467ea6f7cfdc1810e57e
msgid "Lastly we need a url to map our client to our view, in urls.py"
msgstr ""

#: ../../devel/workshops/index.rst:668 876d1cc0b971402ab83eb4ab87c5d032
msgid ""
"This url will be called with the id of the geocollection, the id will be "
"passed to the view in order to get the permissions."
msgstr ""

#: ../../devel/workshops/index.rst:674 0ebb3568dd6c4534bc05456ce2c2f727
msgid ""
"A note on the client part, the server side logic is just one part "
"necessary to implement permissions."
msgstr ""

#: ../../devel/workshops/index.rst:676 67df3c2a9d50499689f38cc4cff8ada0
msgid "A checklist of what is necessary:"
msgstr ""

#: ../../devel/workshops/index.rst:678 4226bc05be884b479f0af5c868dbe143
msgid ""
"A template snippet that can be embedded in the geocollection_detail.html,"
" you can copy and simplify: _permissions_form.html and _permissions.html "
"(in geonode/templates)"
msgstr ""

#: ../../devel/workshops/index.rst:680 332ff940cbf845b8b363b199b2184b9c
msgid ""
"A javascript file that will collect permissions settings and send them to"
" the server, you can copy and simplify: _permissions_form_js.html (in "
"geonode/templates)"
msgstr ""

#: ../../devel/workshops/index.rst:682 d50298e1ffc641648c34054ebc2bc08b
msgid "**API**"
msgstr ""

#: ../../devel/workshops/index.rst:684 25240457283540799a715ff9951dae18
msgid ""
"The GeoNode API system easily allows to plug in new APIs. This section "
"demonstrates the required steps:"
msgstr ""

#: ../../devel/workshops/index.rst:686 a2931d998537494089eecf11aedde972
msgid "We need first to create an api.py file in our geocollection app."
msgstr ""

#: ../../devel/workshops/index.rst:719 f8f035529ea2428e9dcddc1ee413f150
msgid "**API authorization**"
msgstr ""

#: ../../devel/workshops/index.rst:721 4052a6cb42774f618ae3ab6d759f40d8
msgid ""
"We want the API to respect our custom permissions, we can easily achieve "
"this by adding the following to the beginning of api.py:"
msgstr ""

#: ../../devel/workshops/index.rst:746 baf24ee471434fee83305b4fd3eeb306
msgid "And this to the GeocollectionResource Meta class:"
msgstr ""

#: ../../devel/workshops/index.rst:752 9f6122cca274461f9de415db020cfd1f
msgid "**Add a url for our API**"
msgstr ""

#: ../../devel/workshops/index.rst:754 88577561d23c4150a01ae02c1ea93c37
msgid ""
"In order to publish our API we need a url and we want that url to appear "
"under the GeoNode's /api domain."
msgstr ""

#: ../../devel/workshops/index.rst:756 57e0213afa354de2a54b14bfa83e62b2
msgid "The final url for our API has to be /api/geocollections."
msgstr ""

#: ../../devel/workshops/index.rst:758 5c3437684ce94683a303f833245113f4
msgid ""
"We can inject the url into the GeoNode API by adding the following lines "
"to \"my_geonode/urls.py\" file:"
msgstr ""

#: ../../devel/workshops/index.rst:772 fcc758404d9f47948cc25212351a7e0f
msgid "And add the following in the urlpatterns:"
msgstr ""

#: ../../devel/workshops/index.rst:778 77e57c2e6cf54522ad5395dfc1c093d3
msgid "The final result will be:"
msgstr ""

#: ../../devel/workshops/index.rst:798 1b8d19b41acc42a1ac21a8d6fc6f40a1
msgid "Let's test permissions on API"
msgstr ""

#: ../../devel/workshops/index.rst:800 cb8d7edf5c1748538ac41ef25dbaa101
msgid ""
"We can test the permissions on API by manually set a permission from the "
"command line and check that the API respects it."
msgstr ""

#: ../../devel/workshops/index.rst:802 a6cc8e1576c44563854e329f329495f3
msgid ""
"With running ``python manage.py shell`` from inside our \"my_geonode\" "
"folder, it opens a geonode shell."
msgstr ""

#: ../../devel/workshops/index.rst:804 1489f573e70f42f7a5958db82d7c5d33
msgid "A perm spec could look like this:"
msgstr ""

#: ../../devel/workshops/index.rst:814 edf3806612bf423287fa4301a1bd991c
msgid "and we can assign the permissions with:"
msgstr ""

#: ../../devel/workshops/index.rst:822 e9e4ac77e14c4776be9a71d4c19db10f
msgid ""
"our http://localhost:8000/api/geocollections should now list the "
"geocollection."
msgstr ""

#: ../../devel/workshops/index.rst:824 cac64be618b44e6e8f1bc77d129b69ab
msgid ""
"If you remove the 'AnonymousUser' line from perms and assign again the "
"permissions it will disappear."
msgstr ""

#: ../../devel/workshops/index.rst:833 b81ceab7ee1b4dca95947002f1d89b37
msgid "**Deploy your GeoNode**"
msgstr ""

#: ../../devel/workshops/index.rst:836 2df6376606284ede8d9de09a06da75fe
msgid ""
"So far we demonstrated how to modify, extend and style our GeoNode in dev"
" mode but now it's time to go on production. In this section we will "
"clarify how to:"
msgstr ""

#: ../../devel/workshops/index.rst:838 d2a6af76a24e455993c375a689f6d9f7
msgid "commit your work on GitHub"
msgstr ""

#: ../../devel/workshops/index.rst:840 ef2a233e9b1048e1827aa7ca9f668451
msgid "setup your server"
msgstr ""

#: ../../devel/workshops/index.rst:842 c16ac17ec5d14b229aec30c0d8dd29a4
msgid "setup your GeoNode for production"
msgstr ""

#: ../../devel/workshops/index.rst:846 34b4a760c979451eb495b04bc785eb99
msgid ""
"Push to GitHub It is always a good practice to keep your code in a remote"
" repository, GithHub is one of the options and is indeed the most used."
msgstr ""

#: ../../devel/workshops/index.rst:849 d1ce9ce33f7844a0a1ab28c240be3ddb
msgid ""
"It is assumed that you already have a GitHub account and that you have "
"git installed and configured with your name and email."
msgstr ""

#: ../../devel/workshops/index.rst:851 268008fd2a1c46eeb5cd293849ddbb8e
msgid ""
"We will push only the my_geonode folder to GitHub and as we knew earlier,"
" GeoNode for us is a dependency and we'll just reinstall it as it is on "
"the server."
msgstr ""

#: ../../devel/workshops/index.rst:853 97815107de8a4eb9bf9caec9453c54fe
msgid "Steps to push your code to GitHub:"
msgstr ""

#: ../../devel/workshops/index.rst:855 6b9218f027df4d69b7cdec6958910168
msgid "Create an empty repository in GitHub and copy it's address"
msgstr ""

#: ../../devel/workshops/index.rst:857 b8097ce1db5d4df08013acc418314031
msgid "In my_geonode, run git init to initialize an empty repository"
msgstr ""

#: ../../devel/workshops/index.rst:859 011c0f2a184048838ab6a4c9f88fe512
msgid ""
"Add your remote repository address with ``git remote add yourname "
"yourremoteaddress``"
msgstr ""

#: ../../devel/workshops/index.rst:861 2d2d0a520c124f4ea4680d658bd63f0a
msgid "edit .gitignore adding all *.pyc files"
msgstr ""

#: ../../devel/workshops/index.rst:863 c74cd2e6d5fd46c28f26b458bf414832
msgid "``git add *`` to add all content of my_geonode"
msgstr ""

#: ../../devel/workshops/index.rst:865 dc988c0e4fa44f5786acc71191095178
msgid "``git commit -m 'initial import'`` to make the initial commit"
msgstr ""

#: ../../devel/workshops/index.rst:867 3bea05d77ca54c76a16f37a0739fc370
msgid "``git push yourname master`` to push the code to the GitHub repository"
msgstr ""

#: ../../devel/workshops/index.rst:870 f98bf5ed559146ca86710da975f5080b
msgid "**Setup the server**"
msgstr ""

#: ../../devel/workshops/index.rst:872 5275dce97eff4a1b8c1827ffeb61562e
msgid ""
"There are several options for deploying GeoNode projects on servers. In "
"this section, we explain how to deploy it on Ubuntu server 18.04 using "
"system-wide installation"
msgstr ""

#: ../../devel/workshops/index.rst:874 81f3537e26c8476aaa71753264097732
msgid ""
"For quick installation, follow the INSTALLING documentation at "
"http://docs.geonode.org/en/master/install/core/index.html"
msgstr ""

#: ../../devel/workshops/index.rst:877 219805ca63534e938047b3f06c9f8442
msgid "**Setup our my_geonode**"
msgstr ""

#: ../../devel/workshops/index.rst:879 6468f2f754d54df9b4343c8763125fab
msgid ""
"We need now to install the developed \"my_geonode\" project following "
"these steps:"
msgstr ""

#: ../../devel/workshops/index.rst:881 a564680a87d644adb41ff4718774ec2c
msgid "git clone from your repository (in the folder of your preference)"
msgstr ""

#: ../../devel/workshops/index.rst:883 0d0724c99ac746419c413b10c2a3dbf7
msgid "``sudo pip install -e my_geonode``"
msgstr ""

#: ../../devel/workshops/index.rst:885 f9f425e367f6418f8591734e7d887f47
msgid "edit the settings where needed"
msgstr ""

#: ../../devel/workshops/index.rst:887 a926ef3625f844cf9a28c62e4ad010fa
msgid ""
"edit ``/etc/apache2/sites-enabled/geonode.conf`` replacing the wsgi path "
"to the ``my_geonode/my_geonode/wsgi.py`` file"
msgstr ""

#: ../../devel/workshops/index.rst:889 0f59a654c1634d5bbf765e135c9c385e
msgid "add the apache rights to the \"my_geonode\" folder with a directory like"
msgstr ""

#: ../../devel/workshops/index.rst:898 80846a8a635446aa8bc432b0649a3e8e
msgid "Test your server."
msgstr ""

#~ msgid ""
#~ "4- Note the GeoNode database connection"
#~ " parameters mentioned in the "
#~ "local_settings.py configuration file. If not"
#~ " found, copy local_settings.py.sample and "
#~ "rename it to local_settings.py then use"
#~ " psql to create the required user "
#~ "and grant the required privileges as "
#~ "follows:"
#~ msgstr ""

#~ msgid ""
#~ "You may find this warning message: "
#~ "You have 132 unapplied migration(s). "
#~ "Your project may not work properly "
#~ "until you apply the migrations for "
#~ "app(s): account, actstream, admin, "
#~ "agon_ratings, announcements, auth, avatar, "
#~ "base, contenttypes, dialogos, documents, "
#~ "favorite, geonode_client, geonode_themes, groups,"
#~ " guardian, invitations, layers, maps, "
#~ "mapstore2_adapter, monitoring, oauth2_provider, "
#~ "people, pinax_notifications, services, sessions, "
#~ "sites, socialaccount, taggit, tastypie, "
#~ "upload, user_messages. Run 'python manage.py"
#~ " migrate' to apply them."
#~ msgstr ""

#~ msgid ""
#~ "Which means you have some sql "
#~ "statements not executed yet and you "
#~ "need to run the \"migrate\" to "
#~ "sync your database first then \"paver"
#~ " start\" again as follows:"
#~ msgstr ""

#~ msgid ""
#~ "In the \"my_geonode/my_geonode/templates\" directory"
#~ " we can edit the site_index.html."
#~ msgstr ""

#~ msgid ""
#~ "Try to edit the content of the "
#~ "\"jumbotron\" box in the page, save "
#~ "and refresh your browser to see "
#~ "the changes."
#~ msgstr ""

#~ msgid ""
#~ "Adding the ``\".home\"`` class is "
#~ "necessary in order to let the rule"
#~ " have precedence/priority over the "
#~ "GeoNode's one. We can see this by"
#~ " inspecting the element in the "
#~ "developer console."
#~ msgstr ""

#~ msgid ""
#~ "Now we can make some changes that"
#~ " will apply to the whole site. "
#~ "We can add a Geocollections entry "
#~ "in the top menu bar."
#~ msgstr ""

#~ msgid ""
#~ "Edit the site_base.html file in the "
#~ "templates folder and uncomment the list"
#~ " item adapting the text as well "
#~ "from:"
#~ msgstr ""

#~ msgid "To:"
#~ msgstr ""

#~ msgid "**GeoNode generic page**"
#~ msgstr ""

#~ msgid ""
#~ "As you can see in the templates"
#~ " folder there are only the "
#~ "site_index.html and the site_base.html files."
#~ " In order to customize another "
#~ "GeoNode page, for example the layers "
#~ "list page, you need to recreate "
#~ "the same folder structure of the "
#~ "GeoNode templates folder and add a "
#~ "file with the same name."
#~ msgstr ""

#~ msgid ""
#~ "For the layers list page we can"
#~ " create a directory named \"layers\" "
#~ "inside the template directory and a "
#~ "file named \"layer_list.html\" inside layers."
#~ " The changes made in this file "
#~ "will only affect the layer list "
#~ "page."
#~ msgstr ""

#~ msgid "For example change in page title to be:"
#~ msgstr ""

#~ msgid "then refresh the browser to see the update."
#~ msgstr ""

#~ msgid ""
#~ "We will add a DOI field to "
#~ "the ResourceBase model and modify the"
#~ " Templates in order to show the "
#~ "new field both into the Metadata "
#~ "Wizard and the Layer Details page."
#~ msgstr ""

#~ msgid ""
#~ "To add fields directly to the "
#~ "ResourceBase Class without actually modifying"
#~ " it, this can be done from "
#~ "\"my_geonode/my_geonode/apps.py\" file"
#~ msgstr ""

#~ msgid "Once you run python manage.py migrate:"
#~ msgstr ""

#~ msgid "**Overriding the Metadata Wizard Template Page**"
#~ msgstr ""

#~ msgid ""
#~ "Similar to what we have done "
#~ "before in the Templates directory, we"
#~ " will need to create \"layouts\" "
#~ "directory under \"my_geonode/my_geonode/templates\". "
#~ "This directory will contain a copy "
#~ "from "
#~ "\"geonode/src/geonode/geonode/layers/templates/layouts/panels.html\""
#~ " as follows:"
#~ msgstr ""

#~ msgid "Inside panels.html, we will add a new div with text input as follows:"
#~ msgstr ""

#~ msgid ""
#~ "In addition, we will override the "
#~ "Layer Detail template page as follows:"
#~ msgstr ""

#~ msgid ""
#~ "Now from the layer details page, "
#~ "you can see the DOI metadata entry"
#~ " per layer"
#~ msgstr ""

#~ msgid "python manage.py startapp geocollections"
#~ msgstr ""

#~ msgid ""
#~ "We need to add the new app "
#~ "to the INSTALLED_APPS of our project."
#~ " inside \"my_geonode/settings.py\" line 54 "
#~ "change:"
#~ msgstr ""

#~ msgid ""
#~ "Now you know how to customize an"
#~ " html template so you can tune "
#~ "this page as you prefer."
#~ msgstr ""

