openapi: 3.0.3
info:
  title: 'GeoNode REST API v2 - REST'
  version: 3.2.0
paths:
  /api/v2/:
    get:
      operationId: api_v2_retrieve
      description: Returns a list of available endpoints
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: A json with a list of available endpoints
  /api/v2/documents/:
    get:
      operationId: api_v2_documents_list
      description: API endpoint that return all the documents available with detailed information (paginated).
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentList'
          description: ''
    post:
      operationId: api_v2_documents_create
      description: |-
        Either create a single or many model instances in bulk
        using the Serializer's many=True ability from Django REST >= 2.2.5.

        The data can be represented by the serializer name (single or plural
        forms), dict or list.

        Examples:

        POST /dogs/
        {
          "name": "Fido",
          "age": 2
        }

        POST /dogs/
        {
          "dog": {
            "name": "Lucky",
            "age": 3
          }
        }

        POST /dogs/
        {
          "dogs": [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
          ]
        }

        POST /dogs/
        [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
        ]
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    delete:
      operationId: api_v2_documents_destroy
      description: |-
        Either delete a single or many model instances in bulk, by sending a json with the ID of the document to delete

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/documents/{id}/:
    get:
      operationId: api_v2_documents_retrieve
      description: API endpoint that return detailed information of a specific document.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    put:
      operationId: api_v2_documents_update
      description: |-
        Update one or more model instances.

        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records
        may be updated in a single call, provided their IDs.

        If ENABLE_PATCH_ALL is set, multiple records
        may be updated in a single PATCH call, even without knowing their IDs.

        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature
        and used with caution. This feature must be enabled at the viewset level
        and must also be requested explicitly by the client
        via the "patch-all" query parameter.

        This parameter can have one of the following values:

            true (or 1): records will be fetched and then updated in a transaction loop
              - The `Model.save` method will be called and model signals will run
              - This can be slow if there are too many signals or many records in the query
              - This is considered the more safe and default behavior
            query: records will be updated in a single query
              - The `QuerySet.update` method will be called and model signals will not run
              - This will be fast, but may break data constraints that are controlled by signals
              - This is considered unsafe but useful in certain situations

        The server's successful response to a patch-all request
        will NOT include any individual records. Instead, the response content will contain
        a "meta" object with an "updated" count of updated records.

        Examples:

        Update one dog:

            PATCH /dogs/1/
            {
                'fur': 'white'
            }

        Update many dogs by ID:

            PATCH /dogs/
            [
                {'id': 1, 'fur': 'white'},
                {'id': 2, 'fur': 'black'},
                {'id': 3, 'fur': 'yellow'}
            ]

        Update all dogs in a query:

            PATCH /dogs/?filter{fur.contains}=brown&patch-all=true
            {
                'fur': 'gold'
            }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    patch:
      operationId: api_v2_documents_partial_update_2
      description: API endpoint that allows documents to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    delete:
      operationId: api_v2_documents_destroy_2
      description: |-
        Delete a single document.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/documents/{id}/linked_resources/:
    get:
      operationId: api_v2_documents_linked_resources_retrieve
      description: API endpoint that return all the linked resources of a specific id.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v2/geoapps/:
    get:
      operationId: api_v2_geoapps_list
      description: API endpoint that show all the geoapps available.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGeoAppList'
          description: ''
    post:
      operationId: api_v2_geoapps_create
      description: |-
        Either create a single or many model instances in bulk
        using the Serializer's many=True ability from Django REST >= 2.2.5.

        The data can be represented by the serializer name (single or plural
        forms), dict or list.

        Examples:

        POST /dogs/
        {
          "name": "Fido",
          "age": 2
        }

        POST /dogs/
        {
          "dog": {
            "name": "Lucky",
            "age": 3
          }
        }

        POST /dogs/
        {
          "dogs": [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
          ]
        }

        POST /dogs/
        [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
        ]
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoApp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GeoApp'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GeoApp'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoApp'
          description: ''
    patch:
      operationId: api_v2_geoapps_partial_update
      description: API endpoint that allows geoapps to be viewed or edited.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGeoApp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGeoApp'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGeoApp'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoApp'
          description: ''
    delete:
      operationId: api_v2_geoapps_destroy
      description: |-
        Either delete a single or many model instances in bulk

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/geoapps/{id}/:
    get:
      operationId: api_v2_geoapps_retrieve
      description: API endpoint that show details of a specific geoapp.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this geo app.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoApp'
          description: ''
    put:
      operationId: api_v2_geoapps_update
      description: |-
        Update one or more model instances.

        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records
        may be updated in a single call, provided their IDs.

        If ENABLE_PATCH_ALL is set, multiple records
        may be updated in a single PATCH call, even without knowing their IDs.

        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature
        and used with caution. This feature must be enabled at the viewset level
        and must also be requested explicitly by the client
        via the "patch-all" query parameter.

        This parameter can have one of the following values:

            true (or 1): records will be fetched and then updated in a transaction loop
              - The `Model.save` method will be called and model signals will run
              - This can be slow if there are too many signals or many records in the query
              - This is considered the more safe and default behavior
            query: records will be updated in a single query
              - The `QuerySet.update` method will be called and model signals will not run
              - This will be fast, but may break data constraints that are controlled by signals
              - This is considered unsafe but useful in certain situations

        The server's successful response to a patch-all request
        will NOT include any individual records. Instead, the response content will contain
        a "meta" object with an "updated" count of updated records.

        Examples:

        Update one dog:

            PATCH /dogs/1/
            {
                'fur': 'white'
            }

        Update many dogs by ID:

            PATCH /dogs/
            [
                {'id': 1, 'fur': 'white'},
                {'id': 2, 'fur': 'black'},
                {'id': 3, 'fur': 'yellow'}
            ]

        Update all dogs in a query:

            PATCH /dogs/?filter{fur.contains}=brown&patch-all=true
            {
                'fur': 'gold'
            }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this geo app.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoApp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GeoApp'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GeoApp'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoApp'
          description: ''
    patch:
      operationId: api_v2_geoapps_partial_update_2
      description: API endpoint that allows geoapps to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this geo app.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGeoApp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGeoApp'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGeoApp'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoApp'
          description: ''
    delete:
      operationId: api_v2_geoapps_destroy_2
      description: |-
        Delete a single instances

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this geo app.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/geoapps/{id}/{field_name}/:
    get:
      operationId: api_v2_geoapps_retrieve_2
      description: |-
        Fetch related object(s), as if sideloaded (used to support
        link objects).

        This method gets mapped to `/<resource>/<pk>/<field_name>/` by
        DynamicRouter for all DynamicRelationField fields. Generally,
        this method probably shouldn't be overridden.

        An alternative implementation would be to generate reverse queries.
        For an exploration of that approach, see:
            https://gist.github.com/ryochiji/54687d675978c7d96503
      parameters:
      - in: path
        name: field_name
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this geo app.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoApp'
          description: ''
  /api/v2/groups/:
    get:
      operationId: api_v2_groups_list
      description: API endpoint that return all groups available with detailed information (paginated).
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupProfileList'
          description: ''
    post:
      operationId: api_v2_groups_create
      description: |-
        Either create a single or many model instances in bulk
        using the Serializer's many=True ability from Django REST >= 2.2.5.

        The data can be represented by the serializer name (single or plural
        forms), dict or list.

        Examples:

        POST /dogs/
        {
          "name": "Fido",
          "age": 2
        }

        POST /dogs/
        {
          "dog": {
            "name": "Lucky",
            "age": 3
          }
        }

        POST /dogs/
        {
          "dogs": [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
          ]
        }

        POST /dogs/
        [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
        ]
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupProfile'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProfile'
          description: ''
    patch:
      operationId: api_v2_groups_partial_update
      description: API endpoint that allows gropus to be viewed or edited.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroupProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroupProfile'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProfile'
          description: ''
    delete:
      operationId: api_v2_groups_destroy
      description: |-
        Either delete a single or many model instances in bulk

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/groups/{id}/:
    get:
      operationId: api_v2_groups_retrieve
      description: API endpoint that return detailed information of a specific group.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group profile.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProfile'
          description: ''
    put:
      operationId: api_v2_groups_update
      description: |-
        Update one or more model instances.

        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records
        may be updated in a single call, provided their IDs.

        If ENABLE_PATCH_ALL is set, multiple records
        may be updated in a single PATCH call, even without knowing their IDs.

        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature
        and used with caution. This feature must be enabled at the viewset level
        and must also be requested explicitly by the client
        via the "patch-all" query parameter.

        This parameter can have one of the following values:

            true (or 1): records will be fetched and then updated in a transaction loop
              - The `Model.save` method will be called and model signals will run
              - This can be slow if there are too many signals or many records in the query
              - This is considered the more safe and default behavior
            query: records will be updated in a single query
              - The `QuerySet.update` method will be called and model signals will not run
              - This will be fast, but may break data constraints that are controlled by signals
              - This is considered unsafe but useful in certain situations

        The server's successful response to a patch-all request
        will NOT include any individual records. Instead, the response content will contain
        a "meta" object with an "updated" count of updated records.

        Examples:

        Update one dog:

            PATCH /dogs/1/
            {
                'fur': 'white'
            }

        Update many dogs by ID:

            PATCH /dogs/
            [
                {'id': 1, 'fur': 'white'},
                {'id': 2, 'fur': 'black'},
                {'id': 3, 'fur': 'yellow'}
            ]

        Update all dogs in a query:

            PATCH /dogs/?filter{fur.contains}=brown&patch-all=true
            {
                'fur': 'gold'
            }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupProfile'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProfile'
          description: ''
    patch:
      operationId: api_v2_groups_partial_update_2
      description: API endpoint that allows gropus to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroupProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroupProfile'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProfile'
          description: ''
    delete:
      operationId: api_v2_groups_destroy_2
      description: |-
        Delete a single instance
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group profile.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/groups/{id}/managers/:
    get:
      operationId: api_v2_groups_managers_retrieve
      description: API endpoint that show the managers for the selected group.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group profile.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProfile'
          description: ''
  /api/v2/groups/{id}/members/:
    get:
      operationId: api_v2_groups_members_retrieve
      description: API endpoint that show either members and managers for the selected group.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group profile.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProfile'
          description: ''
  /api/v2/groups/{id}/resources/:
    get:
      operationId: api_v2_groups_resources_retrieve
      description: API endpoint that show all the resources connected to the selected group.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group profile.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProfile'
          description: ''
  /api/v2/datasets/:
    get:
      operationId: api_v2_datasets_list
      description: API endpoint that return all the datasets available with detailed information (paginated).
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDatasetList'
          description: ''
    post:
      operationId: api_v2_datasets_create
      description: |-
        Either create a single or many model instances in bulk
        using the Serializer's many=True ability from Django REST >= 2.2.5.

        The data can be represented by the serializer name (single or plural
        forms), dict or list.

        Examples:

        POST /dogs/
        {
          "name": "Fido",
          "age": 2
        }

        POST /dogs/
        {
          "dog": {
            "name": "Lucky",
            "age": 3
          }
        }

        POST /dogs/
        {
          "dogs": [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
          ]
        }

        POST /dogs/
        [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
        ]
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dataset'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    patch:
      operationId: api_v2_datasets_partial_update
      description: API endpoint that allows datasets to be viewed or edited.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    delete:
      operationId: api_v2_datasets_destroy
      description: |-
        Either delete a single or many model instances in bulk

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/datasets/{id}/:
    get:
      operationId: api_v2_datasets_retrieve
      description: API endpoint that return detailed information of a specific dataset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dataset.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    put:
      operationId: api_v2_datasets_update
      description: |-
        Update one or more model instances.

        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records
        may be updated in a single call, provided their IDs.

        If ENABLE_PATCH_ALL is set, multiple records
        may be updated in a single PATCH call, even without knowing their IDs.

        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature
        and used with caution. This feature must be enabled at the viewset level
        and must also be requested explicitly by the client
        via the "patch-all" query parameter.

        This parameter can have one of the following values:

            true (or 1): records will be fetched and then updated in a transaction loop
              - The `Model.save` method will be called and model signals will run
              - This can be slow if there are too many signals or many records in the query
              - This is considered the more safe and default behavior
            query: records will be updated in a single query
              - The `QuerySet.update` method will be called and model signals will not run
              - This will be fast, but may break data constraints that are controlled by signals
              - This is considered unsafe but useful in certain situations

        The server's successful response to a patch-all request
        will NOT include any individual records. Instead, the response content will contain
        a "meta" object with an "updated" count of updated records.

        Examples:

        Update one dog:

            PATCH /dogs/1/
            {
                'fur': 'white'
            }

        Update many dogs by ID:

            PATCH /dogs/
            [
                {'id': 1, 'fur': 'white'},
                {'id': 2, 'fur': 'black'},
                {'id': 3, 'fur': 'yellow'}
            ]

        Update all dogs in a query:

            PATCH /dogs/?filter{fur.contains}=brown&patch-all=true
            {
                'fur': 'gold'
            }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dataset.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dataset'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    patch:
      operationId: api_v2_datasets_partial_update_2
      description: API endpoint that allows datasets to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dataset.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataset'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
    delete:
      operationId: api_v2_dataset_destroy_2
      description: |-
        Delete a single model instance

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dataset.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/datasets/{id}/{field_name}/:
    get:
      operationId: api_v2_datasets_retrieve_2
      description: |-
        Fetch related object(s), as if sideloaded (used to support
        link objects).

        This method gets mapped to `/<resource>/<pk>/<field_name>/` by
        DynamicRouter for all DynamicRelationField fields. Generally,
        this method probably shouldn't be overridden.

        An alternative implementation would be to generate reverse queries.
        For an exploration of that approach, see:
            https://gist.github.com/ryochiji/54687d675978c7d96503
      parameters:
      - in: path
        name: field_name
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dataset.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
  /api/v2/datasets/{id}/maps/:
    get:
      operationId: api_v2_datasets_maps_retrieve
      description: API endpoint allowing to retrieve a list of the maps using a dataset.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''
  /api/v2/datasets/{id}/maplayers/:
    get:
      operationId: api_v2_datasets_maplayers_retrieve
      description: API endpoint allowing to retrieve a list of the MapLayers related to the dataset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: ''

  /api/v2/maps/:
    get:
      operationId: api_v2_maps_list
      description: API endpoint that return all the maps available with detailed information (paginated).
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMapList'
          description: ''
    post:
      operationId: api_v2_maps_create
      description: |-
        Either create a single or many model instances in bulk
        using the Serializer's many=True ability from Django REST >= 2.2.5.

        The data can be represented by the serializer name (single or plural
        forms), dict or list.

        Examples:

        POST /dogs/
        {
          "name": "Fido",
          "age": 2
        }

        POST /dogs/
        {
          "dog": {
            "name": "Lucky",
            "age": 3
          }
        }

        POST /dogs/
        {
          "dogs": [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
          ]
        }

        POST /dogs/
        [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
        ]
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Map'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Map'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Map'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: ''
    patch:
      operationId: api_v2_maps_partial_update
      description: API endpoint that allows maps to be viewed or edited.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMap'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMap'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMap'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: ''
    delete:
      operationId: api_v2_maps_destroy
      description: |-
        Either delete a single or many model instances in bulk

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/maps/{id}/:
    get:
      operationId: api_v2_maps_retrieve
      description: API endpoint that return detailed information of a specific map.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: ''
    put:
      operationId: api_v2_maps_update
      description: |-
        Update one or more model instances.

        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records
        may be updated in a single call, provided their IDs.

        If ENABLE_PATCH_ALL is set, multiple records
        may be updated in a single PATCH call, even without knowing their IDs.

        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature
        and used with caution. This feature must be enabled at the viewset level
        and must also be requested explicitly by the client
        via the "patch-all" query parameter.

        This parameter can have one of the following values:

            true (or 1): records will be fetched and then updated in a transaction loop
              - The `Model.save` method will be called and model signals will run
              - This can be slow if there are too many signals or many records in the query
              - This is considered the more safe and default behavior
            query: records will be updated in a single query
              - The `QuerySet.update` method will be called and model signals will not run
              - This will be fast, but may break data constraints that are controlled by signals
              - This is considered unsafe but useful in certain situations

        The server's successful response to a patch-all request
        will NOT include any individual records. Instead, the response content will contain
        a "meta" object with an "updated" count of updated records.

        Examples:

        Update one dog:

            PATCH /dogs/1/
            {
                'fur': 'white'
            }

        Update many dogs by ID:

            PATCH /dogs/
            [
                {'id': 1, 'fur': 'white'},
                {'id': 2, 'fur': 'black'},
                {'id': 3, 'fur': 'yellow'}
            ]

        Update all dogs in a query:

            PATCH /dogs/?filter{fur.contains}=brown&patch-all=true
            {
                'fur': 'gold'
            }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Map'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Map'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Map'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: ''
    patch:
      operationId: api_v2_maps_partial_update_2
      description: API endpoint that allows maps to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMap'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMap'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMap'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: ''
    delete:
      operationId: api_v2_maps_destroy_2
      description: |-
        Delete a single instance.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/maps/{id}/{field_name}/:
    get:
      operationId: api_v2_maps_retrieve_2
      description: |-
        Fetch related object(s), as if sideloaded (used to support
        link objects).

        This method gets mapped to `/<resource>/<pk>/<field_name>/` by
        DynamicRouter for all DynamicRelationField fields. Generally,
        this method probably shouldn't be overridden.

        An alternative implementation would be to generate reverse queries.
        For an exploration of that approach, see:
            https://gist.github.com/ryochiji/54687d675978c7d96503
      parameters:
      - in: path
        name: field_name
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: ''
  /api/v2/maps/{id}/maplayers/:
    get:
      operationId: api_v2_maps_datasets_retrieve
      description: |-
        Return the list of the maplayers that compose the map.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: ''
  /api/v2/maps/{id}/datasets/:
    get:
      operationId: api_v2_maps_datasets_retrieve
      description: API endpoint allowing to retrieve a detailed list of the local Datasets a map is using.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this map.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
          description: ''
  /api/v2/resources/:
    get:
      operationId: api_v2_resources_list
      description: API endpoint that show all resources available in GeoNode, includes maps, datasets, geoapps and documents (paginated).
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResourceBaseList'
          description: ''
    post:
      operationId: api_v2_resources_create
      description: |-
        Either create a single or many model instances in bulk
        using the Serializer's many=True ability from Django REST >= 2.2.5.

        The data can be represented by the serializer name (single or plural
        forms), dict or list.

        Examples:

        POST /dogs/
        {
          "name": "Fido",
          "age": 2
        }

        POST /dogs/
        {
          "dog": {
            "name": "Lucky",
            "age": 3
          }
        }

        POST /dogs/
        {
          "dogs": [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
          ]
        }

        POST /dogs/
        [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
        ]
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceBase'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
    patch:
      operationId: api_v2_resources_partial_update
      description: API endpoint that allows base resources to be viewed or edited.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResourceBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedResourceBase'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
    delete:
      operationId: api_v2_resources_destroy
      description: |-
        Either delete a single or many model instances in bulk

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/resources/{id}/:
    get:
      operationId: api_v2_resources_retrieve
      description: API endpoint that return detailed information of a specific resource, including keywods, owner and bbox_polygon.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
    put:
      operationId: api_v2_resources_update
      description: |-
        Update one or more model instances.

        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records
        may be updated in a single call, provided their IDs.

        If ENABLE_PATCH_ALL is set, multiple records
        may be updated in a single PATCH call, even without knowing their IDs.

        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature
        and used with caution. This feature must be enabled at the viewset level
        and must also be requested explicitly by the client
        via the "patch-all" query parameter.

        This parameter can have one of the following values:

            true (or 1): records will be fetched and then updated in a transaction loop
              - The `Model.save` method will be called and model signals will run
              - This can be slow if there are too many signals or many records in the query
              - This is considered the more safe and default behavior
            query: records will be updated in a single query
              - The `QuerySet.update` method will be called and model signals will not run
              - This will be fast, but may break data constraints that are controlled by signals
              - This is considered unsafe but useful in certain situations

        The server's successful response to a patch-all request
        will NOT include any individual records. Instead, the response content will contain
        a "meta" object with an "updated" count of updated records.

        Examples:

        Update one dog:

            PATCH /dogs/1/
            {
                'fur': 'white'
            }

        Update many dogs by ID:

            PATCH /dogs/
            [
                {'id': 1, 'fur': 'white'},
                {'id': 2, 'fur': 'black'},
                {'id': 3, 'fur': 'yellow'}
            ]

        Update all dogs in a query:

            PATCH /dogs/?filter{fur.contains}=brown&patch-all=true
            {
                'fur': 'gold'
            }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceBase'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
    patch:
      operationId: api_v2_resources_partial_update_2
      description: API endpoint that allows base resources to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResourceBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedResourceBase'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
    delete:
      operationId: api_v2_resources_destroy_2
      description: |-
        Delete a single instance
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/resources/{id}/get_perms/:
    get:
      operationId: api_v2_resources_get_perms_retrieve
      description: |-
        API endpoint that show all the permissions defined for a specific resource, splitted by groups and users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
  /api/v2/resources/{id}/set_perms/:
    put:
      operationId: api_v2_resources_set_perms_update
      description: API endpoint that allows the user to set the permissions to a specific resource.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this resource base.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceBase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceBase'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
  /api/v2/resources/approved/:
    get:
      operationId: api_v2_resources_approved_retrieve
      description: Will return a list of approved resource available.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
  /api/v2/resources/featured/:
    get:
      operationId: api_v2_resources_featured_retrieve
      description: Will return a list of featured resource available.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
  /api/v2/resources/published/:
    get:
      operationId: api_v2_resources_published_retrieve
      description: Will return a list of published resource available.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
  /api/v2/resources/resource_types/:
    get:
      operationId: api_v2_resources_resource_types_retrieve
      description: Will return a list of the resource types that are managed by GeoNode.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBase'
          description: ''
  /api/v2/schema/:
    get:
      operationId: api_v2_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - am
          - ar
          - bn
          - de
          - el
          - en
          - es
          - fa
          - fr
          - id
          - it
          - ja
          - km
          - ko
          - ne
          - nl
          - pl
          - pt
          - pt-br
          - ru
          - si
          - sq
          - sv
          - sw
          - ta
          - th
          - tl
          - uk
          - vi
          - zh-cn
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v2/upload-size-limits/:
    get:
      operationId: upload-size-limit-list
      description:  |-
        Upload Size Limit List
        Each object in `upload-size-limits` contains:
          - slug [str]: an unique identifier
          - description [str]: The description of the limit.
          - max_size [int]: Max amount of bytes allowed.
          - max_size_label [str]: max_size in a human readable format. 
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUploadSizeLimitList'
          description: ''
  /api/v2/upload-size-limits/{slug}/:
    get:
      operationId: upload-size-limit-retrieve
      description:  |-
        Upload Size Limit Retrieve
        Returns the limit object with the following data:
          - slug [str]: an unique identifier
          - description [str]: The description of the limit.
          - max_size [int]: Max amount of bytes allowed.
          - max_size_label [str]: max_size in a human readable format. 
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: A unique string value identifying this upload.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSizeLimit'
          description: ''
    put:
      operationId: upload-size-limit-update
      description: Update one model instance.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: A unique string value identifying this upload.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadSizeLimit'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSizeLimit'
          description: ''
    patch:
      operationId: upload-size-limit-partial-update
      description: Partially update one model instance.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: A unique string value identifying this upload.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadSizeLimit'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSizeLimit'
          description: ''
    delete:
      operationId: upload-size-limit-destroy
      description: |-
        Delete a model instance.
        Protected objects, these objects are required by the code, so they can not
        be deleted, only modified.
          * 'dataset_upload_size'
          * 'document_upload_size'
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: A unique string value identifying this upload.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/uploads/:
    get:
      operationId: api_v2_uploads_list
      description: List of the upload instances with their status.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUploadList'
          description: ''
    post:
      operationId: api_v2_uploads_create
      description: |-
        Either create a single or many model instances in bulk
        using the Serializer's many=True ability from Django REST >= 2.2.5.

        The data can be represented by the serializer name (single or plural
        forms), dict or list.

        Examples:

        POST /dogs/
        {
          "name": "Fido",
          "age": 2
        }

        POST /dogs/
        {
          "dog": {
            "name": "Lucky",
            "age": 3
          }
        }

        POST /dogs/
        {
          "dogs": [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
          ]
        }

        POST /dogs/
        [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
        ]
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Upload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Upload'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Upload'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upload'
          description: ''
    patch:
      operationId: api_v2_uploads_partial_update
      description: API endpoint that allows uploads to be viewed or edited.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpload'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpload'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upload'
          description: ''
    delete:
      operationId: api_v2_uploads_destroy
      description: |-
        Either delete a single or many model instances in bulk

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/uploads/{id}/:
    get:
      operationId: api_v2_uploads_retrieve
      description:  |-
        Authenticated API endpoint that will show details about the upload status.
        Main informations available are:
          - ID: upload id
          - name: dataset name
          - date: start date of the import process
          - state: the actual state of the import process. When the state is PROCESSED, means that the dataset has been process by GeoNode and Geoserver
          - progress: % of progress
          - uploadfile_set: list of the uploaded files
          - delete url: url to be called for delete the import
          - import_url: to monitoring the import status in geoserver.
        Example of still in progress import:
          {
            "upload": {
                "id": 1119,
                "name": "dataset_name",
                "date": "2021-04-26T09:50:41.233543Z",
                "create_date": "2021-04-26T09:50:40.515866Z",
                "user": 1167,
                "state": "COMPLETE",
                "progress": 80.0,
                "complete": true,
                "import_id": 1089,
                "uploadfile_set": [],
                "resume_url": null,
                "delete_url": "/upload/delete/1119",
                "import_url": "http://geoserver:8080/geoserver/rest/imports/1089",
                "detail_url": null
            }
        }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this upload.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upload'
          description: ''
    put:
      operationId: api_v2_uploads_update
      description: |-
        Update one or more model instances.

        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records
        may be updated in a single call, provided their IDs.

        If ENABLE_PATCH_ALL is set, multiple records
        may be updated in a single PATCH call, even without knowing their IDs.

        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature
        and used with caution. This feature must be enabled at the viewset level
        and must also be requested explicitly by the client
        via the "patch-all" query parameter.

        This parameter can have one of the following values:

            true (or 1): records will be fetched and then updated in a transaction loop
              - The `Model.save` method will be called and model signals will run
              - This can be slow if there are too many signals or many records in the query
              - This is considered the more safe and default behavior
            query: records will be updated in a single query
              - The `QuerySet.update` method will be called and model signals will not run
              - This will be fast, but may break data constraints that are controlled by signals
              - This is considered unsafe but useful in certain situations

        The server's successful response to a patch-all request
        will NOT include any individual records. Instead, the response content will contain
        a "meta" object with an "updated" count of updated records.

        Examples:

        Update one dog:

            PATCH /dogs/1/
            {
                'fur': 'white'
            }

        Update many dogs by ID:

            PATCH /dogs/
            [
                {'id': 1, 'fur': 'white'},
                {'id': 2, 'fur': 'black'},
                {'id': 3, 'fur': 'yellow'}
            ]

        Update all dogs in a query:

            PATCH /dogs/?filter{fur.contains}=brown&patch-all=true
            {
                'fur': 'gold'
            }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this upload.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Upload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Upload'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Upload'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upload'
          description: ''
    patch:
      operationId: api_v2_uploads_partial_update_2
      description: API endpoint that allows uploads to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this upload.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpload'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpload'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upload'
          description: ''
    delete:
      operationId: api_v2_uploads_destroy_2
      description: |-
        Either delete a single or many model instances in bulk

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this upload.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/uploads/{id}/{field_name}/:
    get:
      operationId: api_v2_uploads_retrieve_2
      description: |-
        Fetch related object(s), as if sideloaded (used to support
        link objects).

        This method gets mapped to `/<resource>/<pk>/<field_name>/` by
        DynamicRouter for all DynamicRelationField fields. Generally,
        this method probably shouldn't be overridden.

        An alternative implementation would be to generate reverse queries.
        For an exploration of that approach, see:
            https://gist.github.com/ryochiji/54687d675978c7d96503
      parameters:
      - in: path
        name: field_name
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this upload.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upload'
          description: ''
  /api/v2/uploads/upload/:
    put:
      operationId: api_v2_uploads_upload_update
      description:  |-
        API endpoint that allows user to upload new datasets into GeoNode.
        The endpoint is protected via authentication and the request should always come from the same session.
        The API accept the request with form-data. Is also possible to define some information via json.
        Behind the scene, geonode will:
          - Create an upload session
          - Save the dataset into GeoNode
          - Call async geoserver to save the dataset
        Example:
          client = requests.session()
          response = client.put(
                "http://localhost:8000/api/v2/uploads/upload/",
                auth=HTTPBasicAuth(username, password),
                data=params,
                files=files,
            )
            Where:
              params = {
                  "permissions": '{ "users": {"AnonymousUser": ["view_resourcebase"]} , "groups":{}}',  # dataset permissions
                  "time": "false",
                  "layer_title": "layer_title",
                  "time": "false",
                  "charset": "UTF-8",
              }
              files = {
                "filename": <_io.BufferedReader name="filename">
              }
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Upload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Upload'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Upload'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upload'
          description: ''
  /upload/final?id={import_id}:
    put:
      operationId: api_upload_upload_final
      description:  |-
        API endpoint that allows user to check the status of new datasets into GeoNode.
        The endpoint is protected via authentication and the request should always come from the same session.
        Example:
          client = requests.session()
          response = client.get("http://localhost:8000/upload/final?id=1")
          Where:
            params = {
                "permissions": '{ "users": {"AnonymousUser": ["view_resourcebase"]} , "groups":{}}',  # dataset permissions
                "time": "false",
                "layer_title": "layer_title",
                "time": "false",
                "charset": "UTF-8",
            }
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upload'
          description: |-
            {
              "status": "finished",
              "id": 131,
              "url": "file_name_path",
              "bbox": "-180.0000000,-90.0000000,180.0000000,90.0000000",
              "crs": {
                "type": "name",
                "properties": "EPSG:4326"
              },
              "success": true
            }          
  /api/v2/users/:
    get:
      operationId: api_v2_users_list
      description: API endpoint that show the list of users registered in GeoNode. if the logged user is the administrator will show all the user available, otherwise only the information of his own account are provided
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserProfileList'
          description: ''
    post:
      operationId: api_v2_users_create
      description: |-
        Either create a single or many model instances in bulk
        using the Serializer's many=True ability from Django REST >= 2.2.5.

        The data can be represented by the serializer name (single or plural
        forms), dict or list.

        Examples:

        POST /dogs/
        {
          "name": "Fido",
          "age": 2
        }

        POST /dogs/
        {
          "dog": {
            "name": "Lucky",
            "age": 3
          }
        }

        POST /dogs/
        {
          "dogs": [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
          ]
        }

        POST /dogs/
        [
            {"name": "Fido", "age": 2},
            {"name": "Lucky", "age": 3}
        ]
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    delete:
      operationId: api_v2_users_destroy
      description: |-
        Either delete a single or many model instances in bulk

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/users/{id}/:
    get:
      operationId: api_v2_users_retrieve
      description: API endpoint that return detailed information of a specific user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: api_v2_users_update
      description: |-
        Update one or more model instances.

        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records
        may be updated in a single call, provided their IDs.

        If ENABLE_PATCH_ALL is set, multiple records
        may be updated in a single PATCH call, even without knowing their IDs.

        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature
        and used with caution. This feature must be enabled at the viewset level
        and must also be requested explicitly by the client
        via the "patch-all" query parameter.

        This parameter can have one of the following values:

            true (or 1): records will be fetched and then updated in a transaction loop
              - The `Model.save` method will be called and model signals will run
              - This can be slow if there are too many signals or many records in the query
              - This is considered the more safe and default behavior
            query: records will be updated in a single query
              - The `QuerySet.update` method will be called and model signals will not run
              - This will be fast, but may break data constraints that are controlled by signals
              - This is considered unsafe but useful in certain situations

        The server's successful response to a patch-all request
        will NOT include any individual records. Instead, the response content will contain
        a "meta" object with an "updated" count of updated records.

        Examples:

        Update one dog:

            PATCH /dogs/1/
            {
                'fur': 'white'
            }

        Update many dogs by ID:

            PATCH /dogs/
            [
                {'id': 1, 'fur': 'white'},
                {'id': 2, 'fur': 'black'},
                {'id': 3, 'fur': 'yellow'}
            ]

        Update all dogs in a query:

            PATCH /dogs/?filter{fur.contains}=brown&patch-all=true
            {
                'fur': 'gold'
            }
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    delete:
      operationId: api_v2_users_destroy_2
      description: |-
        Delete a model instance.

        DELETE /dogs/
        {
            "dogs": [
                {"id": 1},
                {"id": 2}
            ]
        }

        DELETE /dogs/
        [
            {"id": 1},
            {"id": 2}
        ]
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/users/{id}/groups/:
    get:
      operationId: api_v2_users_groups_retrieve
      description: API endpoint that show the list of the groups that the user belong to.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/v2/users/{id}/resources/:
    get:
      operationId: api_v2_users_resources_retrieve
      description: API endpoint that show the list of the resources that belong to the user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /mapstore/rest/resources/:
    get:
      operationId: mapstore_rest_resources_retrieve
      description: Only Authenticate User perform CRUD Operations on Respective Data
      tags:
      - mapstore
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: mapstore_rest_resources_create
      description: Only Authenticate User perform CRUD Operations on Respective Data
      tags:
      - mapstore
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          description: No response body
  /mapstore/rest/resources/{id}/:
    get:
      operationId: mapstore_rest_resources_retrieve_2
      description: Only Authenticate User perform CRUD Operations on Respective Data
      parameters:
      - in: path
        name: id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this map store resource.
        required: true
      tags:
      - mapstore
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: mapstore_rest_resources_update
      description: Only Authenticate User perform CRUD Operations on Respective Data
      parameters:
      - in: path
        name: id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this map store resource.
        required: true
      tags:
      - mapstore
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: mapstore_rest_resources_partial_update
      description: Only Authenticate User perform CRUD Operations on Respective Data
      parameters:
      - in: path
        name: id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this map store resource.
        required: true
      tags:
      - mapstore
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: mapstore_rest_resources_destroy
      description: Only Authenticate User perform CRUD Operations on Respective Data
      parameters:
      - in: path
        name: id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this map store resource.
        required: true
      tags:
      - mapstore
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /mapstore/rest/users/:
    get:
      operationId: mapstore_rest_users_list
      description: API endpoint that show the users available with some details.
      tags:
      - mapstore
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: mapstore_rest_users_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - mapstore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /mapstore/rest/users/{id}/:
    get:
      operationId: mapstore_rest_users_retrieve
      description: API endpoint that show the users available with some details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - mapstore
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: mapstore_rest_users_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - mapstore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: mapstore_rest_users_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - mapstore
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /o/userinfo/:
    get:
      operationId: o_userinfo_retrieve
      description: View used to show Claims about the authenticated End-User
      tags:
      - o
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    AccessEnum:
      enum:
      - public
      - public-invite
      - private
      type: string
    BlankEnum:
      enum:
      - ''
    Document:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        href:
          type: string
          readOnly: true
        doc_type:
          type: string
          nullable: true
          maxLength: 128
        extension:
          type: string
          nullable: true
          maxLength: 128
        mime_type:
          type: string
          readOnly: true
        resource_type:
          type: string
          readOnly: true
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
          nullable: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
        keywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
      required:
      - abstract
      - alternate
      - attribution
      - bbox_polygon
      - constraints_other
      - created
      - data_quality_statement
      - date
      - date_type
      - detail_url
      - doi
      - edition
      - embed_url
      - featured
      - href
      - is_approved
      - is_published
      - language
      - last_updated
      - ll_bbox_polygon
      - maintenance_frequency
      - metadata_author
      - metadata_only
      - mime_type
      - name
      - owner
      - pk
      - poc
      - polymorphic_ctype_id
      - popular_count
      - processed
      - purpose
      - rating
      - raw_abstract
      - raw_constraints_other
      - raw_data_quality_statement
      - raw_purpose
      - raw_supplemental_information
      - regions
      - resource_type
      - share_count
      - srid
      - supplemental_information
      - temporal_extent_end
      - temporal_extent_start
      - thumbnail_url
      - title
      - uuid
    GeoApp:
      type: object
      description: '- Deferred / not Embedded --> ?include[]=data'
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        zoom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        projection:
          type: string
          nullable: true
          maxLength: 32
        center_x:
          type: number
          format: float
          nullable: true
        center_y:
          type: number
          format: float
          nullable: true
        urlsuffix:
          type: string
          nullable: true
          title: Site URL
          maxLength: 255
        resource_type:
          type: string
          readOnly: true
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
          nullable: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
        keywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
      required:
      - abstract
      - alternate
      - attribution
      - bbox_polygon
      - constraints_other
      - created
      - data_quality_statement
      - date
      - date_type
      - detail_url
      - doi
      - edition
      - embed_url
      - featured
      - is_approved
      - is_published
      - language
      - last_updated
      - ll_bbox_polygon
      - maintenance_frequency
      - metadata_author
      - metadata_only
      - owner
      - pk
      - poc
      - polymorphic_ctype_id
      - popular_count
      - processed
      - purpose
      - rating
      - raw_abstract
      - raw_constraints_other
      - raw_data_quality_statement
      - raw_purpose
      - raw_supplemental_information
      - regions
      - resource_type
      - share_count
      - srid
      - supplemental_information
      - temporal_extent_end
      - temporal_extent_start
      - thumbnail_url
      - title
      - uuid
    GeoStory:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        app_type:
          type: string
          title: Apps Type
          maxLength: 255
        zoom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        projection:
          type: string
          nullable: true
          maxLength: 32
        center_x:
          type: number
          format: float
          nullable: true
        center_y:
          type: number
          format: float
          nullable: true
        urlsuffix:
          type: string
          nullable: true
          title: Site URL
          maxLength: 255
        resource_type:
          type: string
          readOnly: true
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
          nullable: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
        keywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
      required:
      - abstract
      - alternate
      - attribution
      - bbox_polygon
      - constraints_other
      - created
      - data_quality_statement
      - date
      - date_type
      - detail_url
      - doi
      - edition
      - embed_url
      - featured
      - is_approved
      - is_published
      - language
      - last_updated
      - ll_bbox_polygon
      - maintenance_frequency
      - metadata_author
      - metadata_only
      - owner
      - pk
      - poc
      - polymorphic_ctype_id
      - popular_count
      - processed
      - purpose
      - rating
      - raw_abstract
      - raw_constraints_other
      - raw_data_quality_statement
      - raw_purpose
      - raw_supplemental_information
      - regions
      - resource_type
      - share_count
      - srid
      - supplemental_information
      - temporal_extent_end
      - temporal_extent_start
      - thumbnail_url
      - title
      - uuid
    GroupProfile:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        title:
          type: string
          maxLength: 1000
        group:
          type: string
        slug:
          type: string
          maxLength: 1000
          pattern: ^[-a-zA-Z0-9_]+$
        logo:
          type: string
          format: uri
        description:
          type: string
        email:
          type: string
          format: email
          nullable: true
          description: Email used to contact one or all group members, such as a mailing
            list, shared email, or exchange group.
          maxLength: 254
        keywords:
          type: array
          items:
            type: string
          readOnly: true
        access:
          allOf:
          - $ref: '#/components/schemas/AccessEnum'
          description: 'Public: Any registered user can view and join a public group.<br>Public
            (invite-only):Any registered user can view the group.  Only invited users
            can join.<br>Private: Registered users cannot see any details about the
            group, including membership.  Only invited users can join.'
        categories:
          type: array
          items:
            type: string
      required:
      - categories
      - description
      - group
      - keywords
      - pk
      - slug
      - title
    Dataset:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        workspace:
          type: string
          readOnly: true
        store:
          type: string
          readOnly: true
        storeType:
          type: string
          readOnly: true
        charset:
          type: string
          readOnly: true
        is_mosaic:
          type: boolean
          title: Is mosaic?
        has_time:
          type: boolean
          title: Has time?
        has_elevation:
          type: boolean
          title: Has elevation?
        time_regex:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TimeRegexEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        elevation_regex:
          type: string
          nullable: true
          maxLength: 128
        use_featureinfo_custom_template:
          type: boolean
          title: Use featureinfo custom template?
          description: specifies wether or not use a custom GetFeatureInfo template.
        featureinfo_custom_template:
          type: string
          nullable: true
          description: the custom GetFeatureInfo template HTML contents.
        default_style:
          type: string
          readOnly: true
          nullable: true
        styles:
          type: string
          readOnly: true
        attribute_set:
          type: string
          readOnly: true
          nullable: true
        resource_type:
          type: string
          readOnly: true
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
          nullable: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
        keywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
      required:
      - abstract
      - alternate
      - attribute_set
      - attribution
      - bbox_polygon
      - charset
      - constraints_other
      - created
      - data_quality_statement
      - date
      - date_type
      - default_style
      - detail_url
      - doi
      - edition
      - embed_url
      - featured
      - is_approved
      - is_published
      - language
      - last_updated
      - ll_bbox_polygon
      - maintenance_frequency
      - metadata_author
      - metadata_only
      - name
      - owner
      - pk
      - poc
      - polymorphic_ctype_id
      - popular_count
      - processed
      - purpose
      - rating
      - raw_abstract
      - raw_constraints_other
      - raw_data_quality_statement
      - raw_purpose
      - raw_supplemental_information
      - regions
      - resource_type
      - share_count
      - srid
      - store
      - storeType
      - styles
      - supplemental_information
      - temporal_extent_end
      - temporal_extent_start
      - thumbnail_url
      - title
      - uuid
      - workspace
    Map:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        zoom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        projection:
          type: string
          maxLength: 32
        center_x:
          type: number
          format: float
        center_y:
          type: number
          format: float
        urlsuffix:
          type: string
          title: Site URL
          maxLength: 255
        featuredurl:
          type: string
          title: Featured Map URL
          maxLength: 255
        resource_type:
          type: string
          readOnly: true
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
          nullable: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
        keywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
      required:
      - abstract
      - alternate
      - attribution
      - bbox_polygon
      - center_x
      - center_y
      - constraints_other
      - created
      - data_quality_statement
      - date
      - date_type
      - detail_url
      - doi
      - edition
      - embed_url
      - featured
      - is_approved
      - is_published
      - language
      - last_updated
      - ll_bbox_polygon
      - maintenance_frequency
      - metadata_author
      - metadata_only
      - owner
      - pk
      - poc
      - polymorphic_ctype_id
      - popular_count
      - processed
      - projection
      - purpose
      - rating
      - raw_abstract
      - raw_constraints_other
      - raw_data_quality_statement
      - raw_purpose
      - raw_supplemental_information
      - regions
      - resource_type
      - share_count
      - srid
      - supplemental_information
      - temporal_extent_end
      - temporal_extent_start
      - thumbnail_url
      - title
      - uuid
      - zoom
    NullEnum:
      enum:
      - null
    PaginatedDocumentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Document'
    PaginatedGeoAppList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/GeoApp'
    PaginatedGeoStoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/GeoStory'
    PaginatedGroupProfileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/GroupProfile'
    PaginatedDatasetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Dataset'
    PaginatedMapList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Map'
    PaginatedResourceBaseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResourceBase'
    PaginatedUploadSizeLimitList:
      type: object
      properties:
        links:
          type: object
          properties:
            next:
              type: string
              nullable: true
            previous:
              type: string
              nullable: true
        total:
          type: integer
          example: 123
        page:
          type: integer
          example: 123
        page_size:
          type: integer
          example: 123
        upload-size-limits:
          type: array
          items:
            $ref: '#/components/schemas/UploadSizeLimit'
    PaginatedUploadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Upload'
    PaginatedUserProfileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserProfile'
    PatchedDocument:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        href:
          type: string
          readOnly: true
        doc_type:
          type: string
          nullable: true
          maxLength: 128
        extension:
          type: string
          nullable: true
          maxLength: 128
        mime_type:
          type: string
          readOnly: true
        resource_type:
          type: string
          readOnly: true
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
          nullable: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
        keywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
    PatchedGeoApp:
      type: object
      description: '- Deferred / not Embedded --> ?include[]=data'
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        zoom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        projection:
          type: string
          nullable: true
          maxLength: 32
        center_x:
          type: number
          format: float
          nullable: true
        center_y:
          type: number
          format: float
          nullable: true
        urlsuffix:
          type: string
          nullable: true
          title: Site URL
          maxLength: 255
        data:
          type: string
        resource_type:
          type: string
          readOnly: true
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
          nullable: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
        keywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
    PatchedGeoStory:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        app_type:
          type: string
          title: Apps Type
          maxLength: 255
        zoom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        projection:
          type: string
          nullable: true
          maxLength: 32
        center_x:
          type: number
          format: float
          nullable: true
        center_y:
          type: number
          format: float
          nullable: true
        urlsuffix:
          type: string
          nullable: true
          title: Site URL
          maxLength: 255
        data:
          type: string
        resource_type:
          type: string
          readOnly: true
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
          nullable: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
        keywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
    PatchedGroupProfile:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        title:
          type: string
          maxLength: 1000
        group:
          type: string
        slug:
          type: string
          maxLength: 1000
          pattern: ^[-a-zA-Z0-9_]+$
        logo:
          type: string
          format: uri
        description:
          type: string
        email:
          type: string
          format: email
          nullable: true
          description: Email used to contact one or all group members, such as a mailing
            list, shared email, or exchange group.
          maxLength: 254
        keywords:
          type: array
          items:
            type: string
          readOnly: true
        access:
          allOf:
          - $ref: '#/components/schemas/AccessEnum'
          description: 'Public: Any registered user can view and join a public group.<br>Public
            (invite-only):Any registered user can view the group.  Only invited users
            can join.<br>Private: Registered users cannot see any details about the
            group, including membership.  Only invited users can join.'
        categories:
          type: array
          items:
            type: string
    PatchedDataset:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        workspace:
          type: string
          readOnly: true
        store:
          type: string
          readOnly: true
        storeType:
          type: string
          readOnly: true
        charset:
          type: string
          readOnly: true
        is_mosaic:
          type: boolean
          title: Is mosaic?
        has_time:
          type: boolean
          title: Has time?
        has_elevation:
          type: boolean
          title: Has elevation?
        time_regex:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TimeRegexEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        elevation_regex:
          type: string
          nullable: true
          maxLength: 128
        use_featureinfo_custom_template:
          type: boolean
          title: Use featureinfo custom template?
          description: specifies wether or not use a custom GetFeatureInfo template.
        featureinfo_custom_template:
          type: string
          nullable: true
          description: the custom GetFeatureInfo template HTML contents.
        default_style:
          type: string
          readOnly: true
          nullable: true
        styles:
          type: string
          readOnly: true
        attribute_set:
          type: string
          readOnly: true
          nullable: true
        resource_type:
          type: string
          readOnly: true
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
          nullable: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
        keywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
    PatchedMap:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        zoom:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        projection:
          type: string
          maxLength: 32
        center_x:
          type: number
          format: float
        center_y:
          type: number
          format: float
        urlsuffix:
          type: string
          title: Site URL
          maxLength: 255
        featuredurl:
          type: string
          title: Featured Map URL
          maxLength: 255
        resource_type:
          type: string
          readOnly: true
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
          nullable: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
        date_type:
          type: string
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        constraints_other:
          type: string
        language:
          type: string
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        embed_url:
          type: string
        thumbnail_url:
          type: string
        keywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        restriction_code_type:
          type: string
          nullable: true
        license:
          type: string
          nullable: true
        spatial_representation_type:
          type: string
          nullable: true
    PatchedResourceBase:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        resource_type:
          type: string
          readOnly: true
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
          nullable: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        keywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        date:
          type: string
          format: date-time
        date_type:
          type: string
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        restriction_code_type:
          type: string
          nullable: true
        constraints_other:
          type: string
        license:
          type: string
          nullable: true
        language:
          type: string
        spatial_representation_type:
          type: string
          nullable: true
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        embed_url:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        thumbnail_url:
          type: string
    PatchedUpload:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 64
        date:
          type: string
          format: date-time
        create_date:
          type: string
          format: date-time
        user:
          type: integer
          nullable: true
        state:
          type: string
          maxLength: 16
        progress:
          type: string
          readOnly: true
        complete:
          type: boolean
        import_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        uploadfile_set:
          type: string
          readOnly: true
          nullable: true
        resume_url:
          type: string
          readOnly: true
        delete_url:
          type: string
          readOnly: true
        import_url:
          type: string
          readOnly: true
        detail_url:
          type: string
          readOnly: true
    PatchedUser:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
    PatchedUserProfile:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        avatar:
          type: string
          readOnly: true
    ResourceBase:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: string
          readOnly: true
        uuid:
          type: string
          readOnly: true
        resource_type:
          type: string
          readOnly: true
        polymorphic_ctype_id:
          type: string
          readOnly: true
        owner:
          type: string
          readOnly: true
          nullable: true
        poc:
          type: string
          readOnly: true
        metadata_author:
          type: string
          readOnly: true
        keywords:
          type: string
          nullable: true
        regions:
          type: string
          readOnly: true
          nullable: true
        category:
          type: string
          nullable: true
        title:
          type: string
        abstract:
          type: string
        attribution:
          type: string
        doi:
          type: string
        alternate:
          type: string
          readOnly: true
        bbox_polygon:
          type: string
        ll_bbox_polygon:
          type: string
        srid:
          type: string
        date:
          type: string
          format: date-time
        date_type:
          type: string
        edition:
          type: string
        purpose:
          type: string
        maintenance_frequency:
          type: string
        restriction_code_type:
          type: string
          nullable: true
        constraints_other:
          type: string
        license:
          type: string
          nullable: true
        language:
          type: string
        spatial_representation_type:
          type: string
          nullable: true
        temporal_extent_start:
          type: string
          format: date-time
        temporal_extent_end:
          type: string
          format: date-time
        supplemental_information:
          type: string
        data_quality_statement:
          type: string
        group:
          type: string
          nullable: true
        popular_count:
          type: string
        share_count:
          type: string
        rating:
          type: string
        featured:
          type: boolean
        is_published:
          type: boolean
        is_approved:
          type: boolean
        detail_url:
          type: string
          readOnly: true
        embed_url:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        raw_abstract:
          type: string
          readOnly: true
        raw_purpose:
          type: string
          readOnly: true
        raw_constraints_other:
          type: string
          readOnly: true
        raw_supplemental_information:
          type: string
          readOnly: true
        raw_data_quality_statement:
          type: string
          readOnly: true
        metadata_only:
          type: boolean
        processed:
          type: boolean
          readOnly: true
        thumbnail_url:
          type: string
      required:
      - abstract
      - alternate
      - attribution
      - bbox_polygon
      - constraints_other
      - created
      - data_quality_statement
      - date
      - date_type
      - detail_url
      - doi
      - edition
      - embed_url
      - featured
      - is_approved
      - is_published
      - language
      - last_updated
      - ll_bbox_polygon
      - maintenance_frequency
      - metadata_author
      - metadata_only
      - owner
      - pk
      - poc
      - polymorphic_ctype_id
      - popular_count
      - processed
      - purpose
      - rating
      - raw_abstract
      - raw_constraints_other
      - raw_data_quality_statement
      - raw_purpose
      - raw_supplemental_information
      - regions
      - resource_type
      - share_count
      - srid
      - supplemental_information
      - temporal_extent_end
      - temporal_extent_start
      - thumbnail_url
      - title
      - uuid
    TimeRegexEnum:
      enum:
      - '[0-9]{8}'
      - '[0-9]{8}T[0-9]{6}'
      - '[0-9]{8}T[0-9]{6}Z'
      type: string
    UploadSizeLimit:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        slug:
          type: string
          readOnly: true
          maxLength: 255
          example: "dataset_upload_size"
        description:
          type: string
          maxLength: 255
          nullable: true
        max_size:
          type: integer
          example: 104857600
        max_size_label:
          type: string
          example: "100.0 MB"
        link:
          type: string
          exemple: "http://localhost:8000/api/v2/upload-size-limits/dataset_upload_size"
      required:
      - slug
      - max_size
    Upload:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 64
        date:
          type: string
          format: date-time
        create_date:
          type: string
          format: date-time
        user:
          type: integer
          nullable: true
        state:
          type: string
          maxLength: 16
        progress:
          type: string
          readOnly: true
        complete:
          type: boolean
        import_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        uploadfile_set:
          type: string
          readOnly: true
          nullable: true
        resume_url:
          type: string
          readOnly: true
        delete_url:
          type: string
          readOnly: true
        import_url:
          type: string
          readOnly: true
        detail_url:
          type: string
          readOnly: true
      required:
      - delete_url
      - detail_url
      - id
      - import_url
      - progress
      - resume_url
      - state
      - uploadfile_set
    User:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
      required:
      - url
      - username
    UserProfile:
      type: object
      description: DREST-compatible model-based serializer.
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        avatar:
          type: string
          readOnly: true
      required:
      - avatar
      - pk
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
    oauth2:
      type: oauth2
      flows: {}
